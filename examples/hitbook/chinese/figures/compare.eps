%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: UTF8
%%Title: (\351\231\210\345\212\240\346\272\220_ICANN.pdf)
%%Creator: (Adobe Acrobat 20.6.0)
%%For: hitccc
%%CreationDate: 2021/5/17, 21:45
%%BoundingBox: -1 0 351 254
%%HiResBoundingBox: 0 0 350.3398 253.4499
%%CropBox: 0 0 350.3398 253.4499
%%LanguageLevel: 2
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentNeededFeatures: (atend)
%%DocumentSuppliedFeatures: (atend)
%%DocumentData: Clean7Bit
%%Pages: (atend)
%%DocumentProcessColors: (atend)
%%DocumentCustomColors: (atend)
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$None SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_AGM_Core/driver_media_override gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
[/NamespacePush pdfmark_5
[/_objdef {Doc_Metadata} /type /stream /OBJ pdfmark_5
[{Doc_Metadata} 1153 (% &end XMP packet& %) ReadBypdfmark_5_string
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c016 91.163616, 2018/10/29-16:58:49        ">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
    xmlns:xmp="http://ns.adobe.com/xap/1.0/"
    xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
    xmlns:dc="http://purl.org/dc/elements/1.1/"
   pdf:Producer="GPL Ghostscript 9.50"
   pdf:Keywords=""
   xmp:ModifyDate="2021-05-17T21:45:09+08:00"
   xmp:CreateDate="2021-03-23T21:13:19+08:00"
   xmp:CreatorTool="LaTeX with hyperref"
   xmp:MetadataDate="2021-05-17T21:45:09+08:00"
   xmpMM:DocumentID="uuid:15efea3b-c3f6-11f6-0000-c2a1ded79167"
   xmpMM:InstanceID="uuid:b55c61e4-03a1-6f41-9f48-8ba0bf18109f"
   dc:format="application/pdf">
   <dc:title>
    <rdf:Alt>
     <rdf:li xml:lang="x-default"/>
    </rdf:Alt>
   </dc:title>
   <dc:creator>
    <rdf:Seq>
     <rdf:li/>
    </rdf:Seq>
   </dc:creator>
   <dc:description>
    <rdf:Alt>
     <rdf:li xml:lang="x-default"/>
    </rdf:Alt>
   </dc:description>
  </rdf:Description>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Doc_Metadata} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT pdfmark_5
[/Document 1 dict begin /Metadata {Doc_Metadata} def currentdict end /BDC pdfmark_5
[/NamespacePop pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 10 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Core/driver_media_override gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%%EndPageSetup
1 -1 scale 0 -253.45 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
-1.52588e-05 0 mo
-1.52588e-05 253.45 li
350.34 253.45 li
350.34 0 li
cp
clp
6.13329 102.457 mo
124.033 102.457 li
124.033 -5.8183 li
6.13329 -5.8183 li
cp
false sop
/0 
<<
/Name (Black)
/0 
[/DeviceCMYK] /CSA add_res
/CSA /0 get_csa_by_name
/MappedCSA /0 /CSA get_res
/TintMethod /Subtractive
/TintProc null
/NComponents 4 
/Components [ 0 0 0 1 ] 
>>
/CSD add_res
1 /0 /CSD get_res sepcs
0 sep
f
20.8713 88.9217 mo
112.244 88.9217 li
112.244 7.17371 li
20.8713 7.17371 li
cp
f
gsave
20.8713 88.9218 mo
112.237 88.9218 li
112.237 7.18079 li
20.8713 7.18079 li
cp
clp
.267347 lw
0 lc
1 lj
10 ml
[.989184 .427755 ] 0 dsh
true sadj
30.0083 88.9217 mo
30.0083 7.17371 li
1 /0 /CSD get_res sepcs
.310547 sep
@
grestore
30.0083 88.9217 mo
30.0083 87.7527 li
1 /0 /CSD get_res sepcs
1 sep
f
.267347 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
30.0083 88.9217 mo
30.0083 87.7527 li
@
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
%ADOBeginSubsetFont: NOAXUG+ Initial
10 dict begin
ct_T3Defs
/FontType 3 def
/FontName /NOAXUG+ def
/FontMatrix [0.001 0 0 0.001 0 0 ] def
/FontBBox [-1.021 -0.463 1.793 1.232 ] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 32 /one put
dup 33 /zero put
 def
/GlyphProcs 256 dict begin
/.notdef {250 0 0 0 250 0 setcachedevice}bind def
/one {636 0 110 0 543.999 729 setcachedevice124 83 mo
285 83 li
285 639.002 li
110 604.001 li
110 693.999 li
284 729 li
383 729 li
383 83 li
543.999 83 li
543.999 0 li
124 0 li
124 83 li
false sop
ef
}bind def
/zero {636 0 66.0003 -13 570 742 setcachedevice318 663.999 mo
267 663.999 229 638.999 203 588.998 cv
177 539.002 165 464.001 165 364 cv
165 264 177 189 203 139 cv
229 89 267 64 318 64 cv
369 64 407 89 433 139 cv
458.001 189 471.002 264 471.002 364 cv
471.002 464.001 458.001 539.002 433 588.998 cv
407 638.999 369 663.999 318 663.999 cv
318 742 mo
399 742 461.001 709.002 505.002 644.999 cv
548.001 579.998 570.002 486.001 570.002 364 cv
570.002 241 548.001 147 505.002 83.0003 cv
461.001 19 399 -13 318 -13 cv
236 -13 173 19 130 83.0003 cv
87.0002 147 66.0003 241 66.0003 364 cv
66.0003 486.001 87.0002 579.998 130 644.999 cv
173 709.002 236 742 318 742 cv
false sop
ef
}bind def
currentdict end def FontName currentdict end definefont pop
%ADOEndSubsetFont
/NOAXUH+ /NOAXUG+ findfont ct_VMDictPut/NOAXUH+*1 [32{/.notdef}rp /one /zero 222{/.notdef}rp]NOAXUH+ nfNOAXUH+*1 [4.67857 0 0 -4.67857 0 0 ]msf27.0323 93.6476 mo( !)[2.97656 0 ]xshgsave
20.8713 88.9218 mo
112.237 88.9218 li
112.237 7.18079 li
20.8713 7.18079 li
cp
clp
.267347 lw
0 lc
1 lj
10 ml
[.989184 .427755 ] 0 dsh
true sadj
48.2823 88.9217 mo
48.2823 7.17371 li
false sop
1 /0 /CSD get_res sepcs
.310547 sep
@
grestore
48.2823 88.9217 mo
48.2823 87.7527 li
false sop
1 /0 /CSD get_res sepcs
1 sep
f
.267347 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
48.2823 88.9217 mo
48.2823 87.7527 li
@
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
%ADOBeginSubsetFont: NOAXUG+ AddGlyphs
systemdict begin NOAXUH+
/GlyphProcs get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/three {636 0 76 -13 556 742 setcachedevice406 393 mo
453 383 490.003 362 516 330 cv
542.002 298 556 258 556 212 cv
556 140 530.999 83.9999 482 45 cv
432 6.00001 362 -13 271 -13 cv
240 -13 208 -10 176 -4 cv
144 1 110 10 76 22 cv
76 117 li
103 101 133 89 166 81 cv
198 73.0001 232 69.0001 268 69.0001 cv
330 69.0001 377 81 409 105 cv
441 129 458.001 165 458.001 212 cv
458.001 254 443 288 413 312 cv
383 336 341 349 287 349 cv
202 349 li
202 430 li
291 430 li
339 430 376 439 402 459.002 cv
428 477.998 441 505.999 441 542.999 cv
441 579.998 427 609 401 629.002 cv
374 649 336 659.001 287 659.001 cv
260 659.001 231 656.001 200 650.001 cv
169 644.002 135 635.002 98 622.998 cv
98 711 li
135 721.001 170 728.999 203 734.002 cv
235 739 266 742 296 742 cv
370 742 429 724.998 473 690.998 cv
517.001 656.998 539.002 610.999 539.002 553 cv
539.002 513 527.002 479 504 451 cv
480.998 423 448 403 406 393 cv
false sop
ef
}bind def
systemdict /gcheck known {setglobal} if end end
%ADOEndSubsetFont
/NOAXUH+*1 [32{/.notdef}rp /one /zero /three 221{/.notdef}rp]NOAXUH+ nfNOAXUH+*1 [4.67857 0 0 -4.67857 0 0 ]msf45.3063 93.6476 mo("!)[2.97656 0 ]xshgsave
20.8713 88.9218 mo
112.237 88.9218 li
112.237 7.18079 li
20.8713 7.18079 li
cp
clp
.267347 lw
0 lc
1 lj
10 ml
[.989184 .427755 ] 0 dsh
true sadj
66.5573 88.9217 mo
66.5573 7.17371 li
false sop
1 /0 /CSD get_res sepcs
.310547 sep
@
grestore
66.5573 88.9217 mo
66.5573 87.7527 li
false sop
1 /0 /CSD get_res sepcs
1 sep
f
.267347 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
66.5573 88.9217 mo
66.5573 87.7527 li
@
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
%ADOBeginSubsetFont: NOAXUG+ AddGlyphs
systemdict begin NOAXUH+
/GlyphProcs get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/five {636 0 77 -13 548.999 729 setcachedevice108 729 mo
495 729 li
495 646.001 li
198 646.001 li
198 466.998 li
212 471.998 227 476.001 241 478 cv
255 479.999 270 481.998 284 481.998 cv
365 481.998 429 459.001 476.998 415 cv
525 370 548.999 310 548.999 234 cv
548.999 155 523.999 93.9998 474.999 51 cv
426 7.99999 357 -13 269 -13 cv
238 -13 207 -10 175 -5.99998 cv
143 -1 111 5.99998 76.9998 17 cv
76.9998 116 li
106 100 136 88.0001 168 79.9999 cv
199 72.0001 232 69 267 69 cv
323 69 368 83 401 113 cv
433 143 449.998 183 449.998 234 cv
449.998 284 433 324 401 354 cv
368 384 323 399 267 399 cv
241 399 214 396 188 390 cv
162 384 135 375 108 363 cv
108 729 li
false sop
ef
}bind def
systemdict /gcheck known {setglobal} if end end
%ADOEndSubsetFont
/NOAXUH+*1 [32{/.notdef}rp /one /zero /three /five 220{/.notdef}rp]NOAXUH+ nfNOAXUH+*1 [4.67857 0 0 -4.67857 0 0 ]msf63.5803 93.6476 mo(#!)[2.97656 0 ]xshgsave
20.8713 88.9218 mo
112.237 88.9218 li
112.237 7.18079 li
20.8713 7.18079 li
cp
clp
.267347 lw
0 lc
1 lj
10 ml
[.989184 .427755 ] 0 dsh
true sadj
84.8313 88.9217 mo
84.8313 7.17371 li
false sop
1 /0 /CSD get_res sepcs
.310547 sep
@
grestore
84.8313 88.9217 mo
84.8313 87.7527 li
false sop
1 /0 /CSD get_res sepcs
1 sep
f
.267347 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
84.8313 88.9217 mo
84.8313 87.7527 li
@
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
%ADOBeginSubsetFont: NOAXUG+ AddGlyphs
systemdict begin NOAXUH+
/GlyphProcs get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/seven {636 0 82 0 550.998 729 setcachedevice81.9999 729 mo
550.998 729 li
550.998 686.999 li
286 0 li
183 0 li
432 646.001 li
81.9999 646.001 li
81.9999 729 li
false sop
ef
}bind def
systemdict /gcheck known {setglobal} if end end
%ADOEndSubsetFont
/NOAXUH+*1 [32{/.notdef}rp /one /zero /three /five /seven 219{/.notdef}rp]NOAXUH+ nfNOAXUH+*1 [4.67857 0 0 -4.67857 0 0 ]msf81.8553 93.6476 mo($!)[2.97658 0 ]xshgsave
20.8713 88.9218 mo
112.237 88.9218 li
112.237 7.18079 li
20.8713 7.18079 li
cp
clp
.267347 lw
0 lc
1 lj
10 ml
[.989184 .427755 ] 0 dsh
true sadj
103.106 88.9217 mo
103.106 7.17371 li
false sop
1 /0 /CSD get_res sepcs
.310547 sep
@
grestore
103.106 88.9217 mo
103.106 87.7527 li
false sop
1 /0 /CSD get_res sepcs
1 sep
f
.267347 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
103.106 88.9217 mo
103.106 87.7527 li
@
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
%ADOBeginSubsetFont: NOAXUG+ AddGlyphs
systemdict begin NOAXUH+
/GlyphProcs get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/nine {636 0 63 -13 566 742 setcachedevice110 15 mo
110 105 li
134 93 159 83.9999 185 78.0002 cv
210 72 235 69.0001 260 69.0001 cv
324 69.0001 374 90.0001 408 134 cv
442 178 462.002 244 468.002 334 cv
448 306 424 284 396 269 cv
367 254 335 247 300 247 cv
226 247 168 269 126 313 cv
83.9999 357 62.9999 417 62.9999 493.999 cv
62.9999 567.999 85 628.001 129 674 cv
173 718.998 232 742 306 742 cv
390 742 455 709.002 499.002 644.999 cv
542.999 579.998 566.001 486.001 566.001 364 cv
566.001 248 538 157 483.998 89 cv
429 21 356 -13 264 -13 cv
239 -13 214 -10 189 -6.00001 cv
163 -2 137 4.99999 110 15 cv
306 324 mo
350 324 385 339 411 369 cv
437 399 450 441 450 493.999 cv
450 545.998 437 588.001 411 618 cv
385 647.998 350 663.999 306 663.999 cv
262 663.999 227 647.998 201 618 cv
175 588.001 162 545.998 162 493.999 cv
162 441 175 399 201 369 cv
227 339 262 324 306 324 cv
false sop
ef
}bind def
/M {863 0 98 0 765 728.998 setcachedevice97.9998 728.998 mo
245 728.998 li
431 233 li
617.998 728.998 li
765 728.998 li
765 0 li
668.999 0 li
668.999 640 li
481.002 140 li
382 140 li
194 640 li
194 0 li
97.9998 0 li
97.9998 728.998 li
false sop
ef
}bind def
/i {278 0 94 0 184 760 setcachedevice93.9999 547 mo
184 547 li
184 0 li
93.9999 0 li
93.9999 547 li
93.9999 760 mo
184 760 li
184 646 li
93.9999 646 li
93.9999 760 li
false sop
ef
}bind def
/s {521 0 54.0001 -13 472 560 setcachedevice443.001 531 mo
443.001 446 li
417 458.001 391 467.998 364 475 cv
336 480.998 308 485.001 279 485.001 cv
234 485.001 200 477.999 178 463.999 cv
156 449.999 145 430.001 145 403 cv
145 381.999 153 365.999 169 353.999 cv
185 342 217 330 265 320 cv
296 313 li
360.001 299 405 279 432 255 cv
458.001 230 472.001 195 472.001 151 cv
472.001 99.9998 451.999 60 411.998 31 cv
372.001 .999998 316 -13 246 -13 cv
216 -13 186 -9.99998 154 -5.00001 cv
122 0 89.0001 7.99999 54.0001 20 cv
54.0001 113 li
86.9999 95 120 82.0001 152 74 cv
184 64.9998 216 61.0001 248 61.0001 cv
290 61.0001 323 68.0001 346.001 82.0001 cv
367.999 96.0001 379.999 117 379.999 144 cv
379.999 168 370.998 187 354.998 200 cv
339 213 303 226 247 238 cv
216 245 li
160 257 119 275 95 299 cv
69.9999 323 57.9998 355.998 57.9998 398.998 cv
57.9998 449.999 75.9998 490 112 518 cv
148 546 200 560 268 560 cv
301 560 332 557 362 551.998 cv
391 546.999 418 540.001 443.001 531 cv
false sop
ef
}bind def
/n {634 0 91 0 548.999 560 setcachedevice548.999 330 mo
548.999 0 li
459 0 li
459 327 li
459 378.999 448 417 428.001 443.001 cv
407.999 468.998 378 481.998 338 481.998 cv
289 481.998 251 465.999 223 434.999 cv
195 404 181 362 181 309 cv
181 0 li
90.9999 0 li
90.9999 546.999 li
181 546.999 li
181 462 li
202 493.999 227 518.999 257 534.999 cv
286 550.998 320 560 358.001 560 cv
420 560 467.998 540.001 500.001 501 cv
532 462 548.999 405 548.999 330 cv
false sop
ef
}bind def
/g {635 0 55 -207 544 560 setcachedevice453.998 280 mo
453.998 344.001 439.998 394.999 414.001 431 cv
387.001 466.998 349 485.001 301 485.001 cv
253 485.001 215 466.998 188 431 cv
161 394.999 148 344.001 148 280 cv
148 215 161 165 188 129 cv
215 92.9998 253 75.0001 301 75.0001 cv
349 75.0001 387.001 92.9998 414.001 129 cv
439.998 165 453.998 215 453.998 280 cv
544 68.0001 mo
544 -24 522.998 -92.9998 481.998 -139 cv
439.998 -184 377 -207 292 -207 cv
260 -207 231 -204 203 -200 cv
175 -195 147 -188 121 -178 cv
121 -90.9999 li
147 -105 173 -115 199 -122 cv
225 -129 251 -133 278 -133 cv
336 -133 379.999 -117 409.999 -86.9999 cv
438.998 -56 453.998 -9.99998 453.998 51.9999 cv
453.998 96.0001 li
434.999 64 410.998 40.0001 381.999 24 cv
352.999 7.99999 319 0 279 0 cv
211 0 157 25 116 75.9998 cv
75.0001 127 54.9999 195 54.9999 280 cv
54.9999 364 75.0001 432 116 482.998 cv
157 533.999 211 560 279 560 cv
319 560 352.999 551.998 381.999 535.999 cv
410.998 519.999 434.999 495.998 453.998 463.999 cv
453.998 546.999 li
544 546.999 li
544 68.0001 li
false sop
ef
}bind def
systemdict /gcheck known {setglobal} if end end
%ADOEndSubsetFont
/NOAXUH+*1 [32{/.notdef}rp /one /zero /three /five /seven /nine /M /i /s /n /g 213{/.notdef}rp]NOAXUH+ nfNOAXUH+*1 [4.67857 0 0 -4.67857 0 0 ]msf100.13 93.6476 mo(%!)[2.97658 0 ]xsh46.8799 99.5113 mo(&'\(\('\)*)[4.03674 1.29961 2.43752 2.43752 1.3 2.96524 0 ]xsh%ADOBeginSubsetFont: NOAXUI+ Initial
10 dict begin
ct_T3Defs
/FontType 3 def
/FontName /NOAXUI+ def
/FontMatrix [0.001 0 0 0.001 0 0 ] def
/FontBBox [-1.021 -0.463 1.793 1.232 ] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 32 /space put
dup 33 /R put
dup 34 /a put
dup 35 /t put
dup 36 /e put
dup 37 /parenleft put
dup 38 /percent put
dup 39 /parenright put
 def
/GlyphProcs 256 dict begin
/.notdef {250 0 0 0 250 0 setcachedevice}bind def
/space {318 0 0 0 .01 .01 setcachedevice}bind def
/R {695 0 98 0 666 729 setcachedevice444 342 mo
464.999 334 486.001 319 506.002 296 cv
525.998 272 545.998 240 565.999 199 cv
666.002 0 li
560.001 0 li
466.998 187 li
443 235 419 268 397 284 cv
374 300 343 308 304 308 cv
197 308 li
197 0 li
97.9999 0 li
97.9999 729 li
321 729 li
404 729 466.001 710.998 506.999 676.999 cv
547.997 641.998 569 589 569 518.998 cv
569 473 557.998 434 537 404 cv
515 374 483.998 353 444 342 cv
197 648 mo
197 389 li
321 389 li
368 389 404 400 428 422 cv
451.998 444 464.999 476.001 464.999 518.998 cv
464.999 560.999 451.998 592.999 428 614.998 cv
404 636.998 368 648 321 648 cv
197 648 li
false sop
ef
}bind def
/a {613 0 60 -13 521.999 560 setcachedevice343 275 mo
270 275 220 266 192 250 cv
164 233 150 205 150 165 cv
150 133 160 107 181 89.0001 cv
202 69.9999 231 61.0001 267 61.0001 cv
317 61.0001 356.998 78 387.001 114 cv
417 149 432 196 432 255 cv
432 275 li
343 275 li
521.999 312 mo
521.999 0 li
432 0 li
432 82.9998 li
410.998 49 384.998 25 354.998 9.99998 cv
325 -5.00001 287 -13 243 -13 cv
187 -13 142 2 109 33 cv
75.9998 64 60 106 60 159 cv
60 220 79.9999 266 122 298 cv
163 329 224 345.001 306 345.001 cv
432 345.001 li
432 353.999 li
432 394.999 418 426.998 391 449.999 cv
364 472.001 326 484.001 277 484.001 cv
245 484.001 215 479.999 185 472.001 cv
155 463.999 127 452.998 99.9998 438.998 cv
99.9998 521.999 li
132 533.999 164 544 195 549.999 cv
226 556 256 560 286 560 cv
364.999 560 423.999 538.998 462.999 498.001 cv
502 457.001 521.999 394.999 521.999 312 cv
false sop
ef
}bind def
/t {392 0 27 0 368 702 setcachedevice183 702 mo
183 547 li
368 547 li
368 476.998 li
183 476.998 li
183 180 li
183 135 189 106 201 94 cv
213 81.0001 238 74.9999 276 74.9999 cv
368 74.9999 li
368 0 li
276 0 li
206 0 158 13 132 39 cv
106 65 92.9999 112 92.9999 180 cv
92.9999 476.998 li
27 476.998 li
27 547 li
92.9999 547 li
92.9999 702 li
183 702 li
false sop
ef
}bind def
/e {615 0 55.0001 -13 562 560 setcachedevice562 296 mo
562 252 li
149 252 li
153 190 171 142 205 110 cv
238 78 284 61.9999 344 61.9999 cv
377.998 61.9999 412.001 65.9998 444 73.9998 cv
476 81.9999 508.999 95 540.999 113 cv
540.999 28 li
508.999 14 476 3 442.001 -3 cv
408.001 -8.99999 372.999 -13 339 -13 cv
251 -13 182 12 131 61.9999 cv
79.9998 112 55.0001 181 55.0001 268 cv
55.0001 357.001 78.9999 427.999 127 480.999 cv
175 533 241 560 323 560 cv
396.999 560 454.999 535.999 498.001 488.998 cv
539.999 441.001 562 376.998 562 296 cv
472 322 mo
471 370.999 456.999 410.001 430.998 440.001 cv
403.998 469.001 367.999 483.999 324 483.999 cv
274 483.999 234 469.001 204 441.001 cv
174 413.001 156 372.999 152 322 cv
472 322 li
false sop
ef
}bind def
/parenleft {390 0 86 -131 310 759 setcachedevice310 759 mo
266 683.002 234 609.002 213 535.998 cv
191 463 181 389 181 314 cv
181 238 191 164 213 90.9999 cv
234 17 266 -56.0002 310 -131 cv
232 -131 li
183 -53.9998 146 20 122 94 cv
97.9999 168 85.9998 241 85.9998 314 cv
85.9998 386 97.9999 459 122 532.999 cv
146 607 182 682.001 232 759 cv
310 759 li
false sop
ef
}bind def
/percent {950 0 55.0002 -13 895 741.999 setcachedevice726.998 321 mo
699.001 321 676 309 660 285 cv
643.999 261 635.999 227 635.999 184 cv
635.999 142 643.999 108 660 83.9999 cv
676 60.0002 699.001 48 726.998 48 cv
755.001 48 776.998 60.0002 792.998 83.9999 cv
808.998 108 816.998 142 816.998 184 cv
816.998 226 808.998 260 792.998 284 cv
776.998 308 755.001 321 726.998 321 cv
726.998 383 mo
778.002 383 819.002 365 848.998 329 cv
879 293 895 244 895 184 cv
895 123 879 74.9999 848.998 40 cv
819.002 4 778.002 -13 726.998 -13 cv
675 -13 633.001 4 603 40 cv
572.998 74.9999 558.003 123 558.003 184 cv
558.003 245 572.998 293 603 329 cv
633.001 365 675 383 726.998 383 cv
223 680.003 mo
195 680.003 173 667 157 643 cv
141 619 133 586 133 544 cv
133 500 141 467 157 443 cv
173 419 195 407 223 407 cv
251 407 274 419 290 443 cv
306 467 314 500 314 544 cv
314 586 305 619 289 643 cv
273 667 251 680.003 223 680.003 cv
664.002 741.999 mo
741.999 741.999 li
286 -13 li
208 -13 li
664.002 741.999 li
223 741.999 mo
274 741.999 315 724 346 688.003 cv
376 652 392 603.999 392 544 cv
392 482 376 434 346 398 cv
316 362 275 345 223 345 cv
171 345 130 362 100 398 cv
70 434 55.0002 482 55.0002 544 cv
55.0002 603.999 70 652 100 688.003 cv
130 724 171 741.999 223 741.999 cv
false sop
ef
}bind def
/parenright {390 0 80 -131 304 759 setcachedevice80 759 mo
158 759 li
206 682.001 243 607 267 532.999 cv
291 459 304 386 304 314 cv
304 241 291 168 267 94 cv
243 20 206 -53.9998 158 -131 cv
80 -131 li
123 -56.0002 155 17 177 90.9999 cv
198 164 209 238 209 314 cv
209 389 198 463 177 535.998 cv
155 609.002 123 683.002 80 759 cv
false sop
ef
}bind def
currentdict end def FontName currentdict end definefont pop
%ADOEndSubsetFont
/NOAXUJ+ /NOAXUI+ findfont ct_VMDictPut/NOAXUJ+*1 [32{/.notdef}rp /space /R /a /t /e /parenleft /percent /parenright 216{/.notdef}rp]NOAXUJ+ nfNOAXUJ+*1 [4.67857 0 0 -4.67857 0 0 ]msf64.3264 99.5113 mo( !"#$ %&')[1.48708 3.25082 2.86682 1.83398 2.87854 1.48708 1.82539 4.44568 0 ]xshgsave
20.8713 88.9218 mo
112.237 88.9218 li
112.237 7.18079 li
20.8713 7.18079 li
cp
clp
.267347 lw
0 lc
1 lj
10 ml
[.989184 .427755 ] 0 dsh
true sadj
20.8713 88.9217 mo
112.243 88.9217 li
false sop
1 /0 /CSD get_res sepcs
.310547 sep
@
grestore
20.8713 88.9217 mo
22.0403 88.9217 li
false sop
1 /0 /CSD get_res sepcs
1 sep
f
.267347 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
20.8713 88.9217 mo
22.0403 88.9217 li
@
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
%ADOBeginSubsetFont: NOAXUI+ AddGlyphs
systemdict begin NOAXUJ+
/GlyphProcs get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/zero {636 0 66.0003 -13 570 742 setcachedevice318 663.999 mo
267 663.999 229 638.999 203 588.998 cv
177 539.002 165 464.001 165 364 cv
165 264 177 189 203 139 cv
229 89 267 64 318 64 cv
369 64 407 89 433 139 cv
458.001 189 471.002 264 471.002 364 cv
471.002 464.001 458.001 539.002 433 588.998 cv
407 638.999 369 663.999 318 663.999 cv
318 742 mo
399 742 461.001 709.002 505.002 644.999 cv
548.001 579.998 570.002 486.001 570.002 364 cv
570.002 241 548.001 147 505.002 83.0003 cv
461.001 19 399 -13 318 -13 cv
236 -13 173 19 130 83.0003 cv
87.0002 147 66.0003 241 66.0003 364 cv
66.0003 486.001 87.0002 579.998 130 644.999 cv
173 709.002 236 742 318 742 cv
false sop
ef
}bind def
/period {318 0 107 0 209.999 124 setcachedevice107 124 mo
209.999 124 li
209.999 0 li
107 0 li
107 124 li
false sop
ef
}bind def
systemdict /gcheck known {setglobal} if end end
%ADOEndSubsetFont
/NOAXUJ+*1 [32{/.notdef}rp /space /R /a /t /e /parenleft /percent /parenright /zero /period 214{/.notdef}rp]NOAXUJ+ nfNOAXUJ+*1 [4.67857 0 0 -4.67857 0 0 ]msf12.2603 90.7006 mo(\(\)\()[2.97656 1.48709 0 ]xshgsave
20.8713 88.9218 mo
112.237 88.9218 li
112.237 7.18079 li
20.8713 7.18079 li
cp
clp
.267347 lw
0 lc
1 lj
10 ml
[.989184 .427755 ] 0 dsh
true sadj
20.8713 70.7557 mo
112.243 70.7557 li
false sop
1 /0 /CSD get_res sepcs
.310547 sep
@
grestore
20.8713 70.7557 mo
22.0403 70.7557 li
false sop
1 /0 /CSD get_res sepcs
1 sep
f
.267347 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
20.8713 70.7557 mo
22.0403 70.7557 li
@
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
%ADOBeginSubsetFont: NOAXUI+ AddGlyphs
systemdict begin NOAXUJ+
/GlyphProcs get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/two {636 0 73.0001 0 536 742 setcachedevice192 83.0003 mo
536.002 83.0003 li
536.002 0 li
73.0001 0 li
73.0001 83.0003 li
110 121 161 173 226 239 cv
290 304 331 346 348 365 cv
380 400 402 430 414 455 cv
426 479 433 504 433 527.999 cv
433 566.001 419 598.002 392 622.001 cv
365 646 330 659.001 286 659.001 cv
255 659.001 222 653.001 188 643 cv
154 632.002 117 616.001 78.0002 594.001 cv
78.0002 694.003 li
118 709.999 155 721.998 189 730.001 cv
223 737.999 255 742 284 742 cv
359 742 419 723 464.001 684.998 cv
508.999 647.002 532.001 597.001 532.001 533.999 cv
532.001 504 526.001 474.999 514.998 449 cv
504 422 483.998 390 454 354 cv
446 344 420 317 376 272 cv
332 227 271 164 192 83.0003 cv
false sop
ef
}bind def
systemdict /gcheck known {setglobal} if end end
%ADOEndSubsetFont
/NOAXUJ+*1 [32{/.notdef}rp /space /R /a /t /e /parenleft /percent /parenright /zero /period /two 213{/.notdef}rp]NOAXUJ+ nfNOAXUJ+*1 [4.67857 0 0 -4.67857 0 0 ]msf12.2603 72.5336 mo(\(\)*)[2.97656 1.48709 0 ]xshgsave
20.8713 88.9218 mo
112.237 88.9218 li
112.237 7.18079 li
20.8713 7.18079 li
cp
clp
.267347 lw
0 lc
1 lj
10 ml
[.989184 .427755 ] 0 dsh
true sadj
20.8713 52.5897 mo
112.243 52.5897 li
false sop
1 /0 /CSD get_res sepcs
.310547 sep
@
grestore
20.8713 52.5897 mo
22.0403 52.5897 li
false sop
1 /0 /CSD get_res sepcs
1 sep
f
.267347 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
20.8713 52.5897 mo
22.0403 52.5897 li
@
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
%ADOBeginSubsetFont: NOAXUI+ AddGlyphs
systemdict begin NOAXUJ+
/GlyphProcs get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/four {636 0 49 0 580 729 setcachedevice378 643 mo
129 254 li
378 254 li
378 643 li
352 729 mo
476.001 729 li
476.001 254 li
580.002 254 li
580.002 172 li
476.001 172 li
476.001 0 li
378 0 li
378 172 li
49 172 li
49 267 li
352 729 li
false sop
ef
}bind def
systemdict /gcheck known {setglobal} if end end
%ADOEndSubsetFont
/NOAXUJ+*1 [32{/.notdef}rp /space /R /a /t /e /parenleft /percent /parenright /zero /period /two /four 212{/.notdef}rp]NOAXUJ+ nfNOAXUJ+*1 [4.67857 0 0 -4.67857 0 0 ]msf12.2603 54.3676 mo(\(\)+)[2.97656 1.48709 0 ]xshgsave
20.8713 88.9218 mo
112.237 88.9218 li
112.237 7.18079 li
20.8713 7.18079 li
cp
clp
.267347 lw
0 lc
1 lj
10 ml
[.989184 .427755 ] 0 dsh
true sadj
20.8713 34.4237 mo
112.243 34.4237 li
false sop
1 /0 /CSD get_res sepcs
.310547 sep
@
grestore
20.8713 34.4237 mo
22.0403 34.4237 li
false sop
1 /0 /CSD get_res sepcs
1 sep
f
.267347 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
20.8713 34.4237 mo
22.0403 34.4237 li
@
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
%ADOBeginSubsetFont: NOAXUI+ AddGlyphs
systemdict begin NOAXUJ+
/GlyphProcs get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/six {636 0 70.0002 -13 573 742 setcachedevice330 404 mo
286 404 251 388 225 358 cv
199 328 186 286 186 234 cv
186 181 199 139 225 109 cv
251 78.9998 286 64 330 64 cv
374 64 409 78.9998 435 109 cv
461.001 139 474.002 181 474.002 234 cv
474.002 286 461.001 328 435 358 cv
409 388 374 404 330 404 cv
526.001 712.999 mo
526.001 622.998 li
501 635.002 476 644.002 451 650.001 cv
425 656.001 400 659.001 376 659.001 cv
310 659.001 260 637 226 592.999 cv
192 548.998 172 482 168 394 cv
187 422 211 444 240 459.002 cv
269 474.002 301 482 336 482 cv
409 482 467 459.002 508.999 415 cv
551.001 371 573.002 310 573.002 234 cv
573.002 159 550 99.0002 505.999 53.9999 cv
462.002 9.00001 403 -13 330 -13 cv
246 -13 181 19 137 83.0003 cv
91.9999 147 70.0002 241 70.0002 364 cv
70.0002 479 96.9999 570.999 152 638.999 cv
206 706.999 280 742 372 742 cv
396 742 421 739 447 734.999 cv
471.999 730.001 498.001 723 526.001 712.999 cv
false sop
ef
}bind def
systemdict /gcheck known {setglobal} if end end
%ADOEndSubsetFont
/NOAXUJ+*1 [32{/.notdef}rp /space /R /a /t /e /parenleft /percent /parenright /zero /period /two /four /six 211{/.notdef}rp]NOAXUJ+ nfNOAXUJ+*1 [4.67857 0 0 -4.67857 0 0 ]msf12.2603 36.2017 mo(\(\),)[2.97656 1.48709 0 ]xshgsave
20.8713 88.9218 mo
112.237 88.9218 li
112.237 7.18079 li
20.8713 7.18079 li
cp
clp
.267347 lw
0 lc
1 lj
10 ml
[.989184 .427755 ] 0 dsh
true sadj
20.8713 16.2577 mo
112.243 16.2577 li
false sop
1 /0 /CSD get_res sepcs
.310547 sep
@
grestore
20.8713 16.2577 mo
22.0403 16.2577 li
false sop
1 /0 /CSD get_res sepcs
1 sep
f
.267347 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
20.8713 16.2577 mo
22.0403 16.2577 li
@
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
%ADOBeginSubsetFont: NOAXUI+ AddGlyphs
systemdict begin NOAXUJ+
/GlyphProcs get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/eight {636 0 68 -13 567.999 742 setcachedevice318 346 mo
271 346 234 333 207 308 cv
180 283 167 249 167 205 cv
167 161 180 126 207 101 cv
234 76 271 64 318 64 cv
364 64 401 76 428 102 cv
455 127 468.999 161 468.999 205 cv
468.999 249 455 283 429 308 cv
402 333 365 346 318 346 cv
219 388 mo
177 398 144 418 120 447 cv
95.9998 476 85 511.002 85 553 cv
85 610.999 105 656.998 147 690.998 cv
188 724.998 245 742 318 742 cv
390 742 447 724.998 489.001 690.998 cv
530.002 656.998 551.001 610.999 551.001 553 cv
551.001 511.002 539.002 476 514.998 447 cv
490.999 418 459.002 398 417 388 cv
464.001 377 501 355 527.999 323 cv
554.001 291 567.999 251 567.999 205 cv
567.999 134 545.998 79.9999 502.999 43 cv
459.002 4.99999 398 -13 318 -13 cv
237 -13 175 4.99999 132 43 cv
89 79.9999 68 134 68 205 cv
68 251 81 291 108 323 cv
134 355 171 377 219 388 cv
183 544 mo
183 505.999 194 476 218 455 cv
242 434 275 424 318 424 cv
360 424 393 434 417 455 cv
441 476 453 505.999 453 544 cv
453 582.001 441 610.999 417 632.002 cv
393 653.001 360 663.999 318 663.999 cv
275 663.999 242 653.001 218 632.002 cv
194 610.999 183 582.001 183 544 cv
false sop
ef
}bind def
/N {748 0 98 0 649.999 729 setcachedevice97.9999 729 mo
231 729 li
553.999 119 li
553.999 729 li
649.999 729 li
649.999 0 li
516.999 0 li
194 609.998 li
194 0 li
97.9999 0 li
97.9999 729 li
false sop
ef
}bind def
/M {863 0 98 0 765 728.998 setcachedevice97.9998 728.998 mo
245 728.998 li
431 233 li
617.998 728.998 li
765 728.998 li
765 0 li
668.999 0 li
668.999 640 li
481.002 140 li
382 140 li
194 640 li
194 0 li
97.9998 0 li
97.9998 728.998 li
false sop
ef
}bind def
/S {635 0 66.0003 -13 579 742 setcachedevice535 705 mo
535 609 li
496.999 626.999 462.002 640 429 649 cv
395 656.998 363 662.001 333 662.001 cv
279 662.001 237 650.998 208 631.001 cv
179 610.002 165 579.998 165 542.002 cv
165 510 174 485 194 468.999 cv
213 452 250 439 304 429 cv
364 417 li
437 403 490.999 378 526.001 343 cv
561.002 307 579.002 260 579.002 201 cv
579.002 130 554.998 77.0001 508.002 41 cv
459.999 4.99999 391 -13 300 -13 cv
265 -13 228 -9.00001 189 -2 cv
150 4.99999 110 16 69.0001 32 cv
69.0001 134 li
109 111 148 94.0001 186 83.0003 cv
224 70.9999 262 66.0003 300 66.0003 cv
356 66.0003 399 77.0001 430 99.0002 cv
459.999 121 476 152 476 194 cv
476 230 465.002 258 443 278 cv
421 298 385 313 335 323 cv
275 335 li
201 349 148 372 115 404 cv
82.0001 435 66.0003 477.998 66.0003 533.999 cv
66.0003 598.002 87.9999 649 134 686 cv
179 723 242 742 322 742 cv
356 742 390 739 426 733.001 cv
461.001 727.001 496.999 717 535 705 cv
false sop
ef
}bind def
/E {632 0 98 0 567.998 729 setcachedevice97.9999 729 mo
559 729 li
559 646.001 li
197 646.001 li
197 430 li
543.999 430 li
543.999 347 li
197 347 li
197 83 li
567.998 83 li
567.998 0 li
97.9999 0 li
97.9999 729 li
false sop
ef
}bind def
systemdict /gcheck known {setglobal} if end end
%ADOEndSubsetFont
/NOAXUJ+*1 [32{/.notdef}rp /space /R /a /t /e /parenleft /percent /parenright /zero /period /two /four /six /eight /N /M /S /E 206{/.notdef}rp]NOAXUJ+ nfNOAXUJ+*1 [4.67857 0 0 -4.67857 0 0 ]msf12.2603 18.0356 mo(\(\)-)[2.97656 1.48709 0 ]xshNOAXUJ+*1 [0 -4.67857 -4.67857 0 0 0 ]msf9.95229 54.7786 mo(./01)[-3.49957 -4.03674 -2.96991 0 ]yshgsave
20.8713 88.9218 mo
112.237 88.9218 li
112.237 7.18079 li
20.8713 7.18079 li
cp
clp
.668367 lw
0 lc
1 lj
10 ml
[4.27755 1.06939 .668367 1.06939 ] 0 dsh
true sadj
30.0083 85.0338 mo
48.2823 84.0547 li
66.5573 83.2447 li
84.8313 82.5357 li
103.106 80.3807 li
false sop
/1 
[/DeviceCMYK] /CSA add_res
0 .285527 .87985 0 cmyk
@
30.0083 85.8687 mo
30.2293 85.8687 30.4423 85.7807 30.5993 85.6247 cv
30.7553 85.4677 30.8433 85.2557 30.8433 85.0338 cv
30.8433 84.8117 30.7553 84.5997 30.5993 84.4427 cv
30.4423 84.2857 30.2293 84.1987 30.0083 84.1987 cv
29.7863 84.1987 29.5743 84.2857 29.4173 84.4427 cv
29.2603 84.5997 29.1723 84.8117 29.1723 85.0338 cv
29.1723 85.2557 29.2603 85.4677 29.4173 85.6247 cv
29.5743 85.7807 29.7863 85.8687 30.0083 85.8687 cv
f
.334184 lw
[] 0 dsh
30.0083 85.8687 mo
30.2293 85.8687 30.4423 85.7807 30.5993 85.6247 cv
30.7553 85.4677 30.8433 85.2557 30.8433 85.0338 cv
30.8433 84.8117 30.7553 84.5997 30.5993 84.4427 cv
30.4423 84.2857 30.2293 84.1987 30.0083 84.1987 cv
29.7863 84.1987 29.5743 84.2857 29.4173 84.4427 cv
29.2603 84.5997 29.1723 84.8117 29.1723 85.0338 cv
29.1723 85.2557 29.2603 85.4677 29.4173 85.6247 cv
29.5743 85.7807 29.7863 85.8687 30.0083 85.8687 cv
cp
@
48.2823 84.8897 mo
48.5043 84.8897 48.7163 84.8017 48.8733 84.6447 cv
49.0303 84.4887 49.1183 84.2757 49.1183 84.0547 cv
49.1183 83.8327 49.0303 83.6207 48.8733 83.4637 cv
48.7163 83.3077 48.5043 83.2188 48.2823 83.2188 cv
48.0613 83.2188 47.8483 83.3077 47.6923 83.4637 cv
47.5353 83.6207 47.4473 83.8327 47.4473 84.0547 cv
47.4473 84.2757 47.5353 84.4887 47.6923 84.6447 cv
47.8483 84.8017 48.0613 84.8897 48.2823 84.8897 cv
f
48.2823 84.8897 mo
48.5043 84.8897 48.7163 84.8017 48.8733 84.6447 cv
49.0303 84.4887 49.1183 84.2757 49.1183 84.0547 cv
49.1183 83.8327 49.0303 83.6207 48.8733 83.4637 cv
48.7163 83.3077 48.5043 83.2188 48.2823 83.2188 cv
48.0613 83.2188 47.8483 83.3077 47.6923 83.4637 cv
47.5353 83.6207 47.4473 83.8327 47.4473 84.0547 cv
47.4473 84.2757 47.5353 84.4887 47.6923 84.6447 cv
47.8483 84.8017 48.0613 84.8897 48.2823 84.8897 cv
cp
@
66.5573 84.0797 mo
66.7783 84.0797 66.9913 83.9918 67.1483 83.8347 cv
67.3043 83.6787 67.3923 83.4657 67.3923 83.2447 cv
67.3923 83.0227 67.3043 82.8107 67.1483 82.6537 cv
66.9913 82.4967 66.7783 82.4088 66.5573 82.4088 cv
66.3353 82.4088 66.1233 82.4967 65.9663 82.6537 cv
65.8093 82.8107 65.7213 83.0227 65.7213 83.2447 cv
65.7213 83.4657 65.8093 83.6787 65.9663 83.8347 cv
66.1233 83.9918 66.3353 84.0797 66.5573 84.0797 cv
f
66.5573 84.0797 mo
66.7783 84.0797 66.9913 83.9918 67.1483 83.8347 cv
67.3043 83.6787 67.3923 83.4657 67.3923 83.2447 cv
67.3923 83.0227 67.3043 82.8107 67.1483 82.6537 cv
66.9913 82.4967 66.7783 82.4088 66.5573 82.4088 cv
66.3353 82.4088 66.1233 82.4967 65.9663 82.6537 cv
65.8093 82.8107 65.7213 83.0227 65.7213 83.2447 cv
65.7213 83.4657 65.8093 83.6787 65.9663 83.8347 cv
66.1233 83.9918 66.3353 84.0797 66.5573 84.0797 cv
cp
@
84.8313 83.3717 mo
85.0533 83.3717 85.2663 83.2838 85.4223 83.1267 cv
85.5793 82.9697 85.6673 82.7577 85.6673 82.5357 cv
85.6673 82.3148 85.5793 82.1017 85.4223 81.9447 cv
85.2663 81.7887 85.0533 81.7007 84.8313 81.7007 cv
84.6103 81.7007 84.3973 81.7887 84.2413 81.9447 cv
84.0843 82.1017 83.9963 82.3148 83.9963 82.5357 cv
83.9963 82.7577 84.0843 82.9697 84.2413 83.1267 cv
84.3973 83.2838 84.6103 83.3717 84.8313 83.3717 cv
f
84.8313 83.3717 mo
85.0533 83.3717 85.2663 83.2838 85.4223 83.1267 cv
85.5793 82.9697 85.6673 82.7577 85.6673 82.5357 cv
85.6673 82.3148 85.5793 82.1017 85.4223 81.9447 cv
85.2663 81.7887 85.0533 81.7007 84.8313 81.7007 cv
84.6103 81.7007 84.3973 81.7887 84.2413 81.9447 cv
84.0843 82.1017 83.9963 82.3148 83.9963 82.5357 cv
83.9963 82.7577 84.0843 82.9697 84.2413 83.1267 cv
84.3973 83.2838 84.6103 83.3717 84.8313 83.3717 cv
cp
@
103.106 81.2157 mo
103.327 81.2157 103.54 81.1277 103.696 80.9717 cv
103.853 80.8148 103.941 80.6017 103.941 80.3807 cv
103.941 80.1588 103.853 79.9467 103.696 79.7897 cv
103.54 79.6327 103.327 79.5447 103.106 79.5447 cv
102.884 79.5447 102.672 79.6327 102.515 79.7897 cv
102.358 79.9467 102.27 80.1588 102.27 80.3807 cv
102.27 80.6017 102.358 80.8148 102.515 80.9717 cv
102.672 81.1277 102.884 81.2157 103.106 81.2157 cv
f
103.106 81.2157 mo
103.327 81.2157 103.54 81.1277 103.696 80.9717 cv
103.853 80.8148 103.941 80.6017 103.941 80.3807 cv
103.941 80.1588 103.853 79.9467 103.696 79.7897 cv
103.54 79.6327 103.327 79.5447 103.106 79.5447 cv
102.884 79.5447 102.672 79.6327 102.515 79.7897 cv
102.358 79.9467 102.27 80.1588 102.27 80.3807 cv
102.27 80.6017 102.358 80.8148 102.515 80.9717 cv
102.672 81.1277 102.884 81.2157 103.106 81.2157 cv
cp
@
.668367 lw
2 lc
30.0083 84.8717 mo
48.2823 83.2587 li
66.5573 80.4827 li
84.8313 74.3177 li
103.106 27.9177 li
.335546 .71603 0 0 cmyk
@
30.0083 84.0357 mo
29.1723 85.7067 li
30.8433 85.7067 li
f
.334184 lw
0 lc
0 lj
30.0083 84.0357 mo
29.1723 85.7067 li
30.8433 85.7067 li
cp
@
48.2823 82.4237 mo
47.4473 84.0947 li
49.1183 84.0947 li
f
48.2823 82.4237 mo
47.4473 84.0947 li
49.1183 84.0947 li
cp
@
66.5573 79.6467 mo
65.7213 81.3177 li
67.3923 81.3177 li
f
66.5573 79.6467 mo
65.7213 81.3177 li
67.3923 81.3177 li
cp
@
84.8313 73.4818 mo
83.9963 75.1527 li
85.6673 75.1527 li
f
84.8313 73.4818 mo
83.9963 75.1527 li
85.6673 75.1527 li
cp
@
103.106 27.0827 mo
102.27 28.7537 li
103.941 28.7537 li
f
103.106 27.0827 mo
102.27 28.7537 li
103.941 28.7537 li
cp
@
.668367 lw
2 lc
1 lj
30.0083 81.5208 mo
48.2823 80.5128 li
66.5573 81.4037 li
84.8313 79.8177 li
103.106 80.9327 li
.62948 0 0 0 cmyk
@
30.0083 80.6847 mo
29.2133 81.2628 li
29.5173 82.1967 li
30.4993 82.1967 li
30.8023 81.2628 li
f
.334184 lw
0 lc
0 lj
30.0083 80.6847 mo
29.2133 81.2628 li
29.5173 82.1967 li
30.4993 82.1967 li
30.8023 81.2628 li
cp
@
48.2823 79.6767 mo
47.4883 80.2537 li
47.7913 81.1877 li
48.7733 81.1877 li
49.0773 80.2537 li
f
48.2823 79.6767 mo
47.4883 80.2537 li
47.7913 81.1877 li
48.7733 81.1877 li
49.0773 80.2537 li
cp
@
66.5573 80.5677 mo
65.7623 81.1447 li
66.0663 82.0787 li
67.0483 82.0787 li
67.3513 81.1447 li
f
66.5573 80.5677 mo
65.7623 81.1447 li
66.0663 82.0787 li
67.0483 82.0787 li
67.3513 81.1447 li
cp
@
84.8313 78.9827 mo
84.0373 79.5597 li
84.3403 80.4937 li
85.3223 80.4937 li
85.6263 79.5597 li
f
84.8313 78.9827 mo
84.0373 79.5597 li
84.3403 80.4937 li
85.3223 80.4937 li
85.6263 79.5597 li
cp
@
103.106 80.0967 mo
102.311 80.6747 li
102.615 81.6087 li
103.597 81.6087 li
103.9 80.6747 li
f
103.106 80.0967 mo
102.311 80.6747 li
102.615 81.6087 li
103.597 81.6087 li
103.9 80.6747 li
cp
@
.668367 lw
1 lj
[4.27755 1.06939 .668367 1.06939 ] 0 dsh
30.0083 85.1367 mo
48.2823 85.1127 li
66.5573 82.6367 li
84.8313 82.1877 li
103.106 81.8627 li
.866331 .705257 0 0 cmyk
@
29.1723 85.9717 mo
30.8434 85.9717 li
30.8434 84.301 li
29.1723 84.301 li
cp
f
.334184 lw
0 lj
[] 0 dsh
29.1723 85.9717 mo
30.8434 85.9717 li
30.8434 84.301 li
29.1723 84.301 li
cp
@
47.4473 85.9487 mo
49.1184 85.9487 li
49.1184 84.2776 li
47.4473 84.2776 li
cp
f
47.4473 85.9487 mo
49.1184 85.9487 li
49.1184 84.2776 li
47.4473 84.2776 li
cp
@
65.7213 83.4717 mo
67.392 83.4717 li
67.392 81.801 li
65.7213 81.801 li
cp
f
65.7213 83.4717 mo
67.392 83.4717 li
67.392 81.801 li
65.7213 81.801 li
cp
@
83.9963 83.0237 mo
85.667 83.0237 li
85.667 81.353 li
83.9963 81.353 li
cp
f
83.9963 83.0237 mo
85.667 83.0237 li
85.667 81.353 li
83.9963 81.353 li
cp
@
102.27 82.6987 mo
103.941 82.6987 li
103.941 81.0276 li
102.27 81.0276 li
cp
f
102.27 82.6987 mo
103.941 82.6987 li
103.941 81.0276 li
102.27 81.0276 li
cp
@
.668367 lw
2 lc
1 lj
30.0083 84.9987 mo
48.2823 84.7957 li
66.5573 84.5087 li
84.8313 84.1627 li
103.106 80.8927 li
.704463 0 1 0 cmyk
@
30.0083 84.1627 mo
29.8203 84.7397 li
29.2133 84.7397 li
29.7043 85.0967 li
29.5173 85.6737 li
30.0083 85.3177 li
30.4993 85.6737 li
30.3113 85.0967 li
30.8023 84.7397 li
30.1953 84.7397 li
f
.334184 lw
0 lc
2 lj
30.0083 84.1627 mo
29.8203 84.7397 li
29.2133 84.7397 li
29.7043 85.0967 li
29.5173 85.6737 li
30.0083 85.3177 li
30.4993 85.6737 li
30.3113 85.0967 li
30.8023 84.7397 li
30.1953 84.7397 li
cp
@
48.2823 83.9608 mo
48.0953 84.5377 li
47.4883 84.5377 li
47.9793 84.8947 li
47.7913 85.4717 li
48.2823 85.1147 li
48.7733 85.4717 li
48.5863 84.8947 li
49.0773 84.5377 li
48.4703 84.5377 li
f
48.2823 83.9608 mo
48.0953 84.5377 li
47.4883 84.5377 li
47.9793 84.8947 li
47.7913 85.4717 li
48.2823 85.1147 li
48.7733 85.4717 li
48.5863 84.8947 li
49.0773 84.5377 li
48.4703 84.5377 li
cp
@
66.5573 83.6737 mo
66.3693 84.2507 li
65.7623 84.2507 li
66.2533 84.6077 li
66.0663 85.1847 li
66.5573 84.8277 li
67.0483 85.1847 li
66.8603 84.6077 li
67.3513 84.2507 li
66.7443 84.2507 li
f
66.5573 83.6737 mo
66.3693 84.2507 li
65.7623 84.2507 li
66.2533 84.6077 li
66.0663 85.1847 li
66.5573 84.8277 li
67.0483 85.1847 li
66.8603 84.6077 li
67.3513 84.2507 li
66.7443 84.2507 li
cp
@
84.8313 83.3267 mo
84.6443 83.9047 li
84.0373 83.9047 li
84.5283 84.2607 li
84.3403 84.8387 li
84.8313 84.4818 li
85.3223 84.8387 li
85.1353 84.2607 li
85.6263 83.9047 li
85.0193 83.9047 li
f
84.8313 83.3267 mo
84.6443 83.9047 li
84.0373 83.9047 li
84.5283 84.2607 li
84.3403 84.8387 li
84.8313 84.4818 li
85.3223 84.8387 li
85.1353 84.2607 li
85.6263 83.9047 li
85.0193 83.9047 li
cp
@
103.106 80.0577 mo
102.918 80.6347 li
102.311 80.6347 li
102.802 80.9918 li
102.615 81.5687 li
103.106 81.2117 li
103.597 81.5687 li
103.409 80.9918 li
103.9 80.6347 li
103.293 80.6347 li
f
103.106 80.0577 mo
102.918 80.6347 li
102.311 80.6347 li
102.802 80.9918 li
102.615 81.5687 li
103.106 81.2117 li
103.597 81.5687 li
103.409 80.9918 li
103.9 80.6347 li
103.293 80.6347 li
cp
@
.668367 lw
1 lj
[4.27755 1.06939 .668367 1.06939 ] 0 dsh
30.0083 85.8197 mo
48.2823 85.5617 li
66.5573 85.2167 li
84.8313 84.7987 li
103.106 84.4057 li
0 .929229 .819821 0 cmyk
@
30.0083 86.6557 mo
30.8433 84.9847 li
29.1723 84.9847 li
f
.334184 lw
0 lj
[] 0 dsh
30.0083 86.6557 mo
30.8433 84.9847 li
29.1723 84.9847 li
cp
@
48.2823 86.3967 mo
49.1183 84.7257 li
47.4473 84.7257 li
f
48.2823 86.3967 mo
49.1183 84.7257 li
47.4473 84.7257 li
cp
@
66.5573 86.0517 mo
67.3923 84.3807 li
65.7213 84.3807 li
f
66.5573 86.0517 mo
67.3923 84.3807 li
65.7213 84.3807 li
cp
@
84.8313 85.6337 mo
85.6673 83.9627 li
83.9963 83.9627 li
f
84.8313 85.6337 mo
85.6673 83.9627 li
83.9963 83.9627 li
cp
@
103.106 85.2418 mo
103.941 83.5707 li
102.27 83.5707 li
f
103.106 85.2418 mo
103.941 83.5707 li
102.27 83.5707 li
cp
@
grestore
.267347 lw
2 lc
0 lj
10 ml
[] 0 dsh
true sadj
20.8713 88.9217 mo
20.8713 7.17371 li
false sop
1 /0 /CSD get_res sepcs
1 sep
@
112.243 88.9217 mo
112.243 7.17371 li
@
20.8713 88.9217 mo
112.243 88.9217 li
@
20.8713 7.17371 mo
112.243 7.17371 li
@
24.1463 52.1157 mo
69.6323 52.1157 li
70.2563 52.1157 70.5683 51.8037 70.5683 51.1797 cv
70.5683 10.4487 li
70.5683 9.82574 70.2563 9.51373 69.6323 9.51373 cv
24.1463 9.51373 li
23.5223 9.51373 23.2103 9.82574 23.2103 10.4487 cv
23.2103 51.1797 li
23.2103 51.8037 23.5223 52.1157 24.1463 52.1157 cv
1 /0 /CSD get_res sepcs
0 sep
f
.334184 lw
0 lc
24.1463 52.1157 mo
69.6323 52.1157 li
70.2563 52.1157 70.5683 51.8037 70.5683 51.1797 cv
70.5683 10.4487 li
70.5683 9.82574 70.2563 9.51373 69.6323 9.51373 cv
24.1463 9.51373 li
23.5223 9.51373 23.2103 9.82574 23.2103 10.4487 cv
23.2103 51.1797 li
23.2103 51.8037 23.5223 52.1157 24.1463 52.1157 cv
cp
1 /0 /CSD get_res sepcs
.199219 sep
@
.668367 lw
1 lj
[4.27755 1.06939 .668367 1.06939 ] 0 dsh
25.0813 13.3037 mo
34.4393 13.3037 li
0 .285527 .87985 0 cmyk
@
29.7603 14.1387 mo
29.9823 14.1387 30.1943 14.0507 30.3513 13.8947 cv
30.5073 13.7377 30.5953 13.5257 30.5953 13.3037 cv
30.5953 13.0817 30.5073 12.8697 30.3513 12.7127 cv
30.1943 12.5557 29.9823 12.4677 29.7603 12.4677 cv
29.5383 12.4677 29.3263 12.5557 29.1693 12.7127 cv
29.0123 12.8697 28.9243 13.0817 28.9243 13.3037 cv
28.9243 13.5257 29.0123 13.7377 29.1693 13.8947 cv
29.3263 14.0507 29.5383 14.1387 29.7603 14.1387 cv
f
.334184 lw
[] 0 dsh
29.7603 14.1387 mo
29.9823 14.1387 30.1943 14.0507 30.3513 13.8947 cv
30.5073 13.7377 30.5953 13.5257 30.5953 13.3037 cv
30.5953 13.0817 30.5073 12.8697 30.3513 12.7127 cv
30.1943 12.5557 29.9823 12.4677 29.7603 12.4677 cv
29.5383 12.4677 29.3263 12.5557 29.1693 12.7127 cv
29.0123 12.8697 28.9243 13.0817 28.9243 13.3037 cv
28.9243 13.5257 29.0123 13.7377 29.1693 13.8947 cv
29.3263 14.0507 29.5383 14.1387 29.7603 14.1387 cv
cp
@
1 /0 /CSD get_res sepcs
1 sep
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
%ADOBeginSubsetFont: NOAXUI+ AddGlyphs
systemdict begin NOAXUJ+
/GlyphProcs get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/P {603 0 98 0 569 729 setcachedevice197 648 mo
197 374 li
321 374 li
367 374 402 385 427 409 cv
451.998 433 464.999 466.998 464.999 511.002 cv
464.999 555.001 451.998 587.999 427 612.002 cv
402 636.001 367 648 321 648 cv
197 648 li
97.9999 729 mo
321 729 li
402 729 464.002 710.001 506.002 673.001 cv
547.997 636.001 569 582.001 569 511.002 cv
569 439 547.997 384 506.002 348 cv
464.002 311 402 293 321 293 cv
197 293 li
197 0 li
97.9999 0 li
97.9999 729 li
false sop
ef
}bind def
/C {698 0 56.0001 -13 644 742 setcachedevice644.002 672.999 mo
644.002 569 li
610.002 598.999 575 622.001 536.999 638.002 cv
499.002 653.001 459.999 660.999 418 660.999 cv
334 660.999 270 635.002 226 584 cv
182 533.002 160 459.999 160 364 cv
160 268 182 194 226 143 cv
270 91.9999 334 66.9999 418 66.9999 cv
459.999 66.9999 499.002 74.0002 536.999 90.0001 cv
575 105 610.002 128 644.002 159 cv
644.002 56.0001 li
609 32 572 15 533.999 4 cv
496.002 -7.00002 455 -13 412 -13 cv
302 -13 215 20 151 87.0002 cv
87.0002 154 56.0001 246 56.0001 364 cv
56.0001 480.998 87.0002 573.002 151 641.002 cv
215 708 302 742 412 742 cv
456.002 742 496.999 736.001 535 724.998 cv
573.002 712.999 610.002 696.001 644.002 672.999 cv
false sop
ef
}bind def
/A {684 0 8 0 676 729 setcachedevice342 631.998 mo
208 269 li
476.001 269 li
342 631.998 li
286 729 mo
398 729 li
676.002 0 li
572.998 0 li
506.999 187 li
178 187 li
112 0 li
7.99999 0 li
286 729 li
false sop
ef
}bind def
systemdict /gcheck known {setglobal} if end end
%ADOEndSubsetFont
/NOAXUJ+*1 [32{/.notdef}rp /space /R /a /t /e /parenleft /percent /parenright /zero /period /two /four /six /eight /N /M /S /E /P /C /A 203{/.notdef}rp]NOAXUJ+ nfNOAXUJ+*1 [4.67857 0 0 -4.67857 0 0 ]msf38.1813 14.9406 mo(223)sh47.0904 14.9406 mo(4)sh.668367 lw
2 lc
1 lj
10 ml
[] 0 dsh
true sadj
25.0813 20.1697 mo
34.4393 20.1697 li
false sop
.335546 .71603 0 0 cmyk
@
29.7603 19.3347 mo
28.9243 21.0057 li
30.5953 21.0057 li
f
.334184 lw
0 lc
0 lj
29.7603 19.3347 mo
28.9243 21.0057 li
30.5953 21.0057 li
cp
@
1 /0 /CSD get_res sepcs
1 sep
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
%ADOBeginSubsetFont: NOAXUI+ AddGlyphs
systemdict begin NOAXUJ+
/GlyphProcs get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/H {752 0 98 0 653.998 729 setcachedevice97.9999 729 mo
197 729 li
197 430 li
555.001 430 li
555.001 729 li
653.998 729 li
653.998 0 li
555.001 0 li
555.001 347 li
197 347 li
197 0 li
97.9999 0 li
97.9999 729 li
false sop
ef
}bind def
/L {557 0 98 0 552 729 setcachedevice97.9999 729 mo
197 729 li
197 83 li
552 83 li
552 0 li
97.9999 0 li
97.9999 729 li
false sop
ef
}bind def
/T {611 0 -2 0 614 729 setcachedevice-2 729 mo
614.001 729 li
614.001 646.001 li
355 646.001 li
355 0 li
256 0 li
256 646.001 li
-2 646.001 li
-2 729 li
false sop
ef
}bind def
systemdict /gcheck known {setglobal} if end end
%ADOEndSubsetFont
/NOAXUJ+*1 [32{/.notdef}rp /space /R /a /t /e /parenleft /percent /parenright /zero /period /two /four /six /eight /N /M /S /E /P /C /A /H /L /T 200{/.notdef}rp]NOAXUJ+ nfNOAXUJ+*1 [4.67857 0 0 -4.67857 0 0 ]msf38.1813 21.8076 mo(5"6!73)[3.51828 2.86682 2.60667 3.24533 2.85858 0 ]xsh.668367 lw
2 lc
1 lj
10 ml
[] 0 dsh
true sadj
25.0813 27.0357 mo
34.4393 27.0357 li
false sop
.62948 0 0 0 cmyk
@
29.7603 26.2007 mo
28.9653 26.7777 li
29.2693 27.7117 li
30.2513 27.7117 li
30.5543 26.7777 li
f
.334184 lw
0 lc
0 lj
29.7603 26.2007 mo
28.9653 26.7777 li
29.2693 27.7117 li
30.2513 27.7117 li
30.5543 26.7777 li
cp
@
1 /0 /CSD get_res sepcs
1 sep
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
%ADOBeginSubsetFont: NOAXUI+ AddGlyphs
systemdict begin NOAXUJ+
/GlyphProcs get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/D {770 0 98 0 710.998 729 setcachedevice197 648 mo
197 80.9999 li
316 80.9999 li
416 80.9999 490 103 537 149 cv
582.998 195 607.002 267 607.002 365 cv
607.002 463 582.998 533.999 537 580.002 cv
490 624.999 416 648 316 648 cv
197 648 li
97.9999 729 mo
301 729 li
442 729 545.998 698.999 612.002 641.001 cv
678.001 582.001 710.998 490 710.998 365 cv
710.998 239 676.999 147 611 88.0001 cv
545.001 29 441 0 301 0 cv
97.9999 0 li
97.9999 729 li
false sop
ef
}bind def
systemdict /gcheck known {setglobal} if end end
%ADOEndSubsetFont
/NOAXUJ+*1 [32{/.notdef}rp /space /R /a /t /e /parenleft /percent /parenright /zero /period /two /four /six /eight /N /M /S /E /P /C /A /H /L /T /D 199{/.notdef}rp]NOAXUJ+ nfNOAXUJ+*1 [4.67857 0 0 -4.67857 0 0 ]msf38.1813 28.6736 mo(0841)[2.96989 3.60251 3.20018 0 ]xsh.668367 lw
0 lc
1 lj
10 ml
[4.27755 1.06939 .668367 1.06939 ] 0 dsh
true sadj
25.0813 33.9027 mo
34.4393 33.9027 li
false sop
.866331 .705257 0 0 cmyk
@
28.9243 34.7377 mo
30.595 34.7377 li
30.595 33.0667 li
28.9243 33.0667 li
cp
f
.334184 lw
0 lj
[] 0 dsh
28.9243 34.7377 mo
30.595 34.7377 li
30.595 33.0667 li
28.9243 33.0667 li
cp
@
1 /0 /CSD get_res sepcs
1 sep
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
%ADOBeginSubsetFont: NOAXUI+ AddGlyphs
systemdict begin NOAXUJ+
/GlyphProcs get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/o {612 0 55 -13 557 560 setcachedevice306 484.001 mo
258 484.001 220 464.999 192 426.998 cv
164 389 150 338 150 273 cv
150 207 163 156 191 118 cv
219 79.9999 257 61.9999 306 61.9999 cv
353.999 61.9999 392 79.9999 420 118 cv
448 156 462 207 462 273 cv
462 337 448 389 420 426.998 cv
392 464.999 353.999 484.001 306 484.001 cv
306 560 mo
383.998 560 445 533.999 490 484.001 cv
533.999 433 557 363 557 273 cv
557 183 533.999 113 490 62.9999 cv
445 12 383.998 -13 306 -13 cv
227 -13 165 12 121 62.9999 cv
76.9999 113 54.9999 183 54.9999 273 cv
54.9999 363 76.9999 433 121 484.001 cv
165 533.999 227 560 306 560 cv
false sop
ef
}bind def
/m {974 0 91 0 889 559.999 setcachedevice520 442 mo
542 482 568.998 511 599.999 531 cv
630.999 550.002 667.999 559.999 710.998 559.999 cv
767 559.999 811.003 540 841.998 500 cv
872.998 460 889 403 889 330 cv
889 0 li
798.999 0 li
798.999 327 li
798.999 379 789.001 418 770.998 444 cv
752.002 469 724.001 482 686.003 482 cv
639 482 602 466 574.998 435 cv
548.001 404 535 362 535 309 cv
535 0 li
445 0 li
445 327 li
445 379 435 418 417 444 cv
398 469 369 482 331 482 cv
285 482 248 466 221 435 cv
194 404 181 362 181 309 cv
181 0 li
90.9998 0 li
90.9998 547.002 li
181 547.002 li
181 462 li
201 495 226 520 255 536 cv
283 551.998 317 559.999 357 559.999 cv
397 559.999 430 550.002 458 530 cv
486 510 506 480 520 442 cv
false sop
ef
}bind def
/b {635 0 91 -13 580 760 setcachedevice487.002 273 mo
487.002 339 473 390 446 428 cv
418 466 381 485.002 334 485.002 cv
286 485.002 249 466 222 428 cv
194 390 181 339 181 273 cv
181 207 194 155 222 117 cv
249 79 286 61.0001 334 61.0001 cv
381 61.0001 418 79 446 117 cv
473 155 487.002 207 487.002 273 cv
181 464 mo
199 496.001 223 519.999 252 536.001 cv
281 551.998 316 559.999 356 559.999 cv
422 559.999 475.998 532.998 517.999 481.001 cv
559.001 428 580.002 359 580.002 273 cv
580.002 187 559.001 117 517.999 65.0001 cv
475.998 13 422 -13 356 -13 cv
316 -13 281 -5.00001 252 10 cv
223 25 199 49 181 81.9999 cv
181 0 li
91 0 li
91 760 li
181 760 li
181 464 li
false sop
ef
}bind def
systemdict /gcheck known {setglobal} if end end
%ADOEndSubsetFont
/NOAXUJ+*1 [32{/.notdef}rp /space /R /a /t /e /parenleft /percent /parenright /zero /period /two /four /six /eight /N /M /S /E /P /C /A /H /L /T /D /o /m /b 196{/.notdef}rp]NOAXUJ+ nfNOAXUJ+*1 [4.67857 0 0 -4.67857 0 0 ]msf38.1813 35.5396 mo(39:;3.)[3.2668 2.86249 4.55693 2.96989 3.26678 0 ]xsh.668367 lw
2 lc
1 lj
10 ml
[] 0 dsh
true sadj
25.0813 40.7687 mo
34.4393 40.7687 li
false sop
.704463 0 1 0 cmyk
@
29.7603 39.9337 mo
29.5723 40.5107 li
28.9653 40.5107 li
29.4563 40.8677 li
29.2693 41.4447 li
29.7603 41.0877 li
30.2513 41.4447 li
30.0633 40.8677 li
30.5543 40.5107 li
29.9483 40.5107 li
f
.334184 lw
0 lc
2 lj
29.7603 39.9337 mo
29.5723 40.5107 li
28.9653 40.5107 li
29.4563 40.8677 li
29.2693 41.4447 li
29.7603 41.0877 li
30.2513 41.4447 li
30.0633 40.8677 li
30.5543 40.5107 li
29.9483 40.5107 li
cp
@
1 /0 /CSD get_res sepcs
1 sep
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
%ADOBeginSubsetFont: NOAXUI+ AddGlyphs
systemdict begin NOAXUJ+
/GlyphProcs get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/hyphen {361 0 49 234 312 314 setcachedevice49 314 mo
312 314 li
312 233.999 li
49 233.999 li
49 314 li
false sop
ef
}bind def
/V {684 0 8 0 676 729 setcachedevice286 0 mo
7.99999 729 li
111 729 li
342 115 li
572.998 729 li
676.002 729 li
398 0 li
286 0 li
false sop
ef
}bind def
systemdict /gcheck known {setglobal} if end end
%ADOEndSubsetFont
/NOAXUJ+*1 [32{/.notdef}rp /space /R /a /t /e /parenleft /percent /parenright /zero /period /two /four /six /eight /N /M /S /E /P /C /A /H /L /T /D /o /m /b /hyphen /V 194{/.notdef}rp]NOAXUJ+ nfNOAXUJ+*1 [4.67857 0 0 -4.67857 0 0 ]msf38.1813 42.4066 mo(/62<=41)[4.03674 2.60667 2.82115 1.68825 3.20081 3.20016 0 ]xsh.668367 lw
0 lc
1 lj
10 ml
[4.27755 1.06939 .668367 1.06939 ] 0 dsh
true sadj
25.0813 47.6357 mo
34.4393 47.6357 li
false sop
0 .929229 .819821 0 cmyk
@
29.7603 48.4708 mo
30.5953 46.8007 li
28.9243 46.8007 li
f
.334184 lw
0 lj
[] 0 dsh
29.7603 48.4708 mo
30.5953 46.8007 li
28.9243 46.8007 li
cp
@
1 /0 /CSD get_res sepcs
1 sep
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
%ADOBeginSubsetFont: NOAXUI+ AddGlyphs
systemdict begin NOAXUJ+
/GlyphProcs get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/u {634 0 85 -13 543 560 setcachedevice85 216 mo
85 546.999 li
175 546.999 li
175 219 li
175 167 185 129 205 103 cv
225 76.9999 255 64 296 64 cv
344.001 64 382.998 78.9998 410.998 110 cv
438.998 141 452.998 183 452.998 237 cv
452.998 546.999 li
543 546.999 li
543 0 li
452.998 0 li
452.998 83.9999 li
431 50.0001 405 26 377 9.99998 cv
348 -5.00001 315 -13 277 -13 cv
214 -13 166 6 134 44.9999 cv
101 82.9998 85 140 85 216 cv
311 560 mo
311 560 li
false sop
ef
}bind def
/r {411 0 91 0 410.998 560 setcachedevice410.998 462.999 mo
401.001 468.998 390 473 378 476 cv
365.999 477.999 352.999 479.999 339 479.999 cv
288 479.999 249 462.999 222 430.001 cv
194 396.998 181 350 181 288 cv
181 0 li
90.9999 0 li
90.9999 546.999 li
181 546.999 li
181 462 li
199 494.998 224 519.999 254 535.999 cv
284 551.998 321 560 364.999 560 cv
370.998 560 378 559 386.001 559 cv
392.999 558 401.001 557 410.998 555.001 cv
410.998 462.999 li
false sop
ef
}bind def
/s {521 0 54.0001 -13 472 560 setcachedevice443.001 531 mo
443.001 446 li
417 458.001 391 467.998 364 475 cv
336 480.998 308 485.001 279 485.001 cv
234 485.001 200 477.999 178 463.999 cv
156 449.999 145 430.001 145 403 cv
145 381.999 153 365.999 169 353.999 cv
185 342 217 330 265 320 cv
296 313 li
360.001 299 405 279 432 255 cv
458.001 230 472.001 195 472.001 151 cv
472.001 99.9998 451.999 60 411.998 31 cv
372.001 .999998 316 -13 246 -13 cv
216 -13 186 -9.99998 154 -5.00001 cv
122 0 89.0001 7.99999 54.0001 20 cv
54.0001 113 li
86.9999 95 120 82.0001 152 74 cv
184 64.9998 216 61.0001 248 61.0001 cv
290 61.0001 323 68.0001 346.001 82.0001 cv
367.999 96.0001 379.999 117 379.999 144 cv
379.999 168 370.998 187 354.998 200 cv
339 213 303 226 247 238 cv
216 245 li
160 257 119 275 95 299 cv
69.9999 323 57.9998 355.998 57.9998 398.998 cv
57.9998 449.999 75.9998 490 112 518 cv
148 546 200 560 268 560 cv
301 560 332 557 362 551.998 cv
391 546.999 418 540.001 443.001 531 cv
false sop
ef
}bind def
systemdict /gcheck known {setglobal} if end end
%ADOEndSubsetFont
/NOAXUJ+*1 [32{/.notdef}rp /space /R /a /t /e /parenleft /percent /parenright /zero /period /two /four /six /eight /N /M /S /E /P /C /A /H /L /T /D /o /m /b /hyphen /V /u /r /s 191{/.notdef}rp]NOAXUJ+ nfNOAXUJ+*1 [4.67857 0 0 -4.67857 0 0 ]msf38.1813 49.2726 mo(07=41 %9>?@')[2.96989 2.85777 3.20016 3.20081 2.95587 1.48775 1.82465 2.8625 2.96526 1.92342 2.43752 0 ]xshfalse sop
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: XAAAAA+CMR9 Initial
%ADOt1write: (1.0.24)%%Copyright: Copyright 2021 Adobe System Incorporated. All rights reserved.12 dict dup begin/FontType 1 def/FontName /XAAAAA+CMR9 def/FontInfo 6 dict dup begin/Notice (Copyright (c) 1997, 2009 American Mathematical Society (<http://www.ams.org>), with Reserved Font Name CMR9.) def/ItalicAngle 0 def/WasEmbedded true defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 40 /parenleft putdup 41 /parenright putdup 66 /B putdup 69 /E putdup 74 /J putdup 77 /M putdup 78 /N putdup 83 /S putdup 84 /T putdup 97 /a putdup 105 /i putdup 110 /n putdup 111 /o putdup 120 /x putdef/FontBBox {-39 -250 1036 750} defendsystemdict begindup /Private13 dict dup begin/|- {def} def/| {put} def/BlueValues [-22 -0 431 448 666 677 683 705] def/OtherBlues [-206 -194] def/BlueScale 0.04379 def/StdHW [31] def/StdVW [74] def/StemSnapH [25 31] def/StemSnapV [74 90] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings15 dict dup begin/parenleft <1C60D8A8C9B70C396D3F5DF26B49E25546735ABD671A7A8C5794EE032F217A38EF24BF40FF0224CE2782A74E9F9AAE2EC949D1620973A3717F7B9BC5EBD408BAAE5EDE67FE98E27B6FB6BC382E843062289EAA35A58D6B33C4855A0A790C98085AEEB6AFC6E8B5107E> |-/parenright <1C60D8A8C9B70C396D3F5DF26B49E25541CE7FD7185A1DF7A263329968E65150469BBFD68A4B22A0B0259DF5DC43CFDA55232BEA505031E43F257FF56C5D0DFB905C69EAAC91952AA20612AD4864C9C88CE878756F1F32F61E216EEE07F1ED04B80A7710BC743FB2E8> |-/B <1C60D8A8C9B60AF03E9EDC8752F06E44ACCD13F12FD145C8D8712FA7AE24A656B6ECB899B3CCA6FBB67F098E55BCAE3551FB753A72A59C41DDDFA1D92239327ECFA9C79AFEE33500DB43578F084503BA8B67E58276E774E054BDCA173092D35F6BD03FB37061E1880623C8B48D341480000873718EDDED7E3600716FA91629D64C12369846BD9F2FF90A2293AD3529A8EAC601BC16008E1B931AEE499BA38D829A8174> |-/E <1C60D8A8C9B62E09ACB6A997312FED51449ED148F0A674C5A01870521DA8B21FE8EED5B55E98B63CC167A6ECFC57E21A81A69619296650ED5FB752506367C0DCF390720FD35C8F256777120DFA356EF8CAED481BC4DF8CC471A21D1208EF847D7F276FF16B64DA882534B7E481771C4344D19399491E4BB7598C377031599C8FFE48> |-/J <1C60D8A8C9B78B91534947DF1B854EC4933B6A0629EF57E90FC78DD84636CE0E898B9128679109EC8AF8505C71A29FA1FB944076920EE53FF1863B29C5DDA8B72C7147427F459B232565955807CFF85B2B5B115176868F3D39C0A49F7E8C596D6B305BA6EF5D9B9FC7F3DC21A5FF341C3F13D64147945907F49A898F00DAA0552051B85EF1ED7E7E2733113ACE> |-/M <1C60D8A8C9B5D37BD6F420699576BD69260116E8EC9D96286B3A36C23E11280568AF6CBB9C620D6B0C2F891276EA8A76B6D6C25122A6801F5EB5DA648AFCF8DBB6BA44A93E6FF4DE0994E91991784F2740252C961F45501E9C3DE3B57D97006ADDF40A4D088717606E4C02417596E37AAF1A743A84E2174ECFD9D3EEAEAD7309AD119C2896CE921889BDCFEBCA8BDBB1949E61A177B1F45628ED675067238B7AEC240ED7A890A5A78E0E371909275A3236FE130D27CE8647FC286EF68A6EF6D8000FF64A1F1906DDE1E79EA976B55E384C32E7B0945310E7816A01770720178F6E695A> |-/N <1C60D8A8C9B6F7159AD569A6154753BDFF303C44C53E366F69F68688846E63C912EFE898A5D521D2C33209DA6B6EFD5C841CE6DF6784733A8CB483D6D93CAD93F0CBDF608A73AEE5C05239F2F4CB4B45DCAA5D030420BD897241A66695AB5E37647AA092DF66FB96B628476F9A3EF52916134D48F5F17543EE279F3652F1C0CCB08B32719C780D98962AD3D24FECB258D3BEA73899ACD32700749B5276BF61017C86AFEF71C671525BE7398B5836976CDE3ACA564E4AE8EE4EE69289C099F8> |-/S <1C60D8A8C9B7E1F8666EAFD247F36B46BEBFE4A4B74FDE18FAC7BBD79F6F560DA6F1F74D3E557AC9751768B08F61B745E82B73965D8719CE4AE101A1960B76D84A9411880B5D3D18633E9E212C3F1396D2D5B9D11F349C307A0EFAB64D653404674DEABE2A83104560A56540D1BCC5A1CA321693B21E6E5C95AFC0B1158418BB997440F21598ADCD27B35CFC2F9B1B6979A1A667A34D7B3D9A64B662D1251F31627E61892B82F2DF5B6097D56FE75B5FC682D53CB3439E6203F6FCCB3DE9B7AF4EF9F7C79CA3BD87> |-/T <1C60D8A8C9B61BBFF800799D04C65DCF002133ADE9D74B50B8179A054696469CB2D8DD81CADAE753611C69BD65ED8CEEC6C8ABF56CB7AFFA5398664483AEA2CAE73221A3EEA8FD89709EB36D40BDB42B0841BB84050D8DF63985240ED6A3C2AE2FDBB1175D935A2E1011663004E4053B0B10BFBB9D1C41502A0B1E9FDADE116895DE71014EE2B3CB57FE7A013DEBEDCA9057254BAB14F6D6608D737E> |-/a <1C60D8A8C9B7BA8F6750D70643DC4481699B3DFB7BC9A55462BF2D50FE54414586F15CAEB34A8A6789A3395FF668FBA6FE48234CF5834D258E26B16BB698026F67725DC88F06A5102723A1B616D8F160B6C491939AA7DD53D31E14A0A1AAF0C1EEF0C034D021C30C89E9E3319941F9F8286AD316B338798E470570536B5FF804B4B7C8E157305321F3D2E408BA1B641515AB866C26171238C8C28689BF01D7C2080310709EEDB173953D43D398E90A12DB92BB2CB51F8F55F850A54C5FD6D4E6B668B3949F133628F69247> |-/i <1C60D8A8C9B84FD8F975B6D07DFA8CE1F8D98C178289142CD8FC532014D5C1329291DD819142560B4166A958BFA7E9819DFBF6D774A687D5CDADD65771F169E0E5ECC2B51905096AEBA39F0F5B6DD46E85E74F1B1C6EA73809A71893DDF57A4BB3826EBF0A75154FFF53D59B60A70476FA3042D877337ABE14E75DE559A4BEF376E1BEFC6324020B7F50472BE92E> |-/n <1C60D8A8C9B7E1F898BF26914C5F36A6B2CBB0C4A6980381FA5C3A6BC1DF9BE4AF27B0B5BAB63F82A68A3505E21652ABB82D32F5E7E0AA777397756723B370EEC20FE5736345DA339C86D0CBE09FE76A56C204DE93DBFDF5B198CA6BA0712312CDB6EF18A82C19006F44A8E2CEB252072C310AAD8B4DAB3A86A2193AB352EAE026D35C8D999DF41D288AF585A8397143B8ED524921BF6FA0D76017824DDF9E22990C5DB6099F895AD4E084B0D0B88C5435FBFCA38039A7B9AFE30BAE3572FCC2456EC06FDB939EFE0A1DE3E5652846E2BE179B655E21> |-/o <1C60D8A8C9B7BA8F6251A1295972A0E4540B46849EF036165271BFA26C7BD8258F2ABEC962BC25EA4B37D4D342936B6A59AE304755B922EDC77514E5938DB9132B46FC234FF7CDF62B735F9887216075135C1769A23D54E0BB210E195BC5304155277A466A9D5BEC351AFD1411B4B643E33F4D306F507A> |-/x <1C60D8A8C9B79D2DD44F25ADA04F8BDEFEDE7F6D8BDD996DA542F4264CD00AD5227F827EFDA80BCB9ED9F2743ED312F5C03E234F7612AAB409E76FC81F8C7502AC51A5FB713CF4F843302CE36B4AA03262704AA69AB66B80ACE86F10489377B071EF4177881DC10D5F24261BA6EA9E79DDE6465FCCB30BCFAB16943BCA88BCEF35160A36B7A3216C35AF19D87FD31A79A02B3B742D5A2A5DE98C9D66ED2B9DCD424157DE2AABFFC1E80D0E6D556950ED96A516BBD633925C25FCA51EE670FE4437457979A2E7A8D80348B8541F3158957B7FA23A3E9430CF17305BA0AE2594BCC1231B550CC83F14D85AC3EC20CC52F5BC29B223CFFA796F1F169A94075A48A399AEB56B4DD117ACEE12F07BFAC43B241014F7088FE590431703A9821EE04DD1DA9B09C297A829237D459C0E909E67761E26445CE60C7F9557873FC5704E43E5C7E4B6BB50> |-/.notdef <1C60D8A8C9B7A73D40> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/NOAXUK+CMR9 /XAAAAA+CMR9 findfont ct_VMDictPut/NOAXUK+CMR9*1 [40{/.notdef}rp /parenleft /parenright 24{/.notdef}rp /B 2{/.notdef}rp /E 4{/.notdef}rp /J 2{/.notdef}rp /M /N 4{/.notdef}rp /S /T 12{/.notdef}rp /a 7{/.notdef}rp /i 4{/.notdef}rp /n /o 8{/.notdef}rp /x 135{/.notdef}rp]NOAXUK+CMR9 nfNOAXUK+CMR9*1 [8.96638 0 0 -8.96638 0 0 ]msf16.2133 113.377 mo(\(a\)NMSEonTaxiBJ)[3.60002 4.56 6.95993 6.96004 8.39996 5.16006 9.24004 4.56001 8.27991 5.88011 4.56003 4.92007 2.52002 6.48004 0 ]xsh122.293 102.457 mo
240.193 102.457 li
240.193 -5.8183 li
122.293 -5.8183 li
cp
1 /0 /CSD get_res sepcs
0 sep
f
137.03 88.9217 mo
228.403 88.9217 li
228.403 7.17371 li
137.03 7.17371 li
cp
f
gsave
137.03 88.9218 mo
228.396 88.9218 li
228.396 7.18079 li
137.03 7.18079 li
cp
clp
.267347 lw
0 lc
1 lj
10 ml
[.989184 .427755 ] 0 dsh
true sadj
146.168 88.9217 mo
146.168 7.17371 li
1 /0 /CSD get_res sepcs
.310547 sep
@
grestore
146.168 88.9217 mo
146.168 87.7527 li
1 /0 /CSD get_res sepcs
1 sep
f
.267347 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
146.168 88.9217 mo
146.168 87.7527 li
@
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
%ADOBeginSubsetFont: NOAXUL+ Initial
10 dict begin
ct_T3Defs
/FontType 3 def
/FontName /NOAXUL+ def
/FontMatrix [0.001 0 0 0.001 0 0 ] def
/FontBBox [-1.021 -0.463 1.793 1.232 ] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 32 /one put
dup 33 /zero put
 def
/GlyphProcs 256 dict begin
/.notdef {250 0 0 0 250 0 setcachedevice}bind def
/one {636 0 110 0 543.999 729 setcachedevice124 83 mo
285 83 li
285 639.002 li
110 604.001 li
110 693.999 li
284 729 li
383 729 li
383 83 li
543.999 83 li
543.999 0 li
124 0 li
124 83 li
false sop
ef
}bind def
/zero {636 0 66.0003 -13 570 742 setcachedevice318 663.999 mo
267 663.999 229 638.999 203 588.998 cv
177 539.002 165 464.001 165 364 cv
165 264 177 189 203 139 cv
229 89 267 64 318 64 cv
369 64 407 89 433 139 cv
458.001 189 471.002 264 471.002 364 cv
471.002 464.001 458.001 539.002 433 588.998 cv
407 638.999 369 663.999 318 663.999 cv
318 742 mo
399 742 461.001 709.002 505.002 644.999 cv
548.001 579.998 570.002 486.001 570.002 364 cv
570.002 241 548.001 147 505.002 83.0003 cv
461.001 19 399 -13 318 -13 cv
236 -13 173 19 130 83.0003 cv
87.0002 147 66.0003 241 66.0003 364 cv
66.0003 486.001 87.0002 579.998 130 644.999 cv
173 709.002 236 742 318 742 cv
false sop
ef
}bind def
currentdict end def FontName currentdict end definefont pop
%ADOEndSubsetFont
/NOAXUM+ /NOAXUL+ findfont ct_VMDictPut/NOAXUM+*1 [32{/.notdef}rp /one /zero 222{/.notdef}rp]NOAXUM+ nfNOAXUM+*1 [4.67857 0 0 -4.67857 0 0 ]msf143.191 93.6476 mo( !)[2.97696 0 ]xshgsave
137.03 88.9218 mo
228.396 88.9218 li
228.396 7.18079 li
137.03 7.18079 li
cp
clp
.267347 lw
0 lc
1 lj
10 ml
[.989184 .427755 ] 0 dsh
true sadj
164.442 88.9217 mo
164.442 7.17371 li
false sop
1 /0 /CSD get_res sepcs
.310547 sep
@
grestore
164.442 88.9217 mo
164.442 87.7527 li
false sop
1 /0 /CSD get_res sepcs
1 sep
f
.267347 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
164.442 88.9217 mo
164.442 87.7527 li
@
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
%ADOBeginSubsetFont: NOAXUL+ AddGlyphs
systemdict begin NOAXUM+
/GlyphProcs get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/three {636 0 76 -13 556 742 setcachedevice406 393 mo
453 383 490.003 362 516 330 cv
542.002 298 556 258 556 212 cv
556 140 530.999 83.9999 482 45 cv
432 6.00001 362 -13 271 -13 cv
240 -13 208 -10 176 -4 cv
144 1 110 10 76 22 cv
76 117 li
103 101 133 89 166 81 cv
198 73.0001 232 69.0001 268 69.0001 cv
330 69.0001 377 81 409 105 cv
441 129 458.001 165 458.001 212 cv
458.001 254 443 288 413 312 cv
383 336 341 349 287 349 cv
202 349 li
202 430 li
291 430 li
339 430 376 439 402 459.002 cv
428 477.998 441 505.999 441 542.999 cv
441 579.998 427 609 401 629.002 cv
374 649 336 659.001 287 659.001 cv
260 659.001 231 656.001 200 650.001 cv
169 644.002 135 635.002 98 622.998 cv
98 711 li
135 721.001 170 728.999 203 734.002 cv
235 739 266 742 296 742 cv
370 742 429 724.998 473 690.998 cv
517.001 656.998 539.002 610.999 539.002 553 cv
539.002 513 527.002 479 504 451 cv
480.998 423 448 403 406 393 cv
false sop
ef
}bind def
systemdict /gcheck known {setglobal} if end end
%ADOEndSubsetFont
/NOAXUM+*1 [32{/.notdef}rp /one /zero /three 221{/.notdef}rp]NOAXUM+ nfNOAXUM+*1 [4.67857 0 0 -4.67857 0 0 ]msf161.466 93.6476 mo("!)[2.97659 0 ]xshgsave
137.03 88.9218 mo
228.396 88.9218 li
228.396 7.18079 li
137.03 7.18079 li
cp
clp
.267347 lw
0 lc
1 lj
10 ml
[.989184 .427755 ] 0 dsh
true sadj
182.717 88.9217 mo
182.717 7.17371 li
false sop
1 /0 /CSD get_res sepcs
.310547 sep
@
grestore
182.717 88.9217 mo
182.717 87.7527 li
false sop
1 /0 /CSD get_res sepcs
1 sep
f
.267347 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
182.717 88.9217 mo
182.717 87.7527 li
@
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
%ADOBeginSubsetFont: NOAXUL+ AddGlyphs
systemdict begin NOAXUM+
/GlyphProcs get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/five {636 0 77 -13 548.999 729 setcachedevice108 729 mo
495 729 li
495 646.001 li
198 646.001 li
198 466.998 li
212 471.998 227 476.001 241 478 cv
255 479.999 270 481.998 284 481.998 cv
365 481.998 429 459.001 476.998 415 cv
525 370 548.999 310 548.999 234 cv
548.999 155 523.999 93.9998 474.999 51 cv
426 7.99999 357 -13 269 -13 cv
238 -13 207 -10 175 -5.99998 cv
143 -1 111 5.99998 76.9998 17 cv
76.9998 116 li
106 100 136 88.0001 168 79.9999 cv
199 72.0001 232 69 267 69 cv
323 69 368 83 401 113 cv
433 143 449.998 183 449.998 234 cv
449.998 284 433 324 401 354 cv
368 384 323 399 267 399 cv
241 399 214 396 188 390 cv
162 384 135 375 108 363 cv
108 729 li
false sop
ef
}bind def
systemdict /gcheck known {setglobal} if end end
%ADOEndSubsetFont
/NOAXUM+*1 [32{/.notdef}rp /one /zero /three /five 220{/.notdef}rp]NOAXUM+ nfNOAXUM+*1 [4.67857 0 0 -4.67857 0 0 ]msf179.741 93.6476 mo(#!)[2.97659 0 ]xshgsave
137.03 88.9218 mo
228.396 88.9218 li
228.396 7.18079 li
137.03 7.18079 li
cp
clp
.267347 lw
0 lc
1 lj
10 ml
[.989184 .427755 ] 0 dsh
true sadj
200.991 88.9217 mo
200.991 7.17371 li
false sop
1 /0 /CSD get_res sepcs
.310547 sep
@
grestore
200.991 88.9217 mo
200.991 87.7527 li
false sop
1 /0 /CSD get_res sepcs
1 sep
f
.267347 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
200.991 88.9217 mo
200.991 87.7527 li
@
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
%ADOBeginSubsetFont: NOAXUL+ AddGlyphs
systemdict begin NOAXUM+
/GlyphProcs get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/seven {636 0 82 0 550.998 729 setcachedevice81.9999 729 mo
550.998 729 li
550.998 686.999 li
286 0 li
183 0 li
432 646.001 li
81.9999 646.001 li
81.9999 729 li
false sop
ef
}bind def
systemdict /gcheck known {setglobal} if end end
%ADOEndSubsetFont
/NOAXUM+*1 [32{/.notdef}rp /one /zero /three /five /seven 219{/.notdef}rp]NOAXUM+ nfNOAXUM+*1 [4.67857 0 0 -4.67857 0 0 ]msf198.015 93.6476 mo($!)[2.97659 0 ]xshgsave
137.03 88.9218 mo
228.396 88.9218 li
228.396 7.18079 li
137.03 7.18079 li
cp
clp
.267347 lw
0 lc
1 lj
10 ml
[.989184 .427755 ] 0 dsh
true sadj
219.266 88.9217 mo
219.266 7.17371 li
false sop
1 /0 /CSD get_res sepcs
.310547 sep
@
grestore
219.266 88.9217 mo
219.266 87.7527 li
false sop
1 /0 /CSD get_res sepcs
1 sep
f
.267347 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
219.266 88.9217 mo
219.266 87.7527 li
@
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
%ADOBeginSubsetFont: NOAXUL+ AddGlyphs
systemdict begin NOAXUM+
/GlyphProcs get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/nine {636 0 63 -13 566 742 setcachedevice110 15 mo
110 105 li
134 93 159 83.9999 185 78.0002 cv
210 72 235 69.0001 260 69.0001 cv
324 69.0001 374 90.0001 408 134 cv
442 178 462.002 244 468.002 334 cv
448 306 424 284 396 269 cv
367 254 335 247 300 247 cv
226 247 168 269 126 313 cv
83.9999 357 62.9999 417 62.9999 493.999 cv
62.9999 567.999 85 628.001 129 674 cv
173 718.998 232 742 306 742 cv
390 742 455 709.002 499.002 644.999 cv
542.999 579.998 566.001 486.001 566.001 364 cv
566.001 248 538 157 483.998 89 cv
429 21 356 -13 264 -13 cv
239 -13 214 -10 189 -6.00001 cv
163 -2 137 4.99999 110 15 cv
306 324 mo
350 324 385 339 411 369 cv
437 399 450 441 450 493.999 cv
450 545.998 437 588.001 411 618 cv
385 647.998 350 663.999 306 663.999 cv
262 663.999 227 647.998 201 618 cv
175 588.001 162 545.998 162 493.999 cv
162 441 175 399 201 369 cv
227 339 262 324 306 324 cv
false sop
ef
}bind def
/M {863 0 98 0 765 728.998 setcachedevice97.9998 728.998 mo
245 728.998 li
431 233 li
617.998 728.998 li
765 728.998 li
765 0 li
668.999 0 li
668.999 640 li
481.002 140 li
382 140 li
194 640 li
194 0 li
97.9998 0 li
97.9998 728.998 li
false sop
ef
}bind def
/i {278 0 94 0 184 760 setcachedevice93.9999 547 mo
184 547 li
184 0 li
93.9999 0 li
93.9999 547 li
93.9999 760 mo
184 760 li
184 646 li
93.9999 646 li
93.9999 760 li
false sop
ef
}bind def
/s {521 0 54.0001 -13 472 560 setcachedevice443.001 531 mo
443.001 446 li
417 458.001 391 467.998 364 475 cv
336 480.998 308 485.001 279 485.001 cv
234 485.001 200 477.999 178 463.999 cv
156 449.999 145 430.001 145 403 cv
145 381.999 153 365.999 169 353.999 cv
185 342 217 330 265 320 cv
296 313 li
360.001 299 405 279 432 255 cv
458.001 230 472.001 195 472.001 151 cv
472.001 99.9998 451.999 60 411.998 31 cv
372.001 .999998 316 -13 246 -13 cv
216 -13 186 -9.99998 154 -5.00001 cv
122 0 89.0001 7.99999 54.0001 20 cv
54.0001 113 li
86.9999 95 120 82.0001 152 74 cv
184 64.9998 216 61.0001 248 61.0001 cv
290 61.0001 323 68.0001 346.001 82.0001 cv
367.999 96.0001 379.999 117 379.999 144 cv
379.999 168 370.998 187 354.998 200 cv
339 213 303 226 247 238 cv
216 245 li
160 257 119 275 95 299 cv
69.9999 323 57.9998 355.998 57.9998 398.998 cv
57.9998 449.999 75.9998 490 112 518 cv
148 546 200 560 268 560 cv
301 560 332 557 362 551.998 cv
391 546.999 418 540.001 443.001 531 cv
false sop
ef
}bind def
/n {634 0 91 0 548.999 560 setcachedevice548.999 330 mo
548.999 0 li
459 0 li
459 327 li
459 378.999 448 417 428.001 443.001 cv
407.999 468.998 378 481.998 338 481.998 cv
289 481.998 251 465.999 223 434.999 cv
195 404 181 362 181 309 cv
181 0 li
90.9999 0 li
90.9999 546.999 li
181 546.999 li
181 462 li
202 493.999 227 518.999 257 534.999 cv
286 550.998 320 560 358.001 560 cv
420 560 467.998 540.001 500.001 501 cv
532 462 548.999 405 548.999 330 cv
false sop
ef
}bind def
/g {635 0 55 -207 544 560 setcachedevice453.998 280 mo
453.998 344.001 439.998 394.999 414.001 431 cv
387.001 466.998 349 485.001 301 485.001 cv
253 485.001 215 466.998 188 431 cv
161 394.999 148 344.001 148 280 cv
148 215 161 165 188 129 cv
215 92.9998 253 75.0001 301 75.0001 cv
349 75.0001 387.001 92.9998 414.001 129 cv
439.998 165 453.998 215 453.998 280 cv
544 68.0001 mo
544 -24 522.998 -92.9998 481.998 -139 cv
439.998 -184 377 -207 292 -207 cv
260 -207 231 -204 203 -200 cv
175 -195 147 -188 121 -178 cv
121 -90.9999 li
147 -105 173 -115 199 -122 cv
225 -129 251 -133 278 -133 cv
336 -133 379.999 -117 409.999 -86.9999 cv
438.998 -56 453.998 -9.99998 453.998 51.9999 cv
453.998 96.0001 li
434.999 64 410.998 40.0001 381.999 24 cv
352.999 7.99999 319 0 279 0 cv
211 0 157 25 116 75.9998 cv
75.0001 127 54.9999 195 54.9999 280 cv
54.9999 364 75.0001 432 116 482.998 cv
157 533.999 211 560 279 560 cv
319 560 352.999 551.998 381.999 535.999 cv
410.998 519.999 434.999 495.998 453.998 463.999 cv
453.998 546.999 li
544 546.999 li
544 68.0001 li
false sop
ef
}bind def
systemdict /gcheck known {setglobal} if end end
%ADOEndSubsetFont
/NOAXUM+*1 [32{/.notdef}rp /one /zero /three /five /seven /nine /M /i /s /n /g 213{/.notdef}rp]NOAXUM+ nfNOAXUM+*1 [4.67857 0 0 -4.67857 0 0 ]msf216.289 93.6476 mo(%!)[2.97696 0 ]xsh163.039 99.5113 mo(&'\(\('\)*)[4.03674 1.30002 2.43753 2.4375 1.29962 2.96524 0 ]xsh%ADOBeginSubsetFont: NOAXUN+ Initial
10 dict begin
ct_T3Defs
/FontType 3 def
/FontName /NOAXUN+ def
/FontMatrix [0.001 0 0 0.001 0 0 ] def
/FontBBox [-1.021 -0.463 1.793 1.232 ] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 32 /space put
dup 33 /R put
dup 34 /a put
dup 35 /t put
dup 36 /e put
dup 37 /parenleft put
dup 38 /percent put
dup 39 /parenright put
 def
/GlyphProcs 256 dict begin
/.notdef {250 0 0 0 250 0 setcachedevice}bind def
/space {318 0 0 0 .01 .01 setcachedevice}bind def
/R {695 0 98 0 666 729 setcachedevice444 342 mo
464.999 334 486.001 319 506.002 296 cv
525.998 272 545.998 240 565.999 199 cv
666.002 0 li
560.001 0 li
466.998 187 li
443 235 419 268 397 284 cv
374 300 343 308 304 308 cv
197 308 li
197 0 li
97.9999 0 li
97.9999 729 li
321 729 li
404 729 466.001 710.998 506.999 676.999 cv
547.997 641.998 569 589 569 518.998 cv
569 473 557.998 434 537 404 cv
515 374 483.998 353 444 342 cv
197 648 mo
197 389 li
321 389 li
368 389 404 400 428 422 cv
451.998 444 464.999 476.001 464.999 518.998 cv
464.999 560.999 451.998 592.999 428 614.998 cv
404 636.998 368 648 321 648 cv
197 648 li
false sop
ef
}bind def
/a {613 0 60 -13 521.999 560 setcachedevice343 275 mo
270 275 220 266 192 250 cv
164 233 150 205 150 165 cv
150 133 160 107 181 89.0001 cv
202 69.9999 231 61.0001 267 61.0001 cv
317 61.0001 356.998 78 387.001 114 cv
417 149 432 196 432 255 cv
432 275 li
343 275 li
521.999 312 mo
521.999 0 li
432 0 li
432 82.9998 li
410.998 49 384.998 25 354.998 9.99998 cv
325 -5.00001 287 -13 243 -13 cv
187 -13 142 2 109 33 cv
75.9998 64 60 106 60 159 cv
60 220 79.9999 266 122 298 cv
163 329 224 345.001 306 345.001 cv
432 345.001 li
432 353.999 li
432 394.999 418 426.998 391 449.999 cv
364 472.001 326 484.001 277 484.001 cv
245 484.001 215 479.999 185 472.001 cv
155 463.999 127 452.998 99.9998 438.998 cv
99.9998 521.999 li
132 533.999 164 544 195 549.999 cv
226 556 256 560 286 560 cv
364.999 560 423.999 538.998 462.999 498.001 cv
502 457.001 521.999 394.999 521.999 312 cv
false sop
ef
}bind def
/t {392 0 27 0 368 702 setcachedevice183 702 mo
183 547 li
368 547 li
368 476.998 li
183 476.998 li
183 180 li
183 135 189 106 201 94 cv
213 81.0001 238 74.9999 276 74.9999 cv
368 74.9999 li
368 0 li
276 0 li
206 0 158 13 132 39 cv
106 65 92.9999 112 92.9999 180 cv
92.9999 476.998 li
27 476.998 li
27 547 li
92.9999 547 li
92.9999 702 li
183 702 li
false sop
ef
}bind def
/e {615 0 55.0001 -13 562 560 setcachedevice562 296 mo
562 252 li
149 252 li
153 190 171 142 205 110 cv
238 78 284 61.9999 344 61.9999 cv
377.998 61.9999 412.001 65.9998 444 73.9998 cv
476 81.9999 508.999 95 540.999 113 cv
540.999 28 li
508.999 14 476 3 442.001 -3 cv
408.001 -8.99999 372.999 -13 339 -13 cv
251 -13 182 12 131 61.9999 cv
79.9998 112 55.0001 181 55.0001 268 cv
55.0001 357.001 78.9999 427.999 127 480.999 cv
175 533 241 560 323 560 cv
396.999 560 454.999 535.999 498.001 488.998 cv
539.999 441.001 562 376.998 562 296 cv
472 322 mo
471 370.999 456.999 410.001 430.998 440.001 cv
403.998 469.001 367.999 483.999 324 483.999 cv
274 483.999 234 469.001 204 441.001 cv
174 413.001 156 372.999 152 322 cv
472 322 li
false sop
ef
}bind def
/parenleft {390 0 86 -131 310 759 setcachedevice310 759 mo
266 683.002 234 609.002 213 535.998 cv
191 463 181 389 181 314 cv
181 238 191 164 213 90.9999 cv
234 17 266 -56.0002 310 -131 cv
232 -131 li
183 -53.9998 146 20 122 94 cv
97.9999 168 85.9998 241 85.9998 314 cv
85.9998 386 97.9999 459 122 532.999 cv
146 607 182 682.001 232 759 cv
310 759 li
false sop
ef
}bind def
/percent {950 0 55.0002 -13 895 741.999 setcachedevice726.998 321 mo
699.001 321 676 309 660 285 cv
643.999 261 635.999 227 635.999 184 cv
635.999 142 643.999 108 660 83.9999 cv
676 60.0002 699.001 48 726.998 48 cv
755.001 48 776.998 60.0002 792.998 83.9999 cv
808.998 108 816.998 142 816.998 184 cv
816.998 226 808.998 260 792.998 284 cv
776.998 308 755.001 321 726.998 321 cv
726.998 383 mo
778.002 383 819.002 365 848.998 329 cv
879 293 895 244 895 184 cv
895 123 879 74.9999 848.998 40 cv
819.002 4 778.002 -13 726.998 -13 cv
675 -13 633.001 4 603 40 cv
572.998 74.9999 558.003 123 558.003 184 cv
558.003 245 572.998 293 603 329 cv
633.001 365 675 383 726.998 383 cv
223 680.003 mo
195 680.003 173 667 157 643 cv
141 619 133 586 133 544 cv
133 500 141 467 157 443 cv
173 419 195 407 223 407 cv
251 407 274 419 290 443 cv
306 467 314 500 314 544 cv
314 586 305 619 289 643 cv
273 667 251 680.003 223 680.003 cv
664.002 741.999 mo
741.999 741.999 li
286 -13 li
208 -13 li
664.002 741.999 li
223 741.999 mo
274 741.999 315 724 346 688.003 cv
376 652 392 603.999 392 544 cv
392 482 376 434 346 398 cv
316 362 275 345 223 345 cv
171 345 130 362 100 398 cv
70 434 55.0002 482 55.0002 544 cv
55.0002 603.999 70 652 100 688.003 cv
130 724 171 741.999 223 741.999 cv
false sop
ef
}bind def
/parenright {390 0 80 -131 304 759 setcachedevice80 759 mo
158 759 li
206 682.001 243 607 267 532.999 cv
291 459 304 386 304 314 cv
304 241 291 168 267 94 cv
243 20 206 -53.9998 158 -131 cv
80 -131 li
123 -56.0002 155 17 177 90.9999 cv
198 164 209 238 209 314 cv
209 389 198 463 177 535.998 cv
155 609.002 123 683.002 80 759 cv
false sop
ef
}bind def
currentdict end def FontName currentdict end definefont pop
%ADOEndSubsetFont
/NOAXUO+ /NOAXUN+ findfont ct_VMDictPut/NOAXUO+*1 [32{/.notdef}rp /space /R /a /t /e /parenleft /percent /parenright 216{/.notdef}rp]NOAXUO+ nfNOAXUO+*1 [4.67857 0 0 -4.67857 0 0 ]msf180.485 99.5113 mo( !"#$ %&')[1.48706 3.25082 2.86722 1.83398 2.87854 1.48706 1.82541 4.44528 0 ]xshgsave
137.03 88.9218 mo
228.396 88.9218 li
228.396 7.18079 li
137.03 7.18079 li
cp
clp
.267347 lw
0 lc
1 lj
10 ml
[.989184 .427755 ] 0 dsh
true sadj
137.03 88.9217 mo
228.403 88.9217 li
false sop
1 /0 /CSD get_res sepcs
.310547 sep
@
grestore
137.03 88.9217 mo
138.2 88.9217 li
false sop
1 /0 /CSD get_res sepcs
1 sep
f
.267347 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
137.03 88.9217 mo
138.2 88.9217 li
@
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
%ADOBeginSubsetFont: NOAXUN+ AddGlyphs
systemdict begin NOAXUO+
/GlyphProcs get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/zero {636 0 66.0003 -13 570 742 setcachedevice318 663.999 mo
267 663.999 229 638.999 203 588.998 cv
177 539.002 165 464.001 165 364 cv
165 264 177 189 203 139 cv
229 89 267 64 318 64 cv
369 64 407 89 433 139 cv
458.001 189 471.002 264 471.002 364 cv
471.002 464.001 458.001 539.002 433 588.998 cv
407 638.999 369 663.999 318 663.999 cv
318 742 mo
399 742 461.001 709.002 505.002 644.999 cv
548.001 579.998 570.002 486.001 570.002 364 cv
570.002 241 548.001 147 505.002 83.0003 cv
461.001 19 399 -13 318 -13 cv
236 -13 173 19 130 83.0003 cv
87.0002 147 66.0003 241 66.0003 364 cv
66.0003 486.001 87.0002 579.998 130 644.999 cv
173 709.002 236 742 318 742 cv
false sop
ef
}bind def
/period {318 0 107 0 209.999 124 setcachedevice107 124 mo
209.999 124 li
209.999 0 li
107 0 li
107 124 li
false sop
ef
}bind def
systemdict /gcheck known {setglobal} if end end
%ADOEndSubsetFont
/NOAXUO+*1 [32{/.notdef}rp /space /R /a /t /e /parenleft /percent /parenright /zero /period 214{/.notdef}rp]NOAXUO+ nfNOAXUO+*1 [4.67857 0 0 -4.67857 0 0 ]msf128.42 90.7006 mo(\(\)\()[2.97659 1.48706 0 ]xshgsave
137.03 88.9218 mo
228.396 88.9218 li
228.396 7.18079 li
137.03 7.18079 li
cp
clp
.267347 lw
0 lc
1 lj
10 ml
[.989184 .427755 ] 0 dsh
true sadj
137.03 70.7557 mo
228.403 70.7557 li
false sop
1 /0 /CSD get_res sepcs
.310547 sep
@
grestore
137.03 70.7557 mo
138.2 70.7557 li
false sop
1 /0 /CSD get_res sepcs
1 sep
f
.267347 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
137.03 70.7557 mo
138.2 70.7557 li
@
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
%ADOBeginSubsetFont: NOAXUN+ AddGlyphs
systemdict begin NOAXUO+
/GlyphProcs get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/two {636 0 73.0001 0 536 742 setcachedevice192 83.0003 mo
536.002 83.0003 li
536.002 0 li
73.0001 0 li
73.0001 83.0003 li
110 121 161 173 226 239 cv
290 304 331 346 348 365 cv
380 400 402 430 414 455 cv
426 479 433 504 433 527.999 cv
433 566.001 419 598.002 392 622.001 cv
365 646 330 659.001 286 659.001 cv
255 659.001 222 653.001 188 643 cv
154 632.002 117 616.001 78.0002 594.001 cv
78.0002 694.003 li
118 709.999 155 721.998 189 730.001 cv
223 737.999 255 742 284 742 cv
359 742 419 723 464.001 684.998 cv
508.999 647.002 532.001 597.001 532.001 533.999 cv
532.001 504 526.001 474.999 514.998 449 cv
504 422 483.998 390 454 354 cv
446 344 420 317 376 272 cv
332 227 271 164 192 83.0003 cv
false sop
ef
}bind def
systemdict /gcheck known {setglobal} if end end
%ADOEndSubsetFont
/NOAXUO+*1 [32{/.notdef}rp /space /R /a /t /e /parenleft /percent /parenright /zero /period /two 213{/.notdef}rp]NOAXUO+ nfNOAXUO+*1 [4.67857 0 0 -4.67857 0 0 ]msf128.42 72.5336 mo(\(\)*)[2.97659 1.48706 0 ]xshgsave
137.03 88.9218 mo
228.396 88.9218 li
228.396 7.18079 li
137.03 7.18079 li
cp
clp
.267347 lw
0 lc
1 lj
10 ml
[.989184 .427755 ] 0 dsh
true sadj
137.03 52.5897 mo
228.403 52.5897 li
false sop
1 /0 /CSD get_res sepcs
.310547 sep
@
grestore
137.03 52.5897 mo
138.2 52.5897 li
false sop
1 /0 /CSD get_res sepcs
1 sep
f
.267347 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
137.03 52.5897 mo
138.2 52.5897 li
@
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
%ADOBeginSubsetFont: NOAXUN+ AddGlyphs
systemdict begin NOAXUO+
/GlyphProcs get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/four {636 0 49 0 580 729 setcachedevice378 643 mo
129 254 li
378 254 li
378 643 li
352 729 mo
476.001 729 li
476.001 254 li
580.002 254 li
580.002 172 li
476.001 172 li
476.001 0 li
378 0 li
378 172 li
49 172 li
49 267 li
352 729 li
false sop
ef
}bind def
systemdict /gcheck known {setglobal} if end end
%ADOEndSubsetFont
/NOAXUO+*1 [32{/.notdef}rp /space /R /a /t /e /parenleft /percent /parenright /zero /period /two /four 212{/.notdef}rp]NOAXUO+ nfNOAXUO+*1 [4.67857 0 0 -4.67857 0 0 ]msf128.42 54.3676 mo(\(\)+)[2.97659 1.48706 0 ]xshgsave
137.03 88.9218 mo
228.396 88.9218 li
228.396 7.18079 li
137.03 7.18079 li
cp
clp
.267347 lw
0 lc
1 lj
10 ml
[.989184 .427755 ] 0 dsh
true sadj
137.03 34.4237 mo
228.403 34.4237 li
false sop
1 /0 /CSD get_res sepcs
.310547 sep
@
grestore
137.03 34.4237 mo
138.2 34.4237 li
false sop
1 /0 /CSD get_res sepcs
1 sep
f
.267347 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
137.03 34.4237 mo
138.2 34.4237 li
@
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
%ADOBeginSubsetFont: NOAXUN+ AddGlyphs
systemdict begin NOAXUO+
/GlyphProcs get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/six {636 0 70.0002 -13 573 742 setcachedevice330 404 mo
286 404 251 388 225 358 cv
199 328 186 286 186 234 cv
186 181 199 139 225 109 cv
251 78.9998 286 64 330 64 cv
374 64 409 78.9998 435 109 cv
461.001 139 474.002 181 474.002 234 cv
474.002 286 461.001 328 435 358 cv
409 388 374 404 330 404 cv
526.001 712.999 mo
526.001 622.998 li
501 635.002 476 644.002 451 650.001 cv
425 656.001 400 659.001 376 659.001 cv
310 659.001 260 637 226 592.999 cv
192 548.998 172 482 168 394 cv
187 422 211 444 240 459.002 cv
269 474.002 301 482 336 482 cv
409 482 467 459.002 508.999 415 cv
551.001 371 573.002 310 573.002 234 cv
573.002 159 550 99.0002 505.999 53.9999 cv
462.002 9.00001 403 -13 330 -13 cv
246 -13 181 19 137 83.0003 cv
91.9999 147 70.0002 241 70.0002 364 cv
70.0002 479 96.9999 570.999 152 638.999 cv
206 706.999 280 742 372 742 cv
396 742 421 739 447 734.999 cv
471.999 730.001 498.001 723 526.001 712.999 cv
false sop
ef
}bind def
systemdict /gcheck known {setglobal} if end end
%ADOEndSubsetFont
/NOAXUO+*1 [32{/.notdef}rp /space /R /a /t /e /parenleft /percent /parenright /zero /period /two /four /six 211{/.notdef}rp]NOAXUO+ nfNOAXUO+*1 [4.67857 0 0 -4.67857 0 0 ]msf128.42 36.2017 mo(\(\),)[2.97659 1.48706 0 ]xshgsave
137.03 88.9218 mo
228.396 88.9218 li
228.396 7.18079 li
137.03 7.18079 li
cp
clp
.267347 lw
0 lc
1 lj
10 ml
[.989184 .427755 ] 0 dsh
true sadj
137.03 16.2577 mo
228.403 16.2577 li
false sop
1 /0 /CSD get_res sepcs
.310547 sep
@
grestore
137.03 16.2577 mo
138.2 16.2577 li
false sop
1 /0 /CSD get_res sepcs
1 sep
f
.267347 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
137.03 16.2577 mo
138.2 16.2577 li
@
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
%ADOBeginSubsetFont: NOAXUN+ AddGlyphs
systemdict begin NOAXUO+
/GlyphProcs get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/eight {636 0 68 -13 567.999 742 setcachedevice318 346 mo
271 346 234 333 207 308 cv
180 283 167 249 167 205 cv
167 161 180 126 207 101 cv
234 76 271 64 318 64 cv
364 64 401 76 428 102 cv
455 127 468.999 161 468.999 205 cv
468.999 249 455 283 429 308 cv
402 333 365 346 318 346 cv
219 388 mo
177 398 144 418 120 447 cv
95.9998 476 85 511.002 85 553 cv
85 610.999 105 656.998 147 690.998 cv
188 724.998 245 742 318 742 cv
390 742 447 724.998 489.001 690.998 cv
530.002 656.998 551.001 610.999 551.001 553 cv
551.001 511.002 539.002 476 514.998 447 cv
490.999 418 459.002 398 417 388 cv
464.001 377 501 355 527.999 323 cv
554.001 291 567.999 251 567.999 205 cv
567.999 134 545.998 79.9999 502.999 43 cv
459.002 4.99999 398 -13 318 -13 cv
237 -13 175 4.99999 132 43 cv
89 79.9999 68 134 68 205 cv
68 251 81 291 108 323 cv
134 355 171 377 219 388 cv
183 544 mo
183 505.999 194 476 218 455 cv
242 434 275 424 318 424 cv
360 424 393 434 417 455 cv
441 476 453 505.999 453 544 cv
453 582.001 441 610.999 417 632.002 cv
393 653.001 360 663.999 318 663.999 cv
275 663.999 242 653.001 218 632.002 cv
194 610.999 183 582.001 183 544 cv
false sop
ef
}bind def
/N {748 0 98 0 649.999 729 setcachedevice97.9999 729 mo
231 729 li
553.999 119 li
553.999 729 li
649.999 729 li
649.999 0 li
516.999 0 li
194 609.998 li
194 0 li
97.9999 0 li
97.9999 729 li
false sop
ef
}bind def
/M {863 0 98 0 765 728.998 setcachedevice97.9998 728.998 mo
245 728.998 li
431 233 li
617.998 728.998 li
765 728.998 li
765 0 li
668.999 0 li
668.999 640 li
481.002 140 li
382 140 li
194 640 li
194 0 li
97.9998 0 li
97.9998 728.998 li
false sop
ef
}bind def
/S {635 0 66.0003 -13 579 742 setcachedevice535 705 mo
535 609 li
496.999 626.999 462.002 640 429 649 cv
395 656.998 363 662.001 333 662.001 cv
279 662.001 237 650.998 208 631.001 cv
179 610.002 165 579.998 165 542.002 cv
165 510 174 485 194 468.999 cv
213 452 250 439 304 429 cv
364 417 li
437 403 490.999 378 526.001 343 cv
561.002 307 579.002 260 579.002 201 cv
579.002 130 554.998 77.0001 508.002 41 cv
459.999 4.99999 391 -13 300 -13 cv
265 -13 228 -9.00001 189 -2 cv
150 4.99999 110 16 69.0001 32 cv
69.0001 134 li
109 111 148 94.0001 186 83.0003 cv
224 70.9999 262 66.0003 300 66.0003 cv
356 66.0003 399 77.0001 430 99.0002 cv
459.999 121 476 152 476 194 cv
476 230 465.002 258 443 278 cv
421 298 385 313 335 323 cv
275 335 li
201 349 148 372 115 404 cv
82.0001 435 66.0003 477.998 66.0003 533.999 cv
66.0003 598.002 87.9999 649 134 686 cv
179 723 242 742 322 742 cv
356 742 390 739 426 733.001 cv
461.001 727.001 496.999 717 535 705 cv
false sop
ef
}bind def
/E {632 0 98 0 567.998 729 setcachedevice97.9999 729 mo
559 729 li
559 646.001 li
197 646.001 li
197 430 li
543.999 430 li
543.999 347 li
197 347 li
197 83 li
567.998 83 li
567.998 0 li
97.9999 0 li
97.9999 729 li
false sop
ef
}bind def
systemdict /gcheck known {setglobal} if end end
%ADOEndSubsetFont
/NOAXUO+*1 [32{/.notdef}rp /space /R /a /t /e /parenleft /percent /parenright /zero /period /two /four /six /eight /N /M /S /E 206{/.notdef}rp]NOAXUO+ nfNOAXUO+*1 [4.67857 0 0 -4.67857 0 0 ]msf128.42 18.0356 mo(\(\)-)[2.97659 1.48706 0 ]xshNOAXUO+*1 [0 -4.67857 -4.67857 0 0 0 ]msf126.112 54.7786 mo(./01)[-3.49957 -4.03674 -2.96991 0 ]ysh.668367 lw
0 lc
1 lj
10 ml
[4.27755 1.06939 .668367 1.06939 ] 0 dsh
true sadj
146.168 80.6967 mo
164.442 77.7418 li
182.717 75.6007 li
200.991 75.0017 li
219.266 71.9657 li
false sop
0 .285527 .87985 0 cmyk
@
146.168 81.5327 mo
146.389 81.5327 146.602 81.4447 146.758 81.2877 cv
146.915 81.1307 147.003 80.9188 147.003 80.6967 cv
147.003 80.4757 146.915 80.2628 146.758 80.1057 cv
146.602 79.9497 146.389 79.8617 146.168 79.8617 cv
145.946 79.8617 145.734 79.9497 145.577 80.1057 cv
145.42 80.2628 145.332 80.4757 145.332 80.6967 cv
145.332 80.9188 145.42 81.1307 145.577 81.2877 cv
145.734 81.4447 145.946 81.5327 146.168 81.5327 cv
f
.334184 lw
[] 0 dsh
146.168 81.5327 mo
146.389 81.5327 146.602 81.4447 146.758 81.2877 cv
146.915 81.1307 147.003 80.9188 147.003 80.6967 cv
147.003 80.4757 146.915 80.2628 146.758 80.1057 cv
146.602 79.9497 146.389 79.8617 146.168 79.8617 cv
145.946 79.8617 145.734 79.9497 145.577 80.1057 cv
145.42 80.2628 145.332 80.4757 145.332 80.6967 cv
145.332 80.9188 145.42 81.1307 145.577 81.2877 cv
145.734 81.4447 145.946 81.5327 146.168 81.5327 cv
cp
@
164.442 78.5767 mo
164.664 78.5767 164.876 78.4887 165.033 78.3327 cv
165.19 78.1757 165.278 77.9627 165.278 77.7418 cv
165.278 77.5197 165.19 77.3077 165.033 77.1507 cv
164.876 76.9937 164.664 76.9057 164.442 76.9057 cv
164.221 76.9057 164.008 76.9937 163.851 77.1507 cv
163.695 77.3077 163.607 77.5197 163.607 77.7418 cv
163.607 77.9627 163.695 78.1757 163.851 78.3327 cv
164.008 78.4887 164.221 78.5767 164.442 78.5767 cv
f
164.442 78.5767 mo
164.664 78.5767 164.876 78.4887 165.033 78.3327 cv
165.19 78.1757 165.278 77.9627 165.278 77.7418 cv
165.278 77.5197 165.19 77.3077 165.033 77.1507 cv
164.876 76.9937 164.664 76.9057 164.442 76.9057 cv
164.221 76.9057 164.008 76.9937 163.851 77.1507 cv
163.695 77.3077 163.607 77.5197 163.607 77.7418 cv
163.607 77.9627 163.695 78.1757 163.851 78.3327 cv
164.008 78.4887 164.221 78.5767 164.442 78.5767 cv
cp
@
182.717 76.4367 mo
182.938 76.4367 183.151 76.3487 183.308 76.1917 cv
183.464 76.0347 183.552 75.8227 183.552 75.6007 cv
183.552 75.3797 183.464 75.1667 183.308 75.0097 cv
183.151 74.8537 182.938 74.7657 182.717 74.7657 cv
182.495 74.7657 182.283 74.8537 182.126 75.0097 cv
181.969 75.1667 181.881 75.3797 181.881 75.6007 cv
181.881 75.8227 181.969 76.0347 182.126 76.1917 cv
182.283 76.3487 182.495 76.4367 182.717 76.4367 cv
f
182.717 76.4367 mo
182.938 76.4367 183.151 76.3487 183.308 76.1917 cv
183.464 76.0347 183.552 75.8227 183.552 75.6007 cv
183.552 75.3797 183.464 75.1667 183.308 75.0097 cv
183.151 74.8537 182.938 74.7657 182.717 74.7657 cv
182.495 74.7657 182.283 74.8537 182.126 75.0097 cv
181.969 75.1667 181.881 75.3797 181.881 75.6007 cv
181.881 75.8227 181.969 76.0347 182.126 76.1917 cv
182.283 76.3487 182.495 76.4367 182.717 76.4367 cv
cp
@
200.991 75.8367 mo
201.213 75.8367 201.425 75.7487 201.582 75.5917 cv
201.739 75.4357 201.827 75.2227 201.827 75.0017 cv
201.827 74.7797 201.739 74.5677 201.582 74.4107 cv
201.425 74.2537 201.213 74.1657 200.991 74.1657 cv
200.77 74.1657 200.557 74.2537 200.401 74.4107 cv
200.244 74.5677 200.156 74.7797 200.156 75.0017 cv
200.156 75.2227 200.244 75.4357 200.401 75.5917 cv
200.557 75.7487 200.77 75.8367 200.991 75.8367 cv
f
200.991 75.8367 mo
201.213 75.8367 201.425 75.7487 201.582 75.5917 cv
201.739 75.4357 201.827 75.2227 201.827 75.0017 cv
201.827 74.7797 201.739 74.5677 201.582 74.4107 cv
201.425 74.2537 201.213 74.1657 200.991 74.1657 cv
200.77 74.1657 200.557 74.2537 200.401 74.4107 cv
200.244 74.5677 200.156 74.7797 200.156 75.0017 cv
200.156 75.2227 200.244 75.4357 200.401 75.5917 cv
200.557 75.7487 200.77 75.8367 200.991 75.8367 cv
cp
@
219.266 72.8017 mo
219.487 72.8017 219.7 72.7127 219.857 72.5567 cv
220.013 72.3997 220.101 72.1877 220.101 71.9657 cv
220.101 71.7447 220.013 71.5317 219.857 71.3757 cv
219.7 71.2188 219.487 71.1307 219.266 71.1307 cv
219.044 71.1307 218.832 71.2188 218.675 71.3757 cv
218.518 71.5317 218.43 71.7447 218.43 71.9657 cv
218.43 72.1877 218.518 72.3997 218.675 72.5567 cv
218.832 72.7127 219.044 72.8017 219.266 72.8017 cv
f
219.266 72.8017 mo
219.487 72.8017 219.7 72.7127 219.857 72.5567 cv
220.013 72.3997 220.101 72.1877 220.101 71.9657 cv
220.101 71.7447 220.013 71.5317 219.857 71.3757 cv
219.7 71.2188 219.487 71.1307 219.266 71.1307 cv
219.044 71.1307 218.832 71.2188 218.675 71.3757 cv
218.518 71.5317 218.43 71.7447 218.43 71.9657 cv
218.43 72.1877 218.518 72.3997 218.675 72.5567 cv
218.832 72.7127 219.044 72.8017 219.266 72.8017 cv
cp
@
.668367 lw
2 lc
146.168 84.2877 mo
164.442 81.9597 li
182.717 77.2927 li
200.991 65.2917 li
219.266 13.8587 li
.335546 .71603 0 0 cmyk
@
146.168 83.4527 mo
145.332 85.1237 li
147.003 85.1237 li
f
.334184 lw
0 lc
0 lj
146.168 83.4527 mo
145.332 85.1237 li
147.003 85.1237 li
cp
@
164.442 81.1247 mo
163.607 82.7957 li
165.278 82.7957 li
f
164.442 81.1247 mo
163.607 82.7957 li
165.278 82.7957 li
cp
@
182.717 76.4577 mo
181.881 78.1287 li
183.552 78.1287 li
f
182.717 76.4577 mo
181.881 78.1287 li
183.552 78.1287 li
cp
@
200.991 64.4567 mo
200.156 66.1267 li
201.827 66.1267 li
f
200.991 64.4567 mo
200.156 66.1267 li
201.827 66.1267 li
cp
@
219.266 13.0237 mo
218.43 14.6947 li
220.101 14.6947 li
f
219.266 13.0237 mo
218.43 14.6947 li
220.101 14.6947 li
cp
@
.668367 lw
2 lc
1 lj
146.168 64.7617 mo
164.442 62.4837 li
182.717 63.3697 li
200.991 64.0807 li
219.266 62.6517 li
.62948 0 0 0 cmyk
@
146.168 63.9267 mo
145.373 64.5037 li
145.677 65.4377 li
146.659 65.4377 li
146.962 64.5037 li
f
.334184 lw
0 lc
0 lj
146.168 63.9267 mo
145.373 64.5037 li
145.677 65.4377 li
146.659 65.4377 li
146.962 64.5037 li
cp
@
164.442 61.6487 mo
163.648 62.2257 li
163.951 63.1597 li
164.933 63.1597 li
165.237 62.2257 li
f
164.442 61.6487 mo
163.648 62.2257 li
163.951 63.1597 li
164.933 63.1597 li
165.237 62.2257 li
cp
@
182.717 62.5338 mo
181.922 63.1117 li
182.226 64.0457 li
183.208 64.0457 li
183.511 63.1117 li
f
182.717 62.5338 mo
181.922 63.1117 li
182.226 64.0457 li
183.208 64.0457 li
183.511 63.1117 li
cp
@
200.991 63.2447 mo
200.197 63.8227 li
200.5 64.7567 li
201.482 64.7567 li
201.786 63.8227 li
f
200.991 63.2447 mo
200.197 63.8227 li
200.5 64.7567 li
201.482 64.7567 li
201.786 63.8227 li
cp
@
219.266 61.8167 mo
218.471 62.3937 li
218.775 63.3277 li
219.757 63.3277 li
220.06 62.3937 li
f
219.266 61.8167 mo
218.471 62.3937 li
218.775 63.3277 li
219.757 63.3277 li
220.06 62.3937 li
cp
@
.668367 lw
1 lj
[4.27755 1.06939 .668367 1.06939 ] 0 dsh
146.168 81.7787 mo
164.442 80.9497 li
182.717 79.7307 li
200.991 80.6007 li
219.266 74.4327 li
.866331 .705257 0 0 cmyk
@
145.332 82.6137 mo
147.003 82.6137 li
147.003 80.9426 li
145.332 80.9426 li
cp
f
.334184 lw
0 lj
[] 0 dsh
145.332 82.6137 mo
147.003 82.6137 li
147.003 80.9426 li
145.332 80.9426 li
cp
@
163.607 81.7857 mo
165.278 81.7857 li
165.278 80.1151 li
163.607 80.1151 li
cp
f
163.607 81.7857 mo
165.278 81.7857 li
165.278 80.1151 li
163.607 80.1151 li
cp
@
181.881 80.5667 mo
183.552 80.5667 li
183.552 78.8956 li
181.881 78.8956 li
cp
f
181.881 80.5667 mo
183.552 80.5667 li
183.552 78.8956 li
181.881 78.8956 li
cp
@
200.156 81.4357 mo
201.827 81.4357 li
201.827 79.7646 li
200.156 79.7646 li
cp
f
200.156 81.4357 mo
201.827 81.4357 li
201.827 79.7646 li
200.156 79.7646 li
cp
@
218.43 75.2677 mo
220.101 75.2677 li
220.101 73.597 li
218.43 73.597 li
cp
f
218.43 75.2677 mo
220.101 75.2677 li
220.101 73.597 li
218.43 73.597 li
cp
@
.668367 lw
2 lc
1 lj
146.168 82.4787 mo
164.442 80.9487 li
182.717 80.5938 li
200.991 80.3927 li
219.266 76.4667 li
.704463 0 1 0 cmyk
@
146.168 81.6427 mo
145.98 82.2208 li
145.373 82.2208 li
145.864 82.5767 li
145.677 83.1547 li
146.168 82.7977 li
146.659 83.1547 li
146.471 82.5767 li
146.962 82.2208 li
146.355 82.2208 li
f
.334184 lw
0 lc
2 lj
146.168 81.6427 mo
145.98 82.2208 li
145.373 82.2208 li
145.864 82.5767 li
145.677 83.1547 li
146.168 82.7977 li
146.659 83.1547 li
146.471 82.5767 li
146.962 82.2208 li
146.355 82.2208 li
cp
@
164.442 80.1127 mo
164.255 80.6898 li
163.648 80.6898 li
164.139 81.0467 li
163.951 81.6237 li
164.442 81.2677 li
164.933 81.6237 li
164.746 81.0467 li
165.237 80.6898 li
164.63 80.6898 li
f
164.442 80.1127 mo
164.255 80.6898 li
163.648 80.6898 li
164.139 81.0467 li
163.951 81.6237 li
164.442 81.2677 li
164.933 81.6237 li
164.746 81.0467 li
165.237 80.6898 li
164.63 80.6898 li
cp
@
182.717 79.7587 mo
182.529 80.3358 li
181.922 80.3358 li
182.413 80.6927 li
182.226 81.2697 li
182.717 80.9127 li
183.208 81.2697 li
183.02 80.6927 li
183.511 80.3358 li
182.904 80.3358 li
f
182.717 79.7587 mo
182.529 80.3358 li
181.922 80.3358 li
182.413 80.6927 li
182.226 81.2697 li
182.717 80.9127 li
183.208 81.2697 li
183.02 80.6927 li
183.511 80.3358 li
182.904 80.3358 li
cp
@
200.991 79.5567 mo
200.804 80.1337 li
200.197 80.1337 li
200.688 80.4907 li
200.5 81.0677 li
200.991 80.7117 li
201.482 81.0677 li
201.295 80.4907 li
201.786 80.1337 li
201.179 80.1337 li
f
200.991 79.5567 mo
200.804 80.1337 li
200.197 80.1337 li
200.688 80.4907 li
200.5 81.0677 li
200.991 80.7117 li
201.482 81.0677 li
201.295 80.4907 li
201.786 80.1337 li
201.179 80.1337 li
cp
@
219.266 75.6307 mo
219.078 76.2087 li
218.471 76.2087 li
218.962 76.5648 li
218.775 77.1427 li
219.266 76.7857 li
219.757 77.1427 li
219.569 76.5648 li
220.06 76.2087 li
219.453 76.2087 li
f
219.266 75.6307 mo
219.078 76.2087 li
218.471 76.2087 li
218.962 76.5648 li
218.775 77.1427 li
219.266 76.7857 li
219.757 77.1427 li
219.569 76.5648 li
220.06 76.2087 li
219.453 76.2087 li
cp
@
.668367 lw
1 lj
[4.27755 1.06939 .668367 1.06939 ] 0 dsh
146.168 84.3207 mo
164.442 83.9088 li
182.717 83.2077 li
200.991 83.0897 li
219.266 80.0287 li
0 .929229 .819821 0 cmyk
@
146.168 85.1557 mo
147.003 83.4857 li
145.332 83.4857 li
f
.334184 lw
0 lj
[] 0 dsh
146.168 85.1557 mo
147.003 83.4857 li
145.332 83.4857 li
cp
@
164.442 84.7437 mo
165.278 83.0727 li
163.607 83.0727 li
f
164.442 84.7437 mo
165.278 83.0727 li
163.607 83.0727 li
cp
@
182.717 84.0438 mo
183.552 82.3727 li
181.881 82.3727 li
f
182.717 84.0438 mo
183.552 82.3727 li
181.881 82.3727 li
cp
@
200.991 83.9257 mo
201.827 82.2547 li
200.156 82.2547 li
f
200.991 83.9257 mo
201.827 82.2547 li
200.156 82.2547 li
cp
@
219.266 80.8647 mo
220.101 79.1937 li
218.43 79.1937 li
f
219.266 80.8647 mo
220.101 79.1937 li
218.43 79.1937 li
cp
@
.267347 lw
2 lc
137.03 88.9217 mo
137.03 7.17371 li
1 /0 /CSD get_res sepcs
1 sep
@
228.403 88.9217 mo
228.403 7.17371 li
@
137.03 88.9217 mo
228.403 88.9217 li
@
137.03 7.17371 mo
228.403 7.17371 li
@
140.305 52.1157 mo
185.792 52.1157 li
186.416 52.1157 186.728 51.8037 186.728 51.1797 cv
186.728 10.4487 li
186.728 9.82574 186.416 9.51373 185.792 9.51373 cv
140.305 9.51373 li
139.682 9.51373 139.37 9.82574 139.37 10.4487 cv
139.37 51.1797 li
139.37 51.8037 139.682 52.1157 140.305 52.1157 cv
1 /0 /CSD get_res sepcs
0 sep
f
.334184 lw
0 lc
140.305 52.1157 mo
185.792 52.1157 li
186.416 52.1157 186.728 51.8037 186.728 51.1797 cv
186.728 10.4487 li
186.728 9.82574 186.416 9.51373 185.792 9.51373 cv
140.305 9.51373 li
139.682 9.51373 139.37 9.82574 139.37 10.4487 cv
139.37 51.1797 li
139.37 51.8037 139.682 52.1157 140.305 52.1157 cv
cp
1 /0 /CSD get_res sepcs
.199219 sep
@
.668367 lw
1 lj
[4.27755 1.06939 .668367 1.06939 ] 0 dsh
141.241 13.3037 mo
150.598 13.3037 li
0 .285527 .87985 0 cmyk
@
145.92 14.1387 mo
146.141 14.1387 146.354 14.0507 146.51 13.8947 cv
146.667 13.7377 146.755 13.5257 146.755 13.3037 cv
146.755 13.0817 146.667 12.8697 146.51 12.7127 cv
146.354 12.5557 146.141 12.4677 145.92 12.4677 cv
145.698 12.4677 145.486 12.5557 145.329 12.7127 cv
145.173 12.8697 145.084 13.0817 145.084 13.3037 cv
145.084 13.5257 145.173 13.7377 145.329 13.8947 cv
145.486 14.0507 145.698 14.1387 145.92 14.1387 cv
f
.334184 lw
[] 0 dsh
145.92 14.1387 mo
146.141 14.1387 146.354 14.0507 146.51 13.8947 cv
146.667 13.7377 146.755 13.5257 146.755 13.3037 cv
146.755 13.0817 146.667 12.8697 146.51 12.7127 cv
146.354 12.5557 146.141 12.4677 145.92 12.4677 cv
145.698 12.4677 145.486 12.5557 145.329 12.7127 cv
145.173 12.8697 145.084 13.0817 145.084 13.3037 cv
145.084 13.5257 145.173 13.7377 145.329 13.8947 cv
145.486 14.0507 145.698 14.1387 145.92 14.1387 cv
cp
@
1 /0 /CSD get_res sepcs
1 sep
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
%ADOBeginSubsetFont: NOAXUN+ AddGlyphs
systemdict begin NOAXUO+
/GlyphProcs get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/P {603 0 98 0 569 729 setcachedevice197 648 mo
197 374 li
321 374 li
367 374 402 385 427 409 cv
451.998 433 464.999 466.998 464.999 511.002 cv
464.999 555.001 451.998 587.999 427 612.002 cv
402 636.001 367 648 321 648 cv
197 648 li
97.9999 729 mo
321 729 li
402 729 464.002 710.001 506.002 673.001 cv
547.997 636.001 569 582.001 569 511.002 cv
569 439 547.997 384 506.002 348 cv
464.002 311 402 293 321 293 cv
197 293 li
197 0 li
97.9999 0 li
97.9999 729 li
false sop
ef
}bind def
/C {698 0 56.0001 -13 644 742 setcachedevice644.002 672.999 mo
644.002 569 li
610.002 598.999 575 622.001 536.999 638.002 cv
499.002 653.001 459.999 660.999 418 660.999 cv
334 660.999 270 635.002 226 584 cv
182 533.002 160 459.999 160 364 cv
160 268 182 194 226 143 cv
270 91.9999 334 66.9999 418 66.9999 cv
459.999 66.9999 499.002 74.0002 536.999 90.0001 cv
575 105 610.002 128 644.002 159 cv
644.002 56.0001 li
609 32 572 15 533.999 4 cv
496.002 -7.00002 455 -13 412 -13 cv
302 -13 215 20 151 87.0002 cv
87.0002 154 56.0001 246 56.0001 364 cv
56.0001 480.998 87.0002 573.002 151 641.002 cv
215 708 302 742 412 742 cv
456.002 742 496.999 736.001 535 724.998 cv
573.002 712.999 610.002 696.001 644.002 672.999 cv
false sop
ef
}bind def
/A {684 0 8 0 676 729 setcachedevice342 631.998 mo
208 269 li
476.001 269 li
342 631.998 li
286 729 mo
398 729 li
676.002 0 li
572.998 0 li
506.999 187 li
178 187 li
112 0 li
7.99999 0 li
286 729 li
false sop
ef
}bind def
systemdict /gcheck known {setglobal} if end end
%ADOEndSubsetFont
/NOAXUO+*1 [32{/.notdef}rp /space /R /a /t /e /parenleft /percent /parenright /zero /period /two /four /six /eight /N /M /S /E /P /C /A 203{/.notdef}rp]NOAXUO+ nfNOAXUO+*1 [4.67857 0 0 -4.67857 0 0 ]msf154.341 14.9406 mo(223)sh163.25 14.9406 mo(4)sh.668367 lw
2 lc
1 lj
10 ml
[] 0 dsh
true sadj
141.241 20.1697 mo
150.598 20.1697 li
false sop
.335546 .71603 0 0 cmyk
@
145.92 19.3347 mo
145.084 21.0057 li
146.755 21.0057 li
f
.334184 lw
0 lc
0 lj
145.92 19.3347 mo
145.084 21.0057 li
146.755 21.0057 li
cp
@
1 /0 /CSD get_res sepcs
1 sep
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
%ADOBeginSubsetFont: NOAXUN+ AddGlyphs
systemdict begin NOAXUO+
/GlyphProcs get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/H {752 0 98 0 653.998 729 setcachedevice97.9999 729 mo
197 729 li
197 430 li
555.001 430 li
555.001 729 li
653.998 729 li
653.998 0 li
555.001 0 li
555.001 347 li
197 347 li
197 0 li
97.9999 0 li
97.9999 729 li
false sop
ef
}bind def
/L {557 0 98 0 552 729 setcachedevice97.9999 729 mo
197 729 li
197 83 li
552 83 li
552 0 li
97.9999 0 li
97.9999 729 li
false sop
ef
}bind def
/T {611 0 -2 0 614 729 setcachedevice-2 729 mo
614.001 729 li
614.001 646.001 li
355 646.001 li
355 0 li
256 0 li
256 646.001 li
-2 646.001 li
-2 729 li
false sop
ef
}bind def
systemdict /gcheck known {setglobal} if end end
%ADOEndSubsetFont
/NOAXUO+*1 [32{/.notdef}rp /space /R /a /t /e /parenleft /percent /parenright /zero /period /two /four /six /eight /N /M /S /E /P /C /A /H /L /T 200{/.notdef}rp]NOAXUO+ nfNOAXUO+*1 [4.67857 0 0 -4.67857 0 0 ]msf154.341 21.8076 mo(5"6!73)[3.51828 2.86722 2.60599 3.24573 2.85776 0 ]xsh.668367 lw
2 lc
1 lj
10 ml
[] 0 dsh
true sadj
141.241 27.0357 mo
150.598 27.0357 li
false sop
.62948 0 0 0 cmyk
@
145.92 26.2007 mo
145.125 26.7777 li
145.429 27.7117 li
146.411 27.7117 li
146.714 26.7777 li
f
.334184 lw
0 lc
0 lj
145.92 26.2007 mo
145.125 26.7777 li
145.429 27.7117 li
146.411 27.7117 li
146.714 26.7777 li
cp
@
1 /0 /CSD get_res sepcs
1 sep
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
%ADOBeginSubsetFont: NOAXUN+ AddGlyphs
systemdict begin NOAXUO+
/GlyphProcs get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/D {770 0 98 0 710.998 729 setcachedevice197 648 mo
197 80.9999 li
316 80.9999 li
416 80.9999 490 103 537 149 cv
582.998 195 607.002 267 607.002 365 cv
607.002 463 582.998 533.999 537 580.002 cv
490 624.999 416 648 316 648 cv
197 648 li
97.9999 729 mo
301 729 li
442 729 545.998 698.999 612.002 641.001 cv
678.001 582.001 710.998 490 710.998 365 cv
710.998 239 676.999 147 611 88.0001 cv
545.001 29 441 0 301 0 cv
97.9999 0 li
97.9999 729 li
false sop
ef
}bind def
systemdict /gcheck known {setglobal} if end end
%ADOEndSubsetFont
/NOAXUO+*1 [32{/.notdef}rp /space /R /a /t /e /parenleft /percent /parenright /zero /period /two /four /six /eight /N /M /S /E /P /C /A /H /L /T /D 199{/.notdef}rp]NOAXUO+ nfNOAXUO+*1 [4.67857 0 0 -4.67857 0 0 ]msf154.341 28.6736 mo(0841)[2.96988 3.60254 3.20081 0 ]xsh.668367 lw
0 lc
1 lj
10 ml
[4.27755 1.06939 .668367 1.06939 ] 0 dsh
true sadj
141.241 33.9027 mo
150.598 33.9027 li
false sop
.866331 .705257 0 0 cmyk
@
145.084 34.7377 mo
146.755 34.7377 li
146.755 33.0667 li
145.084 33.0667 li
cp
f
.334184 lw
0 lj
[] 0 dsh
145.084 34.7377 mo
146.755 34.7377 li
146.755 33.0667 li
145.084 33.0667 li
cp
@
1 /0 /CSD get_res sepcs
1 sep
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
%ADOBeginSubsetFont: NOAXUN+ AddGlyphs
systemdict begin NOAXUO+
/GlyphProcs get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/o {612 0 55 -13 557 560 setcachedevice306 484.001 mo
258 484.001 220 464.999 192 426.998 cv
164 389 150 338 150 273 cv
150 207 163 156 191 118 cv
219 79.9999 257 61.9999 306 61.9999 cv
353.999 61.9999 392 79.9999 420 118 cv
448 156 462 207 462 273 cv
462 337 448 389 420 426.998 cv
392 464.999 353.999 484.001 306 484.001 cv
306 560 mo
383.998 560 445 533.999 490 484.001 cv
533.999 433 557 363 557 273 cv
557 183 533.999 113 490 62.9999 cv
445 12 383.998 -13 306 -13 cv
227 -13 165 12 121 62.9999 cv
76.9999 113 54.9999 183 54.9999 273 cv
54.9999 363 76.9999 433 121 484.001 cv
165 533.999 227 560 306 560 cv
false sop
ef
}bind def
/m {974 0 91 0 889 559.999 setcachedevice520 442 mo
542 482 568.998 511 599.999 531 cv
630.999 550.002 667.999 559.999 710.998 559.999 cv
767 559.999 811.003 540 841.998 500 cv
872.998 460 889 403 889 330 cv
889 0 li
798.999 0 li
798.999 327 li
798.999 379 789.001 418 770.998 444 cv
752.002 469 724.001 482 686.003 482 cv
639 482 602 466 574.998 435 cv
548.001 404 535 362 535 309 cv
535 0 li
445 0 li
445 327 li
445 379 435 418 417 444 cv
398 469 369 482 331 482 cv
285 482 248 466 221 435 cv
194 404 181 362 181 309 cv
181 0 li
90.9998 0 li
90.9998 547.002 li
181 547.002 li
181 462 li
201 495 226 520 255 536 cv
283 551.998 317 559.999 357 559.999 cv
397 559.999 430 550.002 458 530 cv
486 510 506 480 520 442 cv
false sop
ef
}bind def
/b {635 0 91 -13 580 760 setcachedevice487.002 273 mo
487.002 339 473 390 446 428 cv
418 466 381 485.002 334 485.002 cv
286 485.002 249 466 222 428 cv
194 390 181 339 181 273 cv
181 207 194 155 222 117 cv
249 79 286 61.0001 334 61.0001 cv
381 61.0001 418 79 446 117 cv
473 155 487.002 207 487.002 273 cv
181 464 mo
199 496.001 223 519.999 252 536.001 cv
281 551.998 316 559.999 356 559.999 cv
422 559.999 475.998 532.998 517.999 481.001 cv
559.001 428 580.002 359 580.002 273 cv
580.002 187 559.001 117 517.999 65.0001 cv
475.998 13 422 -13 356 -13 cv
316 -13 281 -5.00001 252 10 cv
223 25 199 49 181 81.9999 cv
181 0 li
91 0 li
91 760 li
181 760 li
181 464 li
false sop
ef
}bind def
systemdict /gcheck known {setglobal} if end end
%ADOEndSubsetFont
/NOAXUO+*1 [32{/.notdef}rp /space /R /a /t /e /parenleft /percent /parenright /zero /period /two /four /six /eight /N /M /S /E /P /C /A /H /L /T /D /o /m /b 196{/.notdef}rp]NOAXUO+ nfNOAXUO+*1 [4.67857 0 0 -4.67857 0 0 ]msf154.341 35.5396 mo(39:;3.)[3.26678 2.86249 4.55695 2.96948 3.26678 0 ]xsh.668367 lw
2 lc
1 lj
10 ml
[] 0 dsh
true sadj
141.241 40.7687 mo
150.598 40.7687 li
false sop
.704463 0 1 0 cmyk
@
145.92 39.9337 mo
145.732 40.5107 li
145.125 40.5107 li
145.616 40.8677 li
145.429 41.4447 li
145.92 41.0877 li
146.411 41.4447 li
146.223 40.8677 li
146.714 40.5107 li
146.107 40.5107 li
f
.334184 lw
0 lc
2 lj
145.92 39.9337 mo
145.732 40.5107 li
145.125 40.5107 li
145.616 40.8677 li
145.429 41.4447 li
145.92 41.0877 li
146.411 41.4447 li
146.223 40.8677 li
146.714 40.5107 li
146.107 40.5107 li
cp
@
1 /0 /CSD get_res sepcs
1 sep
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
%ADOBeginSubsetFont: NOAXUN+ AddGlyphs
systemdict begin NOAXUO+
/GlyphProcs get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/hyphen {361 0 49 234 312 314 setcachedevice49 314 mo
312 314 li
312 233.999 li
49 233.999 li
49 314 li
false sop
ef
}bind def
/V {684 0 8 0 676 729 setcachedevice286 0 mo
7.99999 729 li
111 729 li
342 115 li
572.998 729 li
676.002 729 li
398 0 li
286 0 li
false sop
ef
}bind def
systemdict /gcheck known {setglobal} if end end
%ADOEndSubsetFont
/NOAXUO+*1 [32{/.notdef}rp /space /R /a /t /e /parenleft /percent /parenright /zero /period /two /four /six /eight /N /M /S /E /P /C /A /H /L /T /D /o /m /b /hyphen /V 194{/.notdef}rp]NOAXUO+ nfNOAXUO+*1 [4.67857 0 0 -4.67857 0 0 ]msf154.341 42.4066 mo(/62<=41)[4.03674 2.60602 2.82117 1.68823 3.20016 3.20081 0 ]xsh.668367 lw
0 lc
1 lj
10 ml
[4.27755 1.06939 .668367 1.06939 ] 0 dsh
true sadj
141.241 47.6357 mo
150.598 47.6357 li
false sop
0 .929229 .819821 0 cmyk
@
145.92 48.4708 mo
146.755 46.8007 li
145.084 46.8007 li
f
.334184 lw
0 lj
[] 0 dsh
145.92 48.4708 mo
146.755 46.8007 li
145.084 46.8007 li
cp
@
1 /0 /CSD get_res sepcs
1 sep
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
%ADOBeginSubsetFont: NOAXUN+ AddGlyphs
systemdict begin NOAXUO+
/GlyphProcs get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/u {634 0 85 -13 543 560 setcachedevice85 216 mo
85 546.999 li
175 546.999 li
175 219 li
175 167 185 129 205 103 cv
225 76.9999 255 64 296 64 cv
344.001 64 382.998 78.9998 410.998 110 cv
438.998 141 452.998 183 452.998 237 cv
452.998 546.999 li
543 546.999 li
543 0 li
452.998 0 li
452.998 83.9999 li
431 50.0001 405 26 377 9.99998 cv
348 -5.00001 315 -13 277 -13 cv
214 -13 166 6 134 44.9999 cv
101 82.9998 85 140 85 216 cv
311 560 mo
311 560 li
false sop
ef
}bind def
/r {411 0 91 0 410.998 560 setcachedevice410.998 462.999 mo
401.001 468.998 390 473 378 476 cv
365.999 477.999 352.999 479.999 339 479.999 cv
288 479.999 249 462.999 222 430.001 cv
194 396.998 181 350 181 288 cv
181 0 li
90.9999 0 li
90.9999 546.999 li
181 546.999 li
181 462 li
199 494.998 224 519.999 254 535.999 cv
284 551.998 321 560 364.999 560 cv
370.998 560 378 559 386.001 559 cv
392.999 558 401.001 557 410.998 555.001 cv
410.998 462.999 li
false sop
ef
}bind def
/s {521 0 54.0001 -13 472 560 setcachedevice443.001 531 mo
443.001 446 li
417 458.001 391 467.998 364 475 cv
336 480.998 308 485.001 279 485.001 cv
234 485.001 200 477.999 178 463.999 cv
156 449.999 145 430.001 145 403 cv
145 381.999 153 365.999 169 353.999 cv
185 342 217 330 265 320 cv
296 313 li
360.001 299 405 279 432 255 cv
458.001 230 472.001 195 472.001 151 cv
472.001 99.9998 451.999 60 411.998 31 cv
372.001 .999998 316 -13 246 -13 cv
216 -13 186 -9.99998 154 -5.00001 cv
122 0 89.0001 7.99999 54.0001 20 cv
54.0001 113 li
86.9999 95 120 82.0001 152 74 cv
184 64.9998 216 61.0001 248 61.0001 cv
290 61.0001 323 68.0001 346.001 82.0001 cv
367.999 96.0001 379.999 117 379.999 144 cv
379.999 168 370.998 187 354.998 200 cv
339 213 303 226 247 238 cv
216 245 li
160 257 119 275 95 299 cv
69.9999 323 57.9998 355.998 57.9998 398.998 cv
57.9998 449.999 75.9998 490 112 518 cv
148 546 200 560 268 560 cv
301 560 332 557 362 551.998 cv
391 546.999 418 540.001 443.001 531 cv
false sop
ef
}bind def
systemdict /gcheck known {setglobal} if end end
%ADOEndSubsetFont
/NOAXUO+*1 [32{/.notdef}rp /space /R /a /t /e /parenleft /percent /parenright /zero /period /two /four /six /eight /N /M /S /E /P /C /A /H /L /T /D /o /m /b /hyphen /V /u /r /s 191{/.notdef}rp]NOAXUO+ nfNOAXUO+*1 [4.67857 0 0 -4.67857 0 0 ]msf154.341 49.2726 mo(07=41 %9>?@')[2.96988 2.85779 3.20016 3.20016 2.95627 1.48706 1.82538 2.86252 2.96524 1.9234 2.43753 0 ]xshfalse sop
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: XAAAAA+CMR9 AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2021 Adobe System Incorporated. All rights reserved.systemdict beginNOAXUK+CMR9 dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/C <1C60D8A8C9B61BBF062DCBBDD9A8F97231D49CE54E63AEAC323188651B862C232A8D0366657DC4DB59F0C015E8055B27764BD6B9EF7888B28B07C8BA2FFD011068274BD6F3268247F7AE4B8482F45396340E3286E8FE698BD87B9E7B97876FCC6384BAF3EA3BBC5018165637EB48DED95D17866D791AE8A674B20C04A5824D85F785D361> |-/Y <1C60D8A8C9B6F7159AD569A6154753BD355A4594E7CD290F5070783965A427A06673DBE1A46E7BB15F1FA7623E1E6527B44C19E9BB3AC71F1AB56B4B9AEE26120FF63A250E096DC415D9438F15BE19815E52FC4CE0D6271AA9054D7A11AD8541E41A47B5E91CE32B2FA9C9E3CCD2A61108049DAF35C2CB2EF5EBC966C0E03E4B7FA7C6517A1713C0DDAA3D4BB1A7D259EA2AD3A5AC21AA63C620426DE77FFB55C4A81FF1047338C27FD282435F68AF4E72EE2C94689C5F2BA588E18DF8319C9985B2F7C598F0C0DBA2BE052A907023DC8C22F445C5CC0A0017F9916A6AEF2340DA6B9288AE615F> |-/b <1C60D8A8C9B7E1F893A967A6DCFDCA461B6C637826D83806BF44EEB5BC7A16348F53ACDCB747FC9195E30333FD466DAED7032BC501538B28F6B160224C882320266AA5A2433711A3799BCECDCF8CDC73AF3D206DD65585395DB682F4C98BF54A49CD56773360EB36D6BDF9618D4E211845E436965DE6477B809276557E15FCA327B0634DD43AE1A65D5144BB1224E857F757D75C7F41364B34> |-systemdict /gcheck known {setglobal} if end {end} ifendNOAXUK+CMR9 /Encoding getdup 67 /C putdup 89 /Y putdup 98 /b putpop%ADOEndSubsetFont
/NOAXUK+CMR9*1 [40{/.notdef}rp /parenleft /parenright 24{/.notdef}rp /B /C /.notdef /E 4{/.notdef}rp /J 2{/.notdef}rp /M /N 4{/.notdef}rp /S /T 4{/.notdef}rp /Y 7{/.notdef}rp /a /b 6{/.notdef}rp /i 4{/.notdef}rp /n /o 8{/.notdef}rp /x 135{/.notdef}rp]NOAXUK+CMR9 nfNOAXUK+CMR9*1 [8.96638 0 0 -8.96638 0 0 ]msf127.693 113.377 mo(\(b\)NMSEonTaxiNYC)[3.60001 5.1601 6.72006 6.96008 8.39996 5.16003 9.36011 4.56003 8.16003 5.88013 4.56003 4.92004 2.52002 6.96005 6.96005 0 ]xsh238.573 102.457 mo
356.473 102.457 li
356.473 -5.8183 li
238.573 -5.8183 li
cp
1 /0 /CSD get_res sepcs
0 sep
f
253.31 88.9217 mo
344.683 88.9217 li
344.683 7.17371 li
253.31 7.17371 li
cp
f
gsave
253.31 88.9218 mo
344.676 88.9218 li
344.676 7.18079 li
253.31 7.18079 li
cp
clp
.267347 lw
0 lc
1 lj
10 ml
[.989184 .427755 ] 0 dsh
true sadj
262.448 88.9217 mo
262.448 7.17371 li
1 /0 /CSD get_res sepcs
.310547 sep
@
grestore
262.448 88.9217 mo
262.448 87.7527 li
1 /0 /CSD get_res sepcs
1 sep
f
.267347 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
262.448 88.9217 mo
262.448 87.7527 li
@
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
%ADOBeginSubsetFont: NOAXUP+ Initial
10 dict begin
ct_T3Defs
/FontType 3 def
/FontName /NOAXUP+ def
/FontMatrix [0.001 0 0 0.001 0 0 ] def
/FontBBox [-1.021 -0.463 1.793 1.232 ] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 32 /one put
dup 33 /zero put
 def
/GlyphProcs 256 dict begin
/.notdef {250 0 0 0 250 0 setcachedevice}bind def
/one {636 0 110 0 543.999 729 setcachedevice124 83 mo
285 83 li
285 639.002 li
110 604.001 li
110 693.999 li
284 729 li
383 729 li
383 83 li
543.999 83 li
543.999 0 li
124 0 li
124 83 li
false sop
ef
}bind def
/zero {636 0 66.0003 -13 570 742 setcachedevice318 663.999 mo
267 663.999 229 638.999 203 588.998 cv
177 539.002 165 464.001 165 364 cv
165 264 177 189 203 139 cv
229 89 267 64 318 64 cv
369 64 407 89 433 139 cv
458.001 189 471.002 264 471.002 364 cv
471.002 464.001 458.001 539.002 433 588.998 cv
407 638.999 369 663.999 318 663.999 cv
318 742 mo
399 742 461.001 709.002 505.002 644.999 cv
548.001 579.998 570.002 486.001 570.002 364 cv
570.002 241 548.001 147 505.002 83.0003 cv
461.001 19 399 -13 318 -13 cv
236 -13 173 19 130 83.0003 cv
87.0002 147 66.0003 241 66.0003 364 cv
66.0003 486.001 87.0002 579.998 130 644.999 cv
173 709.002 236 742 318 742 cv
false sop
ef
}bind def
currentdict end def FontName currentdict end definefont pop
%ADOEndSubsetFont
/NOAXUQ+ /NOAXUP+ findfont ct_VMDictPut/NOAXUQ+*1 [32{/.notdef}rp /one /zero 222{/.notdef}rp]NOAXUQ+ nfNOAXUQ+*1 [4.67857 0 0 -4.67857 0 0 ]msf259.471 93.6476 mo( !)[2.97659 0 ]xshgsave
253.31 88.9218 mo
344.676 88.9218 li
344.676 7.18079 li
253.31 7.18079 li
cp
clp
.267347 lw
0 lc
1 lj
10 ml
[.989184 .427755 ] 0 dsh
true sadj
280.722 88.9217 mo
280.722 7.17371 li
false sop
1 /0 /CSD get_res sepcs
.310547 sep
@
grestore
280.722 88.9217 mo
280.722 87.7527 li
false sop
1 /0 /CSD get_res sepcs
1 sep
f
.267347 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
280.722 88.9217 mo
280.722 87.7527 li
@
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
%ADOBeginSubsetFont: NOAXUP+ AddGlyphs
systemdict begin NOAXUQ+
/GlyphProcs get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/three {636 0 76 -13 556 742 setcachedevice406 393 mo
453 383 490.003 362 516 330 cv
542.002 298 556 258 556 212 cv
556 140 530.999 83.9999 482 45 cv
432 6.00001 362 -13 271 -13 cv
240 -13 208 -10 176 -4 cv
144 1 110 10 76 22 cv
76 117 li
103 101 133 89 166 81 cv
198 73.0001 232 69.0001 268 69.0001 cv
330 69.0001 377 81 409 105 cv
441 129 458.001 165 458.001 212 cv
458.001 254 443 288 413 312 cv
383 336 341 349 287 349 cv
202 349 li
202 430 li
291 430 li
339 430 376 439 402 459.002 cv
428 477.998 441 505.999 441 542.999 cv
441 579.998 427 609 401 629.002 cv
374 649 336 659.001 287 659.001 cv
260 659.001 231 656.001 200 650.001 cv
169 644.002 135 635.002 98 622.998 cv
98 711 li
135 721.001 170 728.999 203 734.002 cv
235 739 266 742 296 742 cv
370 742 429 724.998 473 690.998 cv
517.001 656.998 539.002 610.999 539.002 553 cv
539.002 513 527.002 479 504 451 cv
480.998 423 448 403 406 393 cv
false sop
ef
}bind def
systemdict /gcheck known {setglobal} if end end
%ADOEndSubsetFont
/NOAXUQ+*1 [32{/.notdef}rp /one /zero /three 221{/.notdef}rp]NOAXUQ+ nfNOAXUQ+*1 [4.67857 0 0 -4.67857 0 0 ]msf277.746 93.6476 mo("!)[2.97656 0 ]xshgsave
253.31 88.9218 mo
344.676 88.9218 li
344.676 7.18079 li
253.31 7.18079 li
cp
clp
.267347 lw
0 lc
1 lj
10 ml
[.989184 .427755 ] 0 dsh
true sadj
298.997 88.9217 mo
298.997 7.17371 li
false sop
1 /0 /CSD get_res sepcs
.310547 sep
@
grestore
298.997 88.9217 mo
298.997 87.7527 li
false sop
1 /0 /CSD get_res sepcs
1 sep
f
.267347 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
298.997 88.9217 mo
298.997 87.7527 li
@
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
%ADOBeginSubsetFont: NOAXUP+ AddGlyphs
systemdict begin NOAXUQ+
/GlyphProcs get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/five {636 0 77 -13 548.999 729 setcachedevice108 729 mo
495 729 li
495 646.001 li
198 646.001 li
198 466.998 li
212 471.998 227 476.001 241 478 cv
255 479.999 270 481.998 284 481.998 cv
365 481.998 429 459.001 476.998 415 cv
525 370 548.999 310 548.999 234 cv
548.999 155 523.999 93.9998 474.999 51 cv
426 7.99999 357 -13 269 -13 cv
238 -13 207 -10 175 -5.99998 cv
143 -1 111 5.99998 76.9998 17 cv
76.9998 116 li
106 100 136 88.0001 168 79.9999 cv
199 72.0001 232 69 267 69 cv
323 69 368 83 401 113 cv
433 143 449.998 183 449.998 234 cv
449.998 284 433 324 401 354 cv
368 384 323 399 267 399 cv
241 399 214 396 188 390 cv
162 384 135 375 108 363 cv
108 729 li
false sop
ef
}bind def
systemdict /gcheck known {setglobal} if end end
%ADOEndSubsetFont
/NOAXUQ+*1 [32{/.notdef}rp /one /zero /three /five 220{/.notdef}rp]NOAXUQ+ nfNOAXUQ+*1 [4.67857 0 0 -4.67857 0 0 ]msf296.021 93.6476 mo(#!)[2.97656 0 ]xshgsave
253.31 88.9218 mo
344.676 88.9218 li
344.676 7.18079 li
253.31 7.18079 li
cp
clp
.267347 lw
0 lc
1 lj
10 ml
[.989184 .427755 ] 0 dsh
true sadj
317.271 88.9217 mo
317.271 7.17371 li
false sop
1 /0 /CSD get_res sepcs
.310547 sep
@
grestore
317.271 88.9217 mo
317.271 87.7527 li
false sop
1 /0 /CSD get_res sepcs
1 sep
f
.267347 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
317.271 88.9217 mo
317.271 87.7527 li
@
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
%ADOBeginSubsetFont: NOAXUP+ AddGlyphs
systemdict begin NOAXUQ+
/GlyphProcs get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/seven {636 0 82 0 550.998 729 setcachedevice81.9999 729 mo
550.998 729 li
550.998 686.999 li
286 0 li
183 0 li
432 646.001 li
81.9999 646.001 li
81.9999 729 li
false sop
ef
}bind def
systemdict /gcheck known {setglobal} if end end
%ADOEndSubsetFont
/NOAXUQ+*1 [32{/.notdef}rp /one /zero /three /five /seven 219{/.notdef}rp]NOAXUQ+ nfNOAXUQ+*1 [4.67857 0 0 -4.67857 0 0 ]msf314.295 93.6476 mo($!)[2.97696 0 ]xshgsave
253.31 88.9218 mo
344.676 88.9218 li
344.676 7.18079 li
253.31 7.18079 li
cp
clp
.267347 lw
0 lc
1 lj
10 ml
[.989184 .427755 ] 0 dsh
true sadj
335.546 88.9217 mo
335.546 7.17371 li
false sop
1 /0 /CSD get_res sepcs
.310547 sep
@
grestore
335.546 88.9217 mo
335.546 87.7527 li
false sop
1 /0 /CSD get_res sepcs
1 sep
f
.267347 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
335.546 88.9217 mo
335.546 87.7527 li
@
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
%ADOBeginSubsetFont: NOAXUP+ AddGlyphs
systemdict begin NOAXUQ+
/GlyphProcs get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/nine {636 0 63 -13 566 742 setcachedevice110 15 mo
110 105 li
134 93 159 83.9999 185 78.0002 cv
210 72 235 69.0001 260 69.0001 cv
324 69.0001 374 90.0001 408 134 cv
442 178 462.002 244 468.002 334 cv
448 306 424 284 396 269 cv
367 254 335 247 300 247 cv
226 247 168 269 126 313 cv
83.9999 357 62.9999 417 62.9999 493.999 cv
62.9999 567.999 85 628.001 129 674 cv
173 718.998 232 742 306 742 cv
390 742 455 709.002 499.002 644.999 cv
542.999 579.998 566.001 486.001 566.001 364 cv
566.001 248 538 157 483.998 89 cv
429 21 356 -13 264 -13 cv
239 -13 214 -10 189 -6.00001 cv
163 -2 137 4.99999 110 15 cv
306 324 mo
350 324 385 339 411 369 cv
437 399 450 441 450 493.999 cv
450 545.998 437 588.001 411 618 cv
385 647.998 350 663.999 306 663.999 cv
262 663.999 227 647.998 201 618 cv
175 588.001 162 545.998 162 493.999 cv
162 441 175 399 201 369 cv
227 339 262 324 306 324 cv
false sop
ef
}bind def
/M {863 0 98 0 765 728.998 setcachedevice97.9998 728.998 mo
245 728.998 li
431 233 li
617.998 728.998 li
765 728.998 li
765 0 li
668.999 0 li
668.999 640 li
481.002 140 li
382 140 li
194 640 li
194 0 li
97.9998 0 li
97.9998 728.998 li
false sop
ef
}bind def
/i {278 0 94 0 184 760 setcachedevice93.9999 547 mo
184 547 li
184 0 li
93.9999 0 li
93.9999 547 li
93.9999 760 mo
184 760 li
184 646 li
93.9999 646 li
93.9999 760 li
false sop
ef
}bind def
/s {521 0 54.0001 -13 472 560 setcachedevice443.001 531 mo
443.001 446 li
417 458.001 391 467.998 364 475 cv
336 480.998 308 485.001 279 485.001 cv
234 485.001 200 477.999 178 463.999 cv
156 449.999 145 430.001 145 403 cv
145 381.999 153 365.999 169 353.999 cv
185 342 217 330 265 320 cv
296 313 li
360.001 299 405 279 432 255 cv
458.001 230 472.001 195 472.001 151 cv
472.001 99.9998 451.999 60 411.998 31 cv
372.001 .999998 316 -13 246 -13 cv
216 -13 186 -9.99998 154 -5.00001 cv
122 0 89.0001 7.99999 54.0001 20 cv
54.0001 113 li
86.9999 95 120 82.0001 152 74 cv
184 64.9998 216 61.0001 248 61.0001 cv
290 61.0001 323 68.0001 346.001 82.0001 cv
367.999 96.0001 379.999 117 379.999 144 cv
379.999 168 370.998 187 354.998 200 cv
339 213 303 226 247 238 cv
216 245 li
160 257 119 275 95 299 cv
69.9999 323 57.9998 355.998 57.9998 398.998 cv
57.9998 449.999 75.9998 490 112 518 cv
148 546 200 560 268 560 cv
301 560 332 557 362 551.998 cv
391 546.999 418 540.001 443.001 531 cv
false sop
ef
}bind def
/n {634 0 91 0 548.999 560 setcachedevice548.999 330 mo
548.999 0 li
459 0 li
459 327 li
459 378.999 448 417 428.001 443.001 cv
407.999 468.998 378 481.998 338 481.998 cv
289 481.998 251 465.999 223 434.999 cv
195 404 181 362 181 309 cv
181 0 li
90.9999 0 li
90.9999 546.999 li
181 546.999 li
181 462 li
202 493.999 227 518.999 257 534.999 cv
286 550.998 320 560 358.001 560 cv
420 560 467.998 540.001 500.001 501 cv
532 462 548.999 405 548.999 330 cv
false sop
ef
}bind def
/g {635 0 55 -207 544 560 setcachedevice453.998 280 mo
453.998 344.001 439.998 394.999 414.001 431 cv
387.001 466.998 349 485.001 301 485.001 cv
253 485.001 215 466.998 188 431 cv
161 394.999 148 344.001 148 280 cv
148 215 161 165 188 129 cv
215 92.9998 253 75.0001 301 75.0001 cv
349 75.0001 387.001 92.9998 414.001 129 cv
439.998 165 453.998 215 453.998 280 cv
544 68.0001 mo
544 -24 522.998 -92.9998 481.998 -139 cv
439.998 -184 377 -207 292 -207 cv
260 -207 231 -204 203 -200 cv
175 -195 147 -188 121 -178 cv
121 -90.9999 li
147 -105 173 -115 199 -122 cv
225 -129 251 -133 278 -133 cv
336 -133 379.999 -117 409.999 -86.9999 cv
438.998 -56 453.998 -9.99998 453.998 51.9999 cv
453.998 96.0001 li
434.999 64 410.998 40.0001 381.999 24 cv
352.999 7.99999 319 0 279 0 cv
211 0 157 25 116 75.9998 cv
75.0001 127 54.9999 195 54.9999 280 cv
54.9999 364 75.0001 432 116 482.998 cv
157 533.999 211 560 279 560 cv
319 560 352.999 551.998 381.999 535.999 cv
410.998 519.999 434.999 495.998 453.998 463.999 cv
453.998 546.999 li
544 546.999 li
544 68.0001 li
false sop
ef
}bind def
systemdict /gcheck known {setglobal} if end end
%ADOEndSubsetFont
/NOAXUQ+*1 [32{/.notdef}rp /one /zero /three /five /seven /nine /M /i /s /n /g 213{/.notdef}rp]NOAXUQ+ nfNOAXUQ+*1 [4.67857 0 0 -4.67857 0 0 ]msf332.569 93.6476 mo(%!)[2.97656 0 ]xsh279.319 99.5113 mo(&'\(\('\)*)[4.03674 1.30002 2.43753 2.4375 1.29962 2.96524 0 ]xsh%ADOBeginSubsetFont: NOAXUR+ Initial
10 dict begin
ct_T3Defs
/FontType 3 def
/FontName /NOAXUR+ def
/FontMatrix [0.001 0 0 0.001 0 0 ] def
/FontBBox [-1.021 -0.463 1.793 1.232 ] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 32 /space put
dup 33 /R put
dup 34 /a put
dup 35 /t put
dup 36 /e put
dup 37 /parenleft put
dup 38 /percent put
dup 39 /parenright put
 def
/GlyphProcs 256 dict begin
/.notdef {250 0 0 0 250 0 setcachedevice}bind def
/space {318 0 0 0 .01 .01 setcachedevice}bind def
/R {695 0 98 0 666 729 setcachedevice444 342 mo
464.999 334 486.001 319 506.002 296 cv
525.998 272 545.998 240 565.999 199 cv
666.002 0 li
560.001 0 li
466.998 187 li
443 235 419 268 397 284 cv
374 300 343 308 304 308 cv
197 308 li
197 0 li
97.9999 0 li
97.9999 729 li
321 729 li
404 729 466.001 710.998 506.999 676.999 cv
547.997 641.998 569 589 569 518.998 cv
569 473 557.998 434 537 404 cv
515 374 483.998 353 444 342 cv
197 648 mo
197 389 li
321 389 li
368 389 404 400 428 422 cv
451.998 444 464.999 476.001 464.999 518.998 cv
464.999 560.999 451.998 592.999 428 614.998 cv
404 636.998 368 648 321 648 cv
197 648 li
false sop
ef
}bind def
/a {613 0 60 -13 521.999 560 setcachedevice343 275 mo
270 275 220 266 192 250 cv
164 233 150 205 150 165 cv
150 133 160 107 181 89.0001 cv
202 69.9999 231 61.0001 267 61.0001 cv
317 61.0001 356.998 78 387.001 114 cv
417 149 432 196 432 255 cv
432 275 li
343 275 li
521.999 312 mo
521.999 0 li
432 0 li
432 82.9998 li
410.998 49 384.998 25 354.998 9.99998 cv
325 -5.00001 287 -13 243 -13 cv
187 -13 142 2 109 33 cv
75.9998 64 60 106 60 159 cv
60 220 79.9999 266 122 298 cv
163 329 224 345.001 306 345.001 cv
432 345.001 li
432 353.999 li
432 394.999 418 426.998 391 449.999 cv
364 472.001 326 484.001 277 484.001 cv
245 484.001 215 479.999 185 472.001 cv
155 463.999 127 452.998 99.9998 438.998 cv
99.9998 521.999 li
132 533.999 164 544 195 549.999 cv
226 556 256 560 286 560 cv
364.999 560 423.999 538.998 462.999 498.001 cv
502 457.001 521.999 394.999 521.999 312 cv
false sop
ef
}bind def
/t {392 0 27 0 368 702 setcachedevice183 702 mo
183 547 li
368 547 li
368 476.998 li
183 476.998 li
183 180 li
183 135 189 106 201 94 cv
213 81.0001 238 74.9999 276 74.9999 cv
368 74.9999 li
368 0 li
276 0 li
206 0 158 13 132 39 cv
106 65 92.9999 112 92.9999 180 cv
92.9999 476.998 li
27 476.998 li
27 547 li
92.9999 547 li
92.9999 702 li
183 702 li
false sop
ef
}bind def
/e {615 0 55.0001 -13 562 560 setcachedevice562 296 mo
562 252 li
149 252 li
153 190 171 142 205 110 cv
238 78 284 61.9999 344 61.9999 cv
377.998 61.9999 412.001 65.9998 444 73.9998 cv
476 81.9999 508.999 95 540.999 113 cv
540.999 28 li
508.999 14 476 3 442.001 -3 cv
408.001 -8.99999 372.999 -13 339 -13 cv
251 -13 182 12 131 61.9999 cv
79.9998 112 55.0001 181 55.0001 268 cv
55.0001 357.001 78.9999 427.999 127 480.999 cv
175 533 241 560 323 560 cv
396.999 560 454.999 535.999 498.001 488.998 cv
539.999 441.001 562 376.998 562 296 cv
472 322 mo
471 370.999 456.999 410.001 430.998 440.001 cv
403.998 469.001 367.999 483.999 324 483.999 cv
274 483.999 234 469.001 204 441.001 cv
174 413.001 156 372.999 152 322 cv
472 322 li
false sop
ef
}bind def
/parenleft {390 0 86 -131 310 759 setcachedevice310 759 mo
266 683.002 234 609.002 213 535.998 cv
191 463 181 389 181 314 cv
181 238 191 164 213 90.9999 cv
234 17 266 -56.0002 310 -131 cv
232 -131 li
183 -53.9998 146 20 122 94 cv
97.9999 168 85.9998 241 85.9998 314 cv
85.9998 386 97.9999 459 122 532.999 cv
146 607 182 682.001 232 759 cv
310 759 li
false sop
ef
}bind def
/percent {950 0 55.0002 -13 895 741.999 setcachedevice726.998 321 mo
699.001 321 676 309 660 285 cv
643.999 261 635.999 227 635.999 184 cv
635.999 142 643.999 108 660 83.9999 cv
676 60.0002 699.001 48 726.998 48 cv
755.001 48 776.998 60.0002 792.998 83.9999 cv
808.998 108 816.998 142 816.998 184 cv
816.998 226 808.998 260 792.998 284 cv
776.998 308 755.001 321 726.998 321 cv
726.998 383 mo
778.002 383 819.002 365 848.998 329 cv
879 293 895 244 895 184 cv
895 123 879 74.9999 848.998 40 cv
819.002 4 778.002 -13 726.998 -13 cv
675 -13 633.001 4 603 40 cv
572.998 74.9999 558.003 123 558.003 184 cv
558.003 245 572.998 293 603 329 cv
633.001 365 675 383 726.998 383 cv
223 680.003 mo
195 680.003 173 667 157 643 cv
141 619 133 586 133 544 cv
133 500 141 467 157 443 cv
173 419 195 407 223 407 cv
251 407 274 419 290 443 cv
306 467 314 500 314 544 cv
314 586 305 619 289 643 cv
273 667 251 680.003 223 680.003 cv
664.002 741.999 mo
741.999 741.999 li
286 -13 li
208 -13 li
664.002 741.999 li
223 741.999 mo
274 741.999 315 724 346 688.003 cv
376 652 392 603.999 392 544 cv
392 482 376 434 346 398 cv
316 362 275 345 223 345 cv
171 345 130 362 100 398 cv
70 434 55.0002 482 55.0002 544 cv
55.0002 603.999 70 652 100 688.003 cv
130 724 171 741.999 223 741.999 cv
false sop
ef
}bind def
/parenright {390 0 80 -131 304 759 setcachedevice80 759 mo
158 759 li
206 682.001 243 607 267 532.999 cv
291 459 304 386 304 314 cv
304 241 291 168 267 94 cv
243 20 206 -53.9998 158 -131 cv
80 -131 li
123 -56.0002 155 17 177 90.9999 cv
198 164 209 238 209 314 cv
209 389 198 463 177 535.998 cv
155 609.002 123 683.002 80 759 cv
false sop
ef
}bind def
currentdict end def FontName currentdict end definefont pop
%ADOEndSubsetFont
/NOAXUS+ /NOAXUR+ findfont ct_VMDictPut/NOAXUS+*1 [32{/.notdef}rp /space /R /a /t /e /parenleft /percent /parenright 216{/.notdef}rp]NOAXUS+ nfNOAXUS+*1 [4.67857 0 0 -4.67857 0 0 ]msf296.765 99.5113 mo( !"#$ %&')[1.48706 3.25082 2.86722 1.83398 2.87851 1.48706 1.82465 4.44571 0 ]xshgsave
253.31 88.9218 mo
344.676 88.9218 li
344.676 7.18079 li
253.31 7.18079 li
cp
clp
.267347 lw
0 lc
1 lj
10 ml
[.989184 .427755 ] 0 dsh
true sadj
253.31 88.9217 mo
344.683 88.9217 li
false sop
1 /0 /CSD get_res sepcs
.310547 sep
@
grestore
253.31 88.9217 mo
254.48 88.9217 li
false sop
1 /0 /CSD get_res sepcs
1 sep
f
.267347 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
253.31 88.9217 mo
254.48 88.9217 li
@
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
%ADOBeginSubsetFont: NOAXUR+ AddGlyphs
systemdict begin NOAXUS+
/GlyphProcs get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/zero {636 0 66.0003 -13 570 742 setcachedevice318 663.999 mo
267 663.999 229 638.999 203 588.998 cv
177 539.002 165 464.001 165 364 cv
165 264 177 189 203 139 cv
229 89 267 64 318 64 cv
369 64 407 89 433 139 cv
458.001 189 471.002 264 471.002 364 cv
471.002 464.001 458.001 539.002 433 588.998 cv
407 638.999 369 663.999 318 663.999 cv
318 742 mo
399 742 461.001 709.002 505.002 644.999 cv
548.001 579.998 570.002 486.001 570.002 364 cv
570.002 241 548.001 147 505.002 83.0003 cv
461.001 19 399 -13 318 -13 cv
236 -13 173 19 130 83.0003 cv
87.0002 147 66.0003 241 66.0003 364 cv
66.0003 486.001 87.0002 579.998 130 644.999 cv
173 709.002 236 742 318 742 cv
false sop
ef
}bind def
/period {318 0 107 0 209.999 124 setcachedevice107 124 mo
209.999 124 li
209.999 0 li
107 0 li
107 124 li
false sop
ef
}bind def
systemdict /gcheck known {setglobal} if end end
%ADOEndSubsetFont
/NOAXUS+*1 [32{/.notdef}rp /space /R /a /t /e /parenleft /percent /parenright /zero /period 214{/.notdef}rp]NOAXUS+ nfNOAXUS+*1 [4.67857 0 0 -4.67857 0 0 ]msf244.7 90.7006 mo(\(\)\()[2.97696 1.48709 0 ]xshgsave
253.31 88.9218 mo
344.676 88.9218 li
344.676 7.18079 li
253.31 7.18079 li
cp
clp
.267347 lw
0 lc
1 lj
10 ml
[.989184 .427755 ] 0 dsh
true sadj
253.31 70.7557 mo
344.683 70.7557 li
false sop
1 /0 /CSD get_res sepcs
.310547 sep
@
grestore
253.31 70.7557 mo
254.48 70.7557 li
false sop
1 /0 /CSD get_res sepcs
1 sep
f
.267347 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
253.31 70.7557 mo
254.48 70.7557 li
@
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
%ADOBeginSubsetFont: NOAXUR+ AddGlyphs
systemdict begin NOAXUS+
/GlyphProcs get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/two {636 0 73.0001 0 536 742 setcachedevice192 83.0003 mo
536.002 83.0003 li
536.002 0 li
73.0001 0 li
73.0001 83.0003 li
110 121 161 173 226 239 cv
290 304 331 346 348 365 cv
380 400 402 430 414 455 cv
426 479 433 504 433 527.999 cv
433 566.001 419 598.002 392 622.001 cv
365 646 330 659.001 286 659.001 cv
255 659.001 222 653.001 188 643 cv
154 632.002 117 616.001 78.0002 594.001 cv
78.0002 694.003 li
118 709.999 155 721.998 189 730.001 cv
223 737.999 255 742 284 742 cv
359 742 419 723 464.001 684.998 cv
508.999 647.002 532.001 597.001 532.001 533.999 cv
532.001 504 526.001 474.999 514.998 449 cv
504 422 483.998 390 454 354 cv
446 344 420 317 376 272 cv
332 227 271 164 192 83.0003 cv
false sop
ef
}bind def
systemdict /gcheck known {setglobal} if end end
%ADOEndSubsetFont
/NOAXUS+*1 [32{/.notdef}rp /space /R /a /t /e /parenleft /percent /parenright /zero /period /two 213{/.notdef}rp]NOAXUS+ nfNOAXUS+*1 [4.67857 0 0 -4.67857 0 0 ]msf244.7 72.5336 mo(\(\)*)[2.97696 1.48709 0 ]xshgsave
253.31 88.9218 mo
344.676 88.9218 li
344.676 7.18079 li
253.31 7.18079 li
cp
clp
.267347 lw
0 lc
1 lj
10 ml
[.989184 .427755 ] 0 dsh
true sadj
253.31 52.5897 mo
344.683 52.5897 li
false sop
1 /0 /CSD get_res sepcs
.310547 sep
@
grestore
253.31 52.5897 mo
254.48 52.5897 li
false sop
1 /0 /CSD get_res sepcs
1 sep
f
.267347 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
253.31 52.5897 mo
254.48 52.5897 li
@
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
%ADOBeginSubsetFont: NOAXUR+ AddGlyphs
systemdict begin NOAXUS+
/GlyphProcs get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/four {636 0 49 0 580 729 setcachedevice378 643 mo
129 254 li
378 254 li
378 643 li
352 729 mo
476.001 729 li
476.001 254 li
580.002 254 li
580.002 172 li
476.001 172 li
476.001 0 li
378 0 li
378 172 li
49 172 li
49 267 li
352 729 li
false sop
ef
}bind def
systemdict /gcheck known {setglobal} if end end
%ADOEndSubsetFont
/NOAXUS+*1 [32{/.notdef}rp /space /R /a /t /e /parenleft /percent /parenright /zero /period /two /four 212{/.notdef}rp]NOAXUS+ nfNOAXUS+*1 [4.67857 0 0 -4.67857 0 0 ]msf244.7 54.3676 mo(\(\)+)[2.97696 1.48709 0 ]xshgsave
253.31 88.9218 mo
344.676 88.9218 li
344.676 7.18079 li
253.31 7.18079 li
cp
clp
.267347 lw
0 lc
1 lj
10 ml
[.989184 .427755 ] 0 dsh
true sadj
253.31 34.4237 mo
344.683 34.4237 li
false sop
1 /0 /CSD get_res sepcs
.310547 sep
@
grestore
253.31 34.4237 mo
254.48 34.4237 li
false sop
1 /0 /CSD get_res sepcs
1 sep
f
.267347 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
253.31 34.4237 mo
254.48 34.4237 li
@
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
%ADOBeginSubsetFont: NOAXUR+ AddGlyphs
systemdict begin NOAXUS+
/GlyphProcs get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/six {636 0 70.0002 -13 573 742 setcachedevice330 404 mo
286 404 251 388 225 358 cv
199 328 186 286 186 234 cv
186 181 199 139 225 109 cv
251 78.9998 286 64 330 64 cv
374 64 409 78.9998 435 109 cv
461.001 139 474.002 181 474.002 234 cv
474.002 286 461.001 328 435 358 cv
409 388 374 404 330 404 cv
526.001 712.999 mo
526.001 622.998 li
501 635.002 476 644.002 451 650.001 cv
425 656.001 400 659.001 376 659.001 cv
310 659.001 260 637 226 592.999 cv
192 548.998 172 482 168 394 cv
187 422 211 444 240 459.002 cv
269 474.002 301 482 336 482 cv
409 482 467 459.002 508.999 415 cv
551.001 371 573.002 310 573.002 234 cv
573.002 159 550 99.0002 505.999 53.9999 cv
462.002 9.00001 403 -13 330 -13 cv
246 -13 181 19 137 83.0003 cv
91.9999 147 70.0002 241 70.0002 364 cv
70.0002 479 96.9999 570.999 152 638.999 cv
206 706.999 280 742 372 742 cv
396 742 421 739 447 734.999 cv
471.999 730.001 498.001 723 526.001 712.999 cv
false sop
ef
}bind def
systemdict /gcheck known {setglobal} if end end
%ADOEndSubsetFont
/NOAXUS+*1 [32{/.notdef}rp /space /R /a /t /e /parenleft /percent /parenright /zero /period /two /four /six 211{/.notdef}rp]NOAXUS+ nfNOAXUS+*1 [4.67857 0 0 -4.67857 0 0 ]msf244.7 36.2017 mo(\(\),)[2.97696 1.48709 0 ]xshgsave
253.31 88.9218 mo
344.676 88.9218 li
344.676 7.18079 li
253.31 7.18079 li
cp
clp
.267347 lw
0 lc
1 lj
10 ml
[.989184 .427755 ] 0 dsh
true sadj
253.31 16.2577 mo
344.683 16.2577 li
false sop
1 /0 /CSD get_res sepcs
.310547 sep
@
grestore
253.31 16.2577 mo
254.48 16.2577 li
false sop
1 /0 /CSD get_res sepcs
1 sep
f
.267347 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
253.31 16.2577 mo
254.48 16.2577 li
@
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
%ADOBeginSubsetFont: NOAXUR+ AddGlyphs
systemdict begin NOAXUS+
/GlyphProcs get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/eight {636 0 68 -13 567.999 742 setcachedevice318 346 mo
271 346 234 333 207 308 cv
180 283 167 249 167 205 cv
167 161 180 126 207 101 cv
234 76 271 64 318 64 cv
364 64 401 76 428 102 cv
455 127 468.999 161 468.999 205 cv
468.999 249 455 283 429 308 cv
402 333 365 346 318 346 cv
219 388 mo
177 398 144 418 120 447 cv
95.9998 476 85 511.002 85 553 cv
85 610.999 105 656.998 147 690.998 cv
188 724.998 245 742 318 742 cv
390 742 447 724.998 489.001 690.998 cv
530.002 656.998 551.001 610.999 551.001 553 cv
551.001 511.002 539.002 476 514.998 447 cv
490.999 418 459.002 398 417 388 cv
464.001 377 501 355 527.999 323 cv
554.001 291 567.999 251 567.999 205 cv
567.999 134 545.998 79.9999 502.999 43 cv
459.002 4.99999 398 -13 318 -13 cv
237 -13 175 4.99999 132 43 cv
89 79.9999 68 134 68 205 cv
68 251 81 291 108 323 cv
134 355 171 377 219 388 cv
183 544 mo
183 505.999 194 476 218 455 cv
242 434 275 424 318 424 cv
360 424 393 434 417 455 cv
441 476 453 505.999 453 544 cv
453 582.001 441 610.999 417 632.002 cv
393 653.001 360 663.999 318 663.999 cv
275 663.999 242 653.001 218 632.002 cv
194 610.999 183 582.001 183 544 cv
false sop
ef
}bind def
/N {748 0 98 0 649.999 729 setcachedevice97.9999 729 mo
231 729 li
553.999 119 li
553.999 729 li
649.999 729 li
649.999 0 li
516.999 0 li
194 609.998 li
194 0 li
97.9999 0 li
97.9999 729 li
false sop
ef
}bind def
/M {863 0 98 0 765 728.998 setcachedevice97.9998 728.998 mo
245 728.998 li
431 233 li
617.998 728.998 li
765 728.998 li
765 0 li
668.999 0 li
668.999 640 li
481.002 140 li
382 140 li
194 640 li
194 0 li
97.9998 0 li
97.9998 728.998 li
false sop
ef
}bind def
/S {635 0 66.0003 -13 579 742 setcachedevice535 705 mo
535 609 li
496.999 626.999 462.002 640 429 649 cv
395 656.998 363 662.001 333 662.001 cv
279 662.001 237 650.998 208 631.001 cv
179 610.002 165 579.998 165 542.002 cv
165 510 174 485 194 468.999 cv
213 452 250 439 304 429 cv
364 417 li
437 403 490.999 378 526.001 343 cv
561.002 307 579.002 260 579.002 201 cv
579.002 130 554.998 77.0001 508.002 41 cv
459.999 4.99999 391 -13 300 -13 cv
265 -13 228 -9.00001 189 -2 cv
150 4.99999 110 16 69.0001 32 cv
69.0001 134 li
109 111 148 94.0001 186 83.0003 cv
224 70.9999 262 66.0003 300 66.0003 cv
356 66.0003 399 77.0001 430 99.0002 cv
459.999 121 476 152 476 194 cv
476 230 465.002 258 443 278 cv
421 298 385 313 335 323 cv
275 335 li
201 349 148 372 115 404 cv
82.0001 435 66.0003 477.998 66.0003 533.999 cv
66.0003 598.002 87.9999 649 134 686 cv
179 723 242 742 322 742 cv
356 742 390 739 426 733.001 cv
461.001 727.001 496.999 717 535 705 cv
false sop
ef
}bind def
/E {632 0 98 0 567.998 729 setcachedevice97.9999 729 mo
559 729 li
559 646.001 li
197 646.001 li
197 430 li
543.999 430 li
543.999 347 li
197 347 li
197 83 li
567.998 83 li
567.998 0 li
97.9999 0 li
97.9999 729 li
false sop
ef
}bind def
systemdict /gcheck known {setglobal} if end end
%ADOEndSubsetFont
/NOAXUS+*1 [32{/.notdef}rp /space /R /a /t /e /parenleft /percent /parenright /zero /period /two /four /six /eight /N /M /S /E 206{/.notdef}rp]NOAXUS+ nfNOAXUS+*1 [4.67857 0 0 -4.67857 0 0 ]msf244.7 18.0356 mo(\(\)-)[2.97696 1.48709 0 ]xshNOAXUS+*1 [0 -4.67857 -4.67857 0 0 0 ]msf242.392 54.7786 mo(./01)[-3.49957 -4.03674 -2.96991 0 ]yshgsave
253.31 88.9218 mo
344.676 88.9218 li
344.676 7.18079 li
253.31 7.18079 li
cp
clp
.668367 lw
0 lc
1 lj
10 ml
[4.27755 1.06939 .668367 1.06939 ] 0 dsh
true sadj
262.448 75.4557 mo
280.722 74.6168 li
298.997 74.1217 li
317.271 72.2147 li
335.546 61.6327 li
false sop
0 .285527 .87985 0 cmyk
@
262.448 76.2907 mo
262.669 76.2907 262.882 76.2027 263.039 76.0467 cv
263.195 75.8897 263.283 75.6767 263.283 75.4557 cv
263.283 75.2337 263.195 75.0217 263.039 74.8647 cv
262.882 74.7077 262.669 74.6197 262.448 74.6197 cv
262.226 74.6197 262.014 74.7077 261.857 74.8647 cv
261.7 75.0217 261.612 75.2337 261.612 75.4557 cv
261.612 75.6767 261.7 75.8897 261.857 76.0467 cv
262.014 76.2027 262.226 76.2907 262.448 76.2907 cv
f
.334184 lw
[] 0 dsh
262.448 76.2907 mo
262.669 76.2907 262.882 76.2027 263.039 76.0467 cv
263.195 75.8897 263.283 75.6767 263.283 75.4557 cv
263.283 75.2337 263.195 75.0217 263.039 74.8647 cv
262.882 74.7077 262.669 74.6197 262.448 74.6197 cv
262.226 74.6197 262.014 74.7077 261.857 74.8647 cv
261.7 75.0217 261.612 75.2337 261.612 75.4557 cv
261.612 75.6767 261.7 75.8897 261.857 76.0467 cv
262.014 76.2027 262.226 76.2907 262.448 76.2907 cv
cp
@
280.722 75.4527 mo
280.944 75.4527 281.157 75.3647 281.313 75.2077 cv
281.47 75.0517 281.558 74.8387 281.558 74.6168 cv
281.558 74.3958 281.47 74.1827 281.313 74.0267 cv
281.157 73.8697 280.944 73.7817 280.722 73.7817 cv
280.501 73.7817 280.288 73.8697 280.132 74.0267 cv
279.975 74.1827 279.887 74.3958 279.887 74.6168 cv
279.887 74.8387 279.975 75.0517 280.132 75.2077 cv
280.288 75.3647 280.501 75.4527 280.722 75.4527 cv
f
280.722 75.4527 mo
280.944 75.4527 281.157 75.3647 281.313 75.2077 cv
281.47 75.0517 281.558 74.8387 281.558 74.6168 cv
281.558 74.3958 281.47 74.1827 281.313 74.0267 cv
281.157 73.8697 280.944 73.7817 280.722 73.7817 cv
280.501 73.7817 280.288 73.8697 280.132 74.0267 cv
279.975 74.1827 279.887 74.3958 279.887 74.6168 cv
279.887 74.8387 279.975 75.0517 280.132 75.2077 cv
280.288 75.3647 280.501 75.4527 280.722 75.4527 cv
cp
@
298.997 74.9577 mo
299.218 74.9577 299.431 74.8697 299.587 74.7127 cv
299.744 74.5557 299.832 74.3438 299.832 74.1217 cv
299.832 73.9007 299.744 73.6877 299.587 73.5317 cv
299.431 73.3747 299.218 73.2867 298.997 73.2867 cv
298.775 73.2867 298.563 73.3747 298.406 73.5317 cv
298.249 73.6877 298.161 73.9007 298.161 74.1217 cv
298.161 74.3438 298.249 74.5557 298.406 74.7127 cv
298.563 74.8697 298.775 74.9577 298.997 74.9577 cv
f
298.997 74.9577 mo
299.218 74.9577 299.431 74.8697 299.587 74.7127 cv
299.744 74.5557 299.832 74.3438 299.832 74.1217 cv
299.832 73.9007 299.744 73.6877 299.587 73.5317 cv
299.431 73.3747 299.218 73.2867 298.997 73.2867 cv
298.775 73.2867 298.563 73.3747 298.406 73.5317 cv
298.249 73.6877 298.161 73.9007 298.161 74.1217 cv
298.161 74.3438 298.249 74.5557 298.406 74.7127 cv
298.563 74.8697 298.775 74.9577 298.997 74.9577 cv
cp
@
317.271 73.0507 mo
317.493 73.0507 317.705 72.9627 317.862 72.8057 cv
318.019 72.6487 318.107 72.4357 318.107 72.2147 cv
318.107 71.9927 318.019 71.7807 317.862 71.6237 cv
317.705 71.4677 317.493 71.3787 317.271 71.3787 cv
317.049 71.3787 316.837 71.4677 316.68 71.6237 cv
316.524 71.7807 316.436 71.9927 316.436 72.2147 cv
316.436 72.4357 316.524 72.6487 316.68 72.8057 cv
316.837 72.9627 317.049 73.0507 317.271 73.0507 cv
f
317.271 73.0507 mo
317.493 73.0507 317.705 72.9627 317.862 72.8057 cv
318.019 72.6487 318.107 72.4357 318.107 72.2147 cv
318.107 71.9927 318.019 71.7807 317.862 71.6237 cv
317.705 71.4677 317.493 71.3787 317.271 71.3787 cv
317.049 71.3787 316.837 71.4677 316.68 71.6237 cv
316.524 71.7807 316.436 71.9927 316.436 72.2147 cv
316.436 72.4357 316.524 72.6487 316.68 72.8057 cv
316.837 72.9627 317.049 73.0507 317.271 73.0507 cv
cp
@
335.546 62.4677 mo
335.767 62.4677 335.98 62.3807 336.137 62.2237 cv
336.293 62.0667 336.381 61.8547 336.381 61.6327 cv
336.381 61.4107 336.293 61.1987 336.137 61.0417 cv
335.98 60.8857 335.767 60.7977 335.546 60.7977 cv
335.324 60.7977 335.112 60.8857 334.955 61.0417 cv
334.798 61.1987 334.71 61.4107 334.71 61.6327 cv
334.71 61.8547 334.798 62.0667 334.955 62.2237 cv
335.112 62.3807 335.324 62.4677 335.546 62.4677 cv
f
335.546 62.4677 mo
335.767 62.4677 335.98 62.3807 336.137 62.2237 cv
336.293 62.0667 336.381 61.8547 336.381 61.6327 cv
336.381 61.4107 336.293 61.1987 336.137 61.0417 cv
335.98 60.8857 335.767 60.7977 335.546 60.7977 cv
335.324 60.7977 335.112 60.8857 334.955 61.0417 cv
334.798 61.1987 334.71 61.4107 334.71 61.6327 cv
334.71 61.8547 334.798 62.0667 334.955 62.2237 cv
335.112 62.3807 335.324 62.4677 335.546 62.4677 cv
cp
@
.668367 lw
2 lc
262.448 81.9787 mo
280.722 80.9167 li
298.997 78.1197 li
317.271 67.9007 li
335.546 16.5307 li
.335546 .71603 0 0 cmyk
@
262.448 81.1427 mo
261.612 82.8137 li
263.283 82.8137 li
f
.334184 lw
0 lc
0 lj
262.448 81.1427 mo
261.612 82.8137 li
263.283 82.8137 li
cp
@
280.722 80.0807 mo
279.887 81.7517 li
281.558 81.7517 li
f
280.722 80.0807 mo
279.887 81.7517 li
281.558 81.7517 li
cp
@
298.997 77.2838 mo
298.161 78.9547 li
299.832 78.9547 li
f
298.997 77.2838 mo
298.161 78.9547 li
299.832 78.9547 li
cp
@
317.271 67.0648 mo
316.436 68.7357 li
318.107 68.7357 li
f
317.271 67.0648 mo
316.436 68.7357 li
318.107 68.7357 li
cp
@
335.546 15.6947 mo
334.71 17.3668 li
336.381 17.3668 li
f
335.546 15.6947 mo
334.71 17.3668 li
336.381 17.3668 li
cp
@
.668367 lw
2 lc
1 lj
262.448 64.7487 mo
280.722 76.6157 li
298.997 66.9818 li
317.271 66.0327 li
335.546 73.0917 li
.62948 0 0 0 cmyk
@
262.448 63.9127 mo
261.653 64.4897 li
261.957 65.4237 li
262.939 65.4237 li
263.242 64.4897 li
f
.334184 lw
0 lc
0 lj
262.448 63.9127 mo
261.653 64.4897 li
261.957 65.4237 li
262.939 65.4237 li
263.242 64.4897 li
cp
@
280.722 75.7797 mo
279.928 76.3577 li
280.231 77.2917 li
281.213 77.2917 li
281.517 76.3577 li
f
280.722 75.7797 mo
279.928 76.3577 li
280.231 77.2917 li
281.213 77.2917 li
281.517 76.3577 li
cp
@
298.997 66.1467 mo
298.202 66.7237 li
298.506 67.6577 li
299.488 67.6577 li
299.791 66.7237 li
f
298.997 66.1467 mo
298.202 66.7237 li
298.506 67.6577 li
299.488 67.6577 li
299.791 66.7237 li
cp
@
317.271 65.1967 mo
316.477 65.7747 li
316.78 66.7087 li
317.762 66.7087 li
318.066 65.7747 li
f
317.271 65.1967 mo
316.477 65.7747 li
316.78 66.7087 li
317.762 66.7087 li
318.066 65.7747 li
cp
@
335.546 72.2557 mo
334.751 72.8327 li
335.055 73.7667 li
336.037 73.7667 li
336.341 72.8327 li
f
335.546 72.2557 mo
334.751 72.8327 li
335.055 73.7667 li
336.037 73.7667 li
336.341 72.8327 li
cp
@
.668367 lw
1 lj
[4.27755 1.06939 .668367 1.06939 ] 0 dsh
262.448 78.5157 mo
280.722 79.3327 li
298.997 78.3537 li
317.271 75.0297 li
335.546 71.9547 li
.866331 .705257 0 0 cmyk
@
261.612 79.3507 mo
263.283 79.3507 li
263.283 77.68 li
261.612 77.68 li
cp
f
.334184 lw
0 lj
[] 0 dsh
261.612 79.3507 mo
263.283 79.3507 li
263.283 77.68 li
261.612 77.68 li
cp
@
279.887 80.1677 mo
281.558 80.1677 li
281.558 78.4966 li
279.887 78.4966 li
cp
f
279.887 80.1677 mo
281.558 80.1677 li
281.558 78.4966 li
279.887 78.4966 li
cp
@
298.161 79.1898 mo
299.832 79.1898 li
299.832 77.519 li
298.161 77.519 li
cp
f
298.161 79.1898 mo
299.832 79.1898 li
299.832 77.519 li
298.161 77.519 li
cp
@
316.436 75.8647 mo
318.107 75.8647 li
318.107 74.1937 li
316.436 74.1937 li
cp
f
316.436 75.8647 mo
318.107 75.8647 li
318.107 74.1937 li
316.436 74.1937 li
cp
@
334.71 72.7907 mo
336.381 72.7907 li
336.381 71.1196 li
334.71 71.1196 li
cp
f
334.71 72.7907 mo
336.381 72.7907 li
336.381 71.1196 li
334.71 71.1196 li
cp
@
.668367 lw
2 lc
1 lj
262.448 81.2337 mo
280.722 77.7247 li
298.997 77.1068 li
317.271 72.4487 li
335.546 69.2647 li
.704463 0 1 0 cmyk
@
262.448 80.3987 mo
262.26 80.9757 li
261.653 80.9757 li
262.144 81.3327 li
261.957 81.9097 li
262.448 81.5537 li
262.939 81.9097 li
262.751 81.3327 li
263.242 80.9757 li
262.635 80.9757 li
f
.334184 lw
0 lc
2 lj
262.448 80.3987 mo
262.26 80.9757 li
261.653 80.9757 li
262.144 81.3327 li
261.957 81.9097 li
262.448 81.5537 li
262.939 81.9097 li
262.751 81.3327 li
263.242 80.9757 li
262.635 80.9757 li
cp
@
280.722 76.8897 mo
280.535 77.4667 li
279.928 77.4667 li
280.419 77.8237 li
280.231 78.4007 li
280.722 78.0438 li
281.213 78.4007 li
281.026 77.8237 li
281.517 77.4667 li
280.91 77.4667 li
f
280.722 76.8897 mo
280.535 77.4667 li
279.928 77.4667 li
280.419 77.8237 li
280.231 78.4007 li
280.722 78.0438 li
281.213 78.4007 li
281.026 77.8237 li
281.517 77.4667 li
280.91 77.4667 li
cp
@
298.997 76.2717 mo
298.809 76.8487 li
298.202 76.8487 li
298.693 77.2057 li
298.506 77.7827 li
298.997 77.4257 li
299.488 77.7827 li
299.3 77.2057 li
299.791 76.8487 li
299.184 76.8487 li
f
298.997 76.2717 mo
298.809 76.8487 li
298.202 76.8487 li
298.693 77.2057 li
298.506 77.7827 li
298.997 77.4257 li
299.488 77.7827 li
299.3 77.2057 li
299.791 76.8487 li
299.184 76.8487 li
cp
@
317.271 71.6127 mo
317.084 72.1898 li
316.477 72.1898 li
316.968 72.5467 li
316.78 73.1237 li
317.271 72.7677 li
317.762 73.1237 li
317.575 72.5467 li
318.066 72.1898 li
317.459 72.1898 li
f
317.271 71.6127 mo
317.084 72.1898 li
316.477 72.1898 li
316.968 72.5467 li
316.78 73.1237 li
317.271 72.7677 li
317.762 73.1237 li
317.575 72.5467 li
318.066 72.1898 li
317.459 72.1898 li
cp
@
335.546 68.4287 mo
335.358 69.0067 li
334.751 69.0067 li
335.242 69.3627 li
335.055 69.9407 li
335.546 69.5837 li
336.037 69.9407 li
335.849 69.3627 li
336.341 69.0067 li
335.733 69.0067 li
f
335.546 68.4287 mo
335.358 69.0067 li
334.751 69.0067 li
335.242 69.3627 li
335.055 69.9407 li
335.546 69.5837 li
336.037 69.9407 li
335.849 69.3627 li
336.341 69.0067 li
335.733 69.0067 li
cp
@
.668367 lw
1 lj
[4.27755 1.06939 .668367 1.06939 ] 0 dsh
262.448 82.6747 mo
280.722 82.2987 li
298.997 80.1927 li
317.271 78.6287 li
335.546 74.2657 li
0 .929229 .819821 0 cmyk
@
262.448 83.5107 mo
263.283 81.8397 li
261.612 81.8397 li
f
.334184 lw
0 lj
[] 0 dsh
262.448 83.5107 mo
263.283 81.8397 li
261.612 81.8397 li
cp
@
280.722 83.1337 mo
281.558 81.4637 li
279.887 81.4637 li
f
280.722 83.1337 mo
281.558 81.4637 li
279.887 81.4637 li
cp
@
298.997 81.0277 mo
299.832 79.3568 li
298.161 79.3568 li
f
298.997 81.0277 mo
299.832 79.3568 li
298.161 79.3568 li
cp
@
317.271 79.4637 mo
318.107 77.7927 li
316.436 77.7927 li
f
317.271 79.4637 mo
318.107 77.7927 li
316.436 77.7927 li
cp
@
335.546 75.1007 mo
336.381 73.4307 li
334.71 73.4307 li
f
335.546 75.1007 mo
336.381 73.4307 li
334.71 73.4307 li
cp
@
grestore
.267347 lw
2 lc
0 lj
10 ml
[] 0 dsh
true sadj
253.31 88.9217 mo
253.31 7.17371 li
false sop
1 /0 /CSD get_res sepcs
1 sep
@
344.683 88.9217 mo
344.683 7.17371 li
@
253.31 88.9217 mo
344.683 88.9217 li
@
253.31 7.17371 mo
344.683 7.17371 li
@
256.585 52.1157 mo
302.072 52.1157 li
302.696 52.1157 303.008 51.8037 303.008 51.1797 cv
303.008 10.4487 li
303.008 9.82574 302.696 9.51373 302.072 9.51373 cv
256.585 9.51373 li
255.962 9.51373 255.65 9.82574 255.65 10.4487 cv
255.65 51.1797 li
255.65 51.8037 255.962 52.1157 256.585 52.1157 cv
1 /0 /CSD get_res sepcs
0 sep
f
.334184 lw
0 lc
256.585 52.1157 mo
302.072 52.1157 li
302.696 52.1157 303.008 51.8037 303.008 51.1797 cv
303.008 10.4487 li
303.008 9.82574 302.696 9.51373 302.072 9.51373 cv
256.585 9.51373 li
255.962 9.51373 255.65 9.82574 255.65 10.4487 cv
255.65 51.1797 li
255.65 51.8037 255.962 52.1157 256.585 52.1157 cv
cp
1 /0 /CSD get_res sepcs
.199219 sep
@
.668367 lw
1 lj
[4.27755 1.06939 .668367 1.06939 ] 0 dsh
257.521 13.3037 mo
266.878 13.3037 li
0 .285527 .87985 0 cmyk
@
262.2 14.1387 mo
262.421 14.1387 262.634 14.0507 262.791 13.8947 cv
262.947 13.7377 263.035 13.5257 263.035 13.3037 cv
263.035 13.0817 262.947 12.8697 262.791 12.7127 cv
262.634 12.5557 262.421 12.4677 262.2 12.4677 cv
261.978 12.4677 261.766 12.5557 261.609 12.7127 cv
261.452 12.8697 261.364 13.0817 261.364 13.3037 cv
261.364 13.5257 261.452 13.7377 261.609 13.8947 cv
261.766 14.0507 261.978 14.1387 262.2 14.1387 cv
f
.334184 lw
[] 0 dsh
262.2 14.1387 mo
262.421 14.1387 262.634 14.0507 262.791 13.8947 cv
262.947 13.7377 263.035 13.5257 263.035 13.3037 cv
263.035 13.0817 262.947 12.8697 262.791 12.7127 cv
262.634 12.5557 262.421 12.4677 262.2 12.4677 cv
261.978 12.4677 261.766 12.5557 261.609 12.7127 cv
261.452 12.8697 261.364 13.0817 261.364 13.3037 cv
261.364 13.5257 261.452 13.7377 261.609 13.8947 cv
261.766 14.0507 261.978 14.1387 262.2 14.1387 cv
cp
@
1 /0 /CSD get_res sepcs
1 sep
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
%ADOBeginSubsetFont: NOAXUR+ AddGlyphs
systemdict begin NOAXUS+
/GlyphProcs get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/P {603 0 98 0 569 729 setcachedevice197 648 mo
197 374 li
321 374 li
367 374 402 385 427 409 cv
451.998 433 464.999 466.998 464.999 511.002 cv
464.999 555.001 451.998 587.999 427 612.002 cv
402 636.001 367 648 321 648 cv
197 648 li
97.9999 729 mo
321 729 li
402 729 464.002 710.001 506.002 673.001 cv
547.997 636.001 569 582.001 569 511.002 cv
569 439 547.997 384 506.002 348 cv
464.002 311 402 293 321 293 cv
197 293 li
197 0 li
97.9999 0 li
97.9999 729 li
false sop
ef
}bind def
/C {698 0 56.0001 -13 644 742 setcachedevice644.002 672.999 mo
644.002 569 li
610.002 598.999 575 622.001 536.999 638.002 cv
499.002 653.001 459.999 660.999 418 660.999 cv
334 660.999 270 635.002 226 584 cv
182 533.002 160 459.999 160 364 cv
160 268 182 194 226 143 cv
270 91.9999 334 66.9999 418 66.9999 cv
459.999 66.9999 499.002 74.0002 536.999 90.0001 cv
575 105 610.002 128 644.002 159 cv
644.002 56.0001 li
609 32 572 15 533.999 4 cv
496.002 -7.00002 455 -13 412 -13 cv
302 -13 215 20 151 87.0002 cv
87.0002 154 56.0001 246 56.0001 364 cv
56.0001 480.998 87.0002 573.002 151 641.002 cv
215 708 302 742 412 742 cv
456.002 742 496.999 736.001 535 724.998 cv
573.002 712.999 610.002 696.001 644.002 672.999 cv
false sop
ef
}bind def
/A {684 0 8 0 676 729 setcachedevice342 631.998 mo
208 269 li
476.001 269 li
342 631.998 li
286 729 mo
398 729 li
676.002 0 li
572.998 0 li
506.999 187 li
178 187 li
112 0 li
7.99999 0 li
286 729 li
false sop
ef
}bind def
systemdict /gcheck known {setglobal} if end end
%ADOEndSubsetFont
/NOAXUS+*1 [32{/.notdef}rp /space /R /a /t /e /parenleft /percent /parenright /zero /period /two /four /six /eight /N /M /S /E /P /C /A 203{/.notdef}rp]NOAXUS+ nfNOAXUS+*1 [4.67857 0 0 -4.67857 0 0 ]msf270.621 14.9406 mo(223)sh279.53 14.9406 mo(4)sh.668367 lw
2 lc
1 lj
10 ml
[] 0 dsh
true sadj
257.521 20.1697 mo
266.878 20.1697 li
false sop
.335546 .71603 0 0 cmyk
@
262.2 19.3347 mo
261.364 21.0057 li
263.035 21.0057 li
f
.334184 lw
0 lc
0 lj
262.2 19.3347 mo
261.364 21.0057 li
263.035 21.0057 li
cp
@
1 /0 /CSD get_res sepcs
1 sep
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
%ADOBeginSubsetFont: NOAXUR+ AddGlyphs
systemdict begin NOAXUS+
/GlyphProcs get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/H {752 0 98 0 653.998 729 setcachedevice97.9999 729 mo
197 729 li
197 430 li
555.001 430 li
555.001 729 li
653.998 729 li
653.998 0 li
555.001 0 li
555.001 347 li
197 347 li
197 0 li
97.9999 0 li
97.9999 729 li
false sop
ef
}bind def
/L {557 0 98 0 552 729 setcachedevice97.9999 729 mo
197 729 li
197 83 li
552 83 li
552 0 li
97.9999 0 li
97.9999 729 li
false sop
ef
}bind def
/T {611 0 -2 0 614 729 setcachedevice-2 729 mo
614.001 729 li
614.001 646.001 li
355 646.001 li
355 0 li
256 0 li
256 646.001 li
-2 646.001 li
-2 729 li
false sop
ef
}bind def
systemdict /gcheck known {setglobal} if end end
%ADOEndSubsetFont
/NOAXUS+*1 [32{/.notdef}rp /space /R /a /t /e /parenleft /percent /parenright /zero /period /two /four /six /eight /N /M /S /E /P /C /A /H /L /T 200{/.notdef}rp]NOAXUS+ nfNOAXUS+*1 [4.67857 0 0 -4.67857 0 0 ]msf270.621 21.8076 mo(5"6!73)[3.51828 2.86682 2.60669 3.24573 2.85779 0 ]xsh.668367 lw
2 lc
1 lj
10 ml
[] 0 dsh
true sadj
257.521 27.0357 mo
266.878 27.0357 li
false sop
.62948 0 0 0 cmyk
@
262.2 26.2007 mo
261.405 26.7777 li
261.709 27.7117 li
262.691 27.7117 li
262.994 26.7777 li
f
.334184 lw
0 lc
0 lj
262.2 26.2007 mo
261.405 26.7777 li
261.709 27.7117 li
262.691 27.7117 li
262.994 26.7777 li
cp
@
1 /0 /CSD get_res sepcs
1 sep
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
%ADOBeginSubsetFont: NOAXUR+ AddGlyphs
systemdict begin NOAXUS+
/GlyphProcs get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/D {770 0 98 0 710.998 729 setcachedevice197 648 mo
197 80.9999 li
316 80.9999 li
416 80.9999 490 103 537 149 cv
582.998 195 607.002 267 607.002 365 cv
607.002 463 582.998 533.999 537 580.002 cv
490 624.999 416 648 316 648 cv
197 648 li
97.9999 729 mo
301 729 li
442 729 545.998 698.999 612.002 641.001 cv
678.001 582.001 710.998 490 710.998 365 cv
710.998 239 676.999 147 611 88.0001 cv
545.001 29 441 0 301 0 cv
97.9999 0 li
97.9999 729 li
false sop
ef
}bind def
systemdict /gcheck known {setglobal} if end end
%ADOEndSubsetFont
/NOAXUS+*1 [32{/.notdef}rp /space /R /a /t /e /parenleft /percent /parenright /zero /period /two /four /six /eight /N /M /S /E /P /C /A /H /L /T /D 199{/.notdef}rp]NOAXUS+ nfNOAXUS+*1 [4.67857 0 0 -4.67857 0 0 ]msf270.621 28.6736 mo(0841)[2.96951 3.60251 3.20016 0 ]xsh.668367 lw
0 lc
1 lj
10 ml
[4.27755 1.06939 .668367 1.06939 ] 0 dsh
true sadj
257.521 33.9027 mo
266.878 33.9027 li
false sop
.866331 .705257 0 0 cmyk
@
261.364 34.7377 mo
263.035 34.7377 li
263.035 33.0667 li
261.364 33.0667 li
cp
f
.334184 lw
0 lj
[] 0 dsh
261.364 34.7377 mo
263.035 34.7377 li
263.035 33.0667 li
261.364 33.0667 li
cp
@
1 /0 /CSD get_res sepcs
1 sep
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
%ADOBeginSubsetFont: NOAXUR+ AddGlyphs
systemdict begin NOAXUS+
/GlyphProcs get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/o {612 0 55 -13 557 560 setcachedevice306 484.001 mo
258 484.001 220 464.999 192 426.998 cv
164 389 150 338 150 273 cv
150 207 163 156 191 118 cv
219 79.9999 257 61.9999 306 61.9999 cv
353.999 61.9999 392 79.9999 420 118 cv
448 156 462 207 462 273 cv
462 337 448 389 420 426.998 cv
392 464.999 353.999 484.001 306 484.001 cv
306 560 mo
383.998 560 445 533.999 490 484.001 cv
533.999 433 557 363 557 273 cv
557 183 533.999 113 490 62.9999 cv
445 12 383.998 -13 306 -13 cv
227 -13 165 12 121 62.9999 cv
76.9999 113 54.9999 183 54.9999 273 cv
54.9999 363 76.9999 433 121 484.001 cv
165 533.999 227 560 306 560 cv
false sop
ef
}bind def
/m {974 0 91 0 889 559.999 setcachedevice520 442 mo
542 482 568.998 511 599.999 531 cv
630.999 550.002 667.999 559.999 710.998 559.999 cv
767 559.999 811.003 540 841.998 500 cv
872.998 460 889 403 889 330 cv
889 0 li
798.999 0 li
798.999 327 li
798.999 379 789.001 418 770.998 444 cv
752.002 469 724.001 482 686.003 482 cv
639 482 602 466 574.998 435 cv
548.001 404 535 362 535 309 cv
535 0 li
445 0 li
445 327 li
445 379 435 418 417 444 cv
398 469 369 482 331 482 cv
285 482 248 466 221 435 cv
194 404 181 362 181 309 cv
181 0 li
90.9998 0 li
90.9998 547.002 li
181 547.002 li
181 462 li
201 495 226 520 255 536 cv
283 551.998 317 559.999 357 559.999 cv
397 559.999 430 550.002 458 530 cv
486 510 506 480 520 442 cv
false sop
ef
}bind def
/b {635 0 91 -13 580 760 setcachedevice487.002 273 mo
487.002 339 473 390 446 428 cv
418 466 381 485.002 334 485.002 cv
286 485.002 249 466 222 428 cv
194 390 181 339 181 273 cv
181 207 194 155 222 117 cv
249 79 286 61.0001 334 61.0001 cv
381 61.0001 418 79 446 117 cv
473 155 487.002 207 487.002 273 cv
181 464 mo
199 496.001 223 519.999 252 536.001 cv
281 551.998 316 559.999 356 559.999 cv
422 559.999 475.998 532.998 517.999 481.001 cv
559.001 428 580.002 359 580.002 273 cv
580.002 187 559.001 117 517.999 65.0001 cv
475.998 13 422 -13 356 -13 cv
316 -13 281 -5.00001 252 10 cv
223 25 199 49 181 81.9999 cv
181 0 li
91 0 li
91 760 li
181 760 li
181 464 li
false sop
ef
}bind def
systemdict /gcheck known {setglobal} if end end
%ADOEndSubsetFont
/NOAXUS+*1 [32{/.notdef}rp /space /R /a /t /e /parenleft /percent /parenright /zero /period /two /four /six /eight /N /M /S /E /P /C /A /H /L /T /D /o /m /b 196{/.notdef}rp]NOAXUS+ nfNOAXUS+*1 [4.67857 0 0 -4.67857 0 0 ]msf270.621 35.5396 mo(39:;3.)[3.26678 2.86209 4.55783 2.96948 3.26682 0 ]xsh.668367 lw
2 lc
1 lj
10 ml
[] 0 dsh
true sadj
257.521 40.7687 mo
266.878 40.7687 li
false sop
.704463 0 1 0 cmyk
@
262.2 39.9337 mo
262.012 40.5107 li
261.405 40.5107 li
261.896 40.8677 li
261.709 41.4447 li
262.2 41.0877 li
262.691 41.4447 li
262.503 40.8677 li
262.994 40.5107 li
262.387 40.5107 li
f
.334184 lw
0 lc
2 lj
262.2 39.9337 mo
262.012 40.5107 li
261.405 40.5107 li
261.896 40.8677 li
261.709 41.4447 li
262.2 41.0877 li
262.691 41.4447 li
262.503 40.8677 li
262.994 40.5107 li
262.387 40.5107 li
cp
@
1 /0 /CSD get_res sepcs
1 sep
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
%ADOBeginSubsetFont: NOAXUR+ AddGlyphs
systemdict begin NOAXUS+
/GlyphProcs get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/hyphen {361 0 49 234 312 314 setcachedevice49 314 mo
312 314 li
312 233.999 li
49 233.999 li
49 314 li
false sop
ef
}bind def
/V {684 0 8 0 676 729 setcachedevice286 0 mo
7.99999 729 li
111 729 li
342 115 li
572.998 729 li
676.002 729 li
398 0 li
286 0 li
false sop
ef
}bind def
systemdict /gcheck known {setglobal} if end end
%ADOEndSubsetFont
/NOAXUS+*1 [32{/.notdef}rp /space /R /a /t /e /parenleft /percent /parenright /zero /period /two /four /six /eight /N /M /S /E /P /C /A /H /L /T /D /o /m /b /hyphen /V 194{/.notdef}rp]NOAXUS+ nfNOAXUS+*1 [4.67857 0 0 -4.67857 0 0 ]msf270.621 42.4066 mo(/62<=41)[4.03638 2.60666 2.82117 1.68826 3.20016 3.20016 0 ]xsh.668367 lw
0 lc
1 lj
10 ml
[4.27755 1.06939 .668367 1.06939 ] 0 dsh
true sadj
257.521 47.6357 mo
266.878 47.6357 li
false sop
0 .929229 .819821 0 cmyk
@
262.2 48.4708 mo
263.035 46.8007 li
261.364 46.8007 li
f
.334184 lw
0 lj
[] 0 dsh
262.2 48.4708 mo
263.035 46.8007 li
261.364 46.8007 li
cp
@
1 /0 /CSD get_res sepcs
1 sep
Adobe_AGM_Core/ps gx
gsave
grestore
Adobe_AGM_Core/pt gx
%ADOBeginSubsetFont: NOAXUR+ AddGlyphs
systemdict begin NOAXUS+
/GlyphProcs get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/u {634 0 85 -13 543 560 setcachedevice85 216 mo
85 546.999 li
175 546.999 li
175 219 li
175 167 185 129 205 103 cv
225 76.9999 255 64 296 64 cv
344.001 64 382.998 78.9998 410.998 110 cv
438.998 141 452.998 183 452.998 237 cv
452.998 546.999 li
543 546.999 li
543 0 li
452.998 0 li
452.998 83.9999 li
431 50.0001 405 26 377 9.99998 cv
348 -5.00001 315 -13 277 -13 cv
214 -13 166 6 134 44.9999 cv
101 82.9998 85 140 85 216 cv
311 560 mo
311 560 li
false sop
ef
}bind def
/r {411 0 91 0 410.998 560 setcachedevice410.998 462.999 mo
401.001 468.998 390 473 378 476 cv
365.999 477.999 352.999 479.999 339 479.999 cv
288 479.999 249 462.999 222 430.001 cv
194 396.998 181 350 181 288 cv
181 0 li
90.9999 0 li
90.9999 546.999 li
181 546.999 li
181 462 li
199 494.998 224 519.999 254 535.999 cv
284 551.998 321 560 364.999 560 cv
370.998 560 378 559 386.001 559 cv
392.999 558 401.001 557 410.998 555.001 cv
410.998 462.999 li
false sop
ef
}bind def
/s {521 0 54.0001 -13 472 560 setcachedevice443.001 531 mo
443.001 446 li
417 458.001 391 467.998 364 475 cv
336 480.998 308 485.001 279 485.001 cv
234 485.001 200 477.999 178 463.999 cv
156 449.999 145 430.001 145 403 cv
145 381.999 153 365.999 169 353.999 cv
185 342 217 330 265 320 cv
296 313 li
360.001 299 405 279 432 255 cv
458.001 230 472.001 195 472.001 151 cv
472.001 99.9998 451.999 60 411.998 31 cv
372.001 .999998 316 -13 246 -13 cv
216 -13 186 -9.99998 154 -5.00001 cv
122 0 89.0001 7.99999 54.0001 20 cv
54.0001 113 li
86.9999 95 120 82.0001 152 74 cv
184 64.9998 216 61.0001 248 61.0001 cv
290 61.0001 323 68.0001 346.001 82.0001 cv
367.999 96.0001 379.999 117 379.999 144 cv
379.999 168 370.998 187 354.998 200 cv
339 213 303 226 247 238 cv
216 245 li
160 257 119 275 95 299 cv
69.9999 323 57.9998 355.998 57.9998 398.998 cv
57.9998 449.999 75.9998 490 112 518 cv
148 546 200 560 268 560 cv
301 560 332 557 362 551.998 cv
391 546.999 418 540.001 443.001 531 cv
false sop
ef
}bind def
systemdict /gcheck known {setglobal} if end end
%ADOEndSubsetFont
/NOAXUS+*1 [32{/.notdef}rp /space /R /a /t /e /parenleft /percent /parenright /zero /period /two /four /six /eight /N /M /S /E /P /C /A /H /L /T /D /o /m /b /hyphen /V /u /r /s 191{/.notdef}rp]NOAXUS+ nfNOAXUS+*1 [4.67857 0 0 -4.67857 0 0 ]msf270.621 49.2726 mo(07=41 %9>?@')[2.96951 2.85776 3.20081 3.20016 2.95627 1.48709 1.82538 2.86209 2.96524 1.92383 2.4375 0 ]xshfalse sop
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: XAAAAA+CMR9 AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2021 Adobe System Incorporated. All rights reserved.systemdict beginNOAXUK+CMR9 dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/c <1C60D8A8C9B7734FF49887082F34A2D8858AB298B487987B360DD01D6D13F094EFF92EDAC53F0CBF955118A91C415111D0EA7E9E996629AB19A428DD0122C2AE47272B6CAD06071500FF957D0202B7913516F3CB75C7DA739CC2AF7F7D857EB8D4F19D9FD997BC788C2C1E4AEA44111EBE55> |-/e <1C60D8A8C9B772793756C468560B531AB2CB7DCA9C5293A71D9BBB83D795871E145A7FF3009438D79C620932F90DC509550363CF7A485A34A12F12416213CDB3C4E853D7EB434B1E702C3DC229B2FA816404CFC6574E4A0C71BFB8C54E66E8EA9D8AE35738BB38CEA12C36343ADE58D72D5B3B460D> |-/k <1C60D8A8C9B79D2DD44F25ADA11A69DB2603E88ADAE9A998BC8EA541297D44FABB645BFED5389648E1DD1DC92A960D756D768D7EF887130F4D87C78FB9833731EFBD653ACF6CFD067A5A4221DF3B7A51C1FD5ED244DFB4F04E57AAB8BE9B79B030DD3B1CB6A27253E3CBDCD5B38AC2F4D10499FB9E883A1D236C634BC3EA9BD21F777AAA05E77306EBD05660FA601EFDEF357D51420039C6EAFB5A1D0FD923FB4424B106742E3AE58DEB4BC687331B3B641C6080B7B8BAA2C841932D9E0B60D5594D07AACD65D9C23ED35B3F28F3D648409E49B3FCA3956C8F5F8A761C56840A333A680248D178164E976B2D4A02440BB73E06> |-systemdict /gcheck known {setglobal} if end {end} ifendNOAXUK+CMR9 /Encoding getdup 99 /c putdup 101 /e putdup 107 /k putpop%ADOEndSubsetFont
/NOAXUK+CMR9*1 [40{/.notdef}rp /parenleft /parenright 24{/.notdef}rp /B /C /.notdef /E 4{/.notdef}rp /J 2{/.notdef}rp /M /N 4{/.notdef}rp /S /T 4{/.notdef}rp /Y 7{/.notdef}rp /a /b /c /.notdef /e 3{/.notdef}rp /i /.notdef /k 2{/.notdef}rp /n /o 8{/.notdef}rp /x 135{/.notdef}rp]NOAXUK+CMR9 nfNOAXUK+CMR9*1 [8.96638 0 0 -8.96638 0 0 ]msf244.453 113.377 mo(\(c\)NMSEonBikeNYC)[3.60001 4.07996 6.83992 6.96005 8.39996 5.16006 9.36014 4.56 8.16006 6.48004 2.52005 4.68015 4.07999 6.96005 6.96005 0 ]xsh6.13329 235.297 mo
124.033 235.297 li
124.033 117.397 li
6.13329 117.397 li
6.13329 235.297 li
0 0 0 0 cmyk
f
20.8713 220.559 mo
112.243 220.559 li
112.243 131.545 li
20.8713 131.545 li
20.8713 220.559 li
f
25.0243 220.559 mo
27.3313 220.559 li
27.3313 213.496 li
25.0243 213.496 li
25.0243 220.559 li
0 .648438 .892578 0 cmyk
f
42.3293 220.559 mo
44.6373 220.559 li
44.6373 206.868 li
42.3293 206.868 li
42.3293 220.559 li
f
59.6353 220.559 mo
61.9423 220.559 li
61.9423 201.185 li
59.6353 201.185 li
59.6353 220.559 li
f
76.9403 220.559 mo
79.2483 220.559 li
79.2483 196.584 li
76.9403 196.584 li
76.9403 220.559 li
f
94.2463 220.559 mo
96.5533 220.559 li
96.5533 182.325 li
94.2463 182.325 li
94.2463 220.559 li
f
27.3313 220.559 mo
29.6393 220.559 li
29.6393 213.281 li
27.3313 213.281 li
27.3313 220.559 li
.239014 .333252 0 0 cmyk
f
44.6373 220.559 mo
46.9443 220.559 li
46.9443 206.752 li
44.6373 206.752 li
44.6373 220.559 li
f
61.9423 220.559 mo
64.2493 220.559 li
64.2493 198.353 li
61.9423 198.353 li
61.9423 220.559 li
f
79.2483 220.559 mo
81.5553 220.559 li
81.5553 186.251 li
79.2483 186.251 li
79.2483 220.559 li
f
96.5533 220.559 mo
98.8603 220.559 li
98.8603 138.595 li
96.5533 138.595 li
96.5533 220.559 li
f
29.6393 220.559 mo
31.9463 220.559 li
31.9463 210.79 li
29.6393 210.79 li
29.6393 220.559 li
.476807 .101563 .0893555 0 cmyk
f
46.9443 220.559 mo
49.2513 220.559 li
49.2513 202.511 li
46.9443 202.511 li
46.9443 220.559 li
f
64.2493 220.559 mo
66.5573 220.559 li
66.5573 198.229 li
64.2493 198.229 li
64.2493 220.559 li
f
81.5553 220.559 mo
83.8623 220.559 li
83.8623 191.84 li
81.5553 191.84 li
81.5553 220.559 li
f
98.8603 220.559 mo
101.168 220.559 li
101.168 189.231 li
98.8603 189.231 li
98.8603 220.559 li
f
31.9463 220.559 mo
34.2533 220.559 li
34.2533 213.704 li
31.9463 213.704 li
31.9463 220.559 li
1 .841797 .237549 0 cmyk
f
49.2513 220.559 mo
51.5593 220.559 li
51.5593 208.62 li
49.2513 208.62 li
49.2513 220.559 li
f
66.5573 220.559 mo
68.8643 220.559 li
68.8643 200.472 li
66.5573 200.472 li
66.5573 220.559 li
f
83.8623 220.559 mo
86.1693 220.559 li
86.1693 196.265 li
83.8623 196.265 li
83.8623 220.559 li
f
101.168 220.559 mo
103.475 220.559 li
103.475 191.714 li
101.168 191.714 li
101.168 220.559 li
f
34.2533 220.559 mo
36.5613 220.559 li
36.5613 213.469 li
34.2533 213.469 li
34.2533 220.559 li
.673828 0 .941406 0 cmyk
f
51.5593 220.559 mo
53.8663 220.559 li
53.8663 207.968 li
51.5593 207.968 li
51.5593 220.559 li
f
68.8643 220.559 mo
71.1713 220.559 li
71.1713 203.527 li
68.8643 203.527 li
68.8643 220.559 li
f
86.1693 220.559 mo
88.4773 220.559 li
88.4773 199.907 li
86.1693 199.907 li
86.1693 220.559 li
f
103.475 220.559 mo
105.783 220.559 li
105.783 189.304 li
103.475 189.304 li
103.475 220.559 li
f
36.5613 220.559 mo
38.8683 220.559 li
38.8683 214.261 li
36.5613 214.261 li
36.5613 220.559 li
.163086 .976563 .724609 0 cmyk
f
53.8663 220.559 mo
56.1743 220.559 li
56.1743 209.2 li
53.8663 209.2 li
53.8663 220.559 li
f
71.1713 220.559 mo
73.4793 220.559 li
73.4793 204.927 li
71.1713 204.927 li
71.1713 220.559 li
f
88.4773 220.559 mo
90.7853 220.559 li
90.7853 201.331 li
88.4773 201.331 li
88.4773 220.559 li
f
105.783 220.559 mo
108.09 220.559 li
108.09 197.112 li
105.783 197.112 li
105.783 220.559 li
f
31.9463 220.559 mo
31.9463 219.286 li
0 0 0 1 cmyk
f
.291111 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
31.9463 220.559 mo
31.9463 219.286 li
@
29.2973 225.267 mo
30.1173 225.267 li
30.1173 222.435 li
29.2253 222.613 li
29.2253 222.155 li
30.1123 221.976 li
30.6163 221.976 li
30.6163 225.267 li
31.4373 225.267 li
31.4373 225.69 li
29.2973 225.69 li
29.2973 225.267 li
ef
33.6043 221.91 mo
34.0163 221.91 34.3323 222.078 34.5573 222.404 cv
34.7753 222.736 34.8873 223.215 34.8873 223.836 cv
34.8873 224.463 34.7753 224.942 34.5573 225.267 cv
34.3323 225.593 34.0163 225.756 33.6043 225.756 cv
33.1863 225.756 32.8653 225.593 32.6463 225.267 cv
32.4273 224.942 32.3203 224.463 32.3203 223.836 cv
32.3203 223.215 32.4273 222.736 32.6463 222.404 cv
32.8653 222.078 33.1863 221.91 33.6043 221.91 cv
cp
33.6043 222.308 mo
33.3443 222.308 33.1503 222.435 33.0183 222.69 cv
32.8853 222.944 32.8243 223.326 32.8243 223.836 cv
32.8243 224.345 32.8853 224.727 33.0183 224.982 cv
33.1503 225.237 33.3443 225.364 33.6043 225.364 cv
33.8643 225.364 34.0573 225.237 34.1903 224.982 cv
34.3173 224.727 34.3833 224.345 34.3833 223.836 cv
34.3833 223.326 34.3173 222.944 34.1903 222.69 cv
34.0573 222.435 33.8643 222.308 33.6043 222.308 cv
ef
49.2513 220.559 mo
49.2513 219.286 li
f
49.2513 220.559 mo
49.2513 219.286 li
@
48.1133 223.688 mo
48.3523 223.739 48.5413 223.846 48.6733 224.009 cv
48.8053 224.172 48.8773 224.376 48.8773 224.61 cv
48.8773 224.977 48.7493 225.262 48.5003 225.461 cv
48.2453 225.66 47.8893 225.756 47.4253 225.756 cv
47.2673 225.756 47.1043 225.741 46.9413 225.711 cv
46.7783 225.685 46.6053 225.639 46.4323 225.578 cv
46.4323 225.094 li
46.5693 225.176 46.7223 225.237 46.8903 225.277 cv
47.0533 225.318 47.2263 225.339 47.4103 225.339 cv
47.7263 225.339 47.9653 225.277 48.1283 225.155 cv
48.2913 225.033 48.3783 224.85 48.3783 224.61 cv
48.3783 224.396 48.3013 224.223 48.1483 224.101 cv
47.9963 223.979 47.7823 223.912 47.5073 223.912 cv
47.0733 223.912 li
47.0733 223.5 li
47.5273 223.5 li
47.7713 223.5 47.9603 223.454 48.0923 223.352 cv
48.2253 223.255 48.2913 223.113 48.2913 222.924 cv
48.2913 222.736 48.2203 222.588 48.0873 222.486 cv
47.9493 222.384 47.7563 222.333 47.5073 222.333 cv
47.3693 222.333 47.2213 222.348 47.0633 222.379 cv
46.9053 222.409 46.7323 222.455 46.5443 222.517 cv
46.5443 222.068 li
46.7323 222.017 46.9103 221.976 47.0783 221.951 cv
47.2423 221.926 47.3993 221.91 47.5523 221.91 cv
47.9293 221.91 48.2303 221.997 48.4543 222.17 cv
48.6783 222.343 48.7903 222.577 48.7903 222.873 cv
48.7903 223.077 48.7293 223.25 48.6123 223.393 cv
48.4953 223.535 48.3273 223.637 48.1133 223.688 cv
ef
50.8963 221.91 mo
51.3083 221.91 51.6243 222.078 51.8483 222.404 cv
52.0673 222.736 52.1803 223.215 52.1803 223.836 cv
52.1803 224.463 52.0673 224.942 51.8483 225.267 cv
51.6243 225.593 51.3083 225.756 50.8963 225.756 cv
50.4783 225.756 50.1573 225.593 49.9383 225.267 cv
49.7193 224.942 49.6123 224.463 49.6123 223.836 cv
49.6123 223.215 49.7193 222.736 49.9383 222.404 cv
50.1573 222.078 50.4783 221.91 50.8963 221.91 cv
cp
50.8963 222.308 mo
50.6363 222.308 50.4423 222.435 50.3103 222.69 cv
50.1773 222.944 50.1163 223.326 50.1163 223.836 cv
50.1163 224.345 50.1773 224.727 50.3103 224.982 cv
50.4423 225.237 50.6363 225.364 50.8963 225.364 cv
51.1553 225.364 51.3493 225.237 51.4823 224.982 cv
51.6093 224.727 51.6753 224.345 51.6753 223.836 cv
51.6753 223.326 51.6093 222.944 51.4823 222.69 cv
51.3493 222.435 51.1553 222.308 50.8963 222.308 cv
ef
66.5573 220.559 mo
66.5573 219.286 li
f
66.5573 220.559 mo
66.5573 219.286 li
@
63.8873 221.976 mo
65.8583 221.976 li
65.8583 222.399 li
64.3453 222.399 li
64.3453 223.311 li
64.4163 223.286 64.4933 223.265 64.5643 223.255 cv
64.6353 223.245 64.7123 223.235 64.7833 223.235 cv
65.1963 223.235 65.5223 223.352 65.7663 223.576 cv
66.0113 223.805 66.1333 224.111 66.1333 224.498 cv
66.1333 224.901 66.0063 225.211 65.7563 225.431 cv
65.5073 225.65 65.1553 225.756 64.7073 225.756 cv
64.5493 225.756 64.3913 225.741 64.2283 225.721 cv
64.0653 225.695 63.9023 225.66 63.7293 225.604 cv
63.7293 225.099 li
63.8763 225.181 64.0293 225.242 64.1923 225.283 cv
64.3503 225.324 64.5183 225.339 64.6973 225.339 cv
64.9823 225.339 65.2113 225.267 65.3793 225.115 cv
65.5423 224.962 65.6293 224.758 65.6293 224.498 cv
65.6293 224.243 65.5423 224.04 65.3793 223.887 cv
65.2113 223.734 64.9823 223.658 64.6973 223.658 cv
64.5643 223.658 64.4263 223.673 64.2943 223.704 cv
64.1623 223.734 64.0243 223.78 63.8873 223.841 cv
63.8873 221.976 li
ef
68.1883 221.91 mo
68.6003 221.91 68.9163 222.078 69.1413 222.404 cv
69.3593 222.736 69.4713 223.215 69.4713 223.836 cv
69.4713 224.463 69.3593 224.942 69.1413 225.267 cv
68.9163 225.593 68.6003 225.756 68.1883 225.756 cv
67.7703 225.756 67.4493 225.593 67.2303 225.267 cv
67.0113 224.942 66.9043 224.463 66.9043 223.836 cv
66.9043 223.215 67.0113 222.736 67.2303 222.404 cv
67.4493 222.078 67.7703 221.91 68.1883 221.91 cv
cp
68.1883 222.308 mo
67.9283 222.308 67.7343 222.435 67.6023 222.69 cv
67.4693 222.944 67.4083 223.326 67.4083 223.836 cv
67.4083 224.345 67.4693 224.727 67.6023 224.982 cv
67.7343 225.237 67.9283 225.364 68.1883 225.364 cv
68.4483 225.364 68.6413 225.237 68.7743 224.982 cv
68.9013 224.727 68.9673 224.345 68.9673 223.836 cv
68.9673 223.326 68.9013 222.944 68.7743 222.69 cv
68.6413 222.435 68.4483 222.308 68.1883 222.308 cv
ef
83.8623 220.559 mo
83.8623 219.286 li
f
83.8623 220.559 mo
83.8623 219.286 li
@
81.0463 221.976 mo
83.4353 221.976 li
83.4353 222.19 li
82.0853 225.69 li
81.5613 225.69 li
82.8293 222.399 li
81.0463 222.399 li
81.0463 221.976 li
ef
85.4803 221.91 mo
85.8923 221.91 86.2083 222.078 86.4323 222.404 cv
86.6513 222.736 86.7643 223.215 86.7643 223.836 cv
86.7643 224.463 86.6513 224.942 86.4323 225.267 cv
86.2083 225.593 85.8923 225.756 85.4803 225.756 cv
85.0623 225.756 84.7413 225.593 84.5223 225.267 cv
84.3033 224.942 84.1963 224.463 84.1963 223.836 cv
84.1963 223.215 84.3033 222.736 84.5223 222.404 cv
84.7413 222.078 85.0623 221.91 85.4803 221.91 cv
cp
85.4803 222.308 mo
85.2203 222.308 85.0263 222.435 84.8943 222.69 cv
84.7613 222.944 84.7003 223.326 84.7003 223.836 cv
84.7003 224.345 84.7613 224.727 84.8943 224.982 cv
85.0263 225.237 85.2203 225.364 85.4803 225.364 cv
85.7403 225.364 85.9333 225.237 86.0663 224.982 cv
86.1933 224.727 86.2593 224.345 86.2593 223.836 cv
86.2593 223.326 86.1933 222.944 86.0663 222.69 cv
85.9333 222.435 85.7403 222.308 85.4803 222.308 cv
ef
101.168 220.559 mo
101.168 219.286 li
f
101.168 220.559 mo
101.168 219.286 li
@
99.4793 224.04 mo
99.7033 224.04 99.8823 223.963 100.014 223.81 cv
100.147 223.658 100.213 223.443 100.213 223.174 cv
100.213 222.909 100.147 222.695 100.014 222.542 cv
99.8823 222.389 99.7033 222.308 99.4793 222.308 cv
99.2553 222.308 99.0773 222.389 98.9443 222.542 cv
98.8123 222.695 98.7463 222.909 98.7463 223.174 cv
98.7463 223.443 98.8123 223.658 98.9443 223.81 cv
99.0773 223.963 99.2553 224.04 99.4793 224.04 cv
cp
98.4813 225.614 mo
98.4813 225.155 li
98.6033 225.217 98.7303 225.262 98.8633 225.293 cv
98.9903 225.324 99.1173 225.339 99.2453 225.339 cv
99.5713 225.339 99.8263 225.232 99.9993 225.008 cv
100.172 224.783 100.274 224.447 100.305 223.989 cv
100.203 224.131 100.08 224.243 99.9383 224.32 cv
99.7903 224.396 99.6273 224.432 99.4493 224.432 cv
99.0723 224.432 98.7763 224.32 98.5623 224.096 cv
98.3483 223.872 98.2413 223.566 98.2413 223.174 cv
98.2413 222.797 98.3533 222.491 98.5783 222.257 cv
98.8023 222.027 99.1023 221.91 99.4793 221.91 cv
99.9073 221.91 100.238 222.078 100.462 222.404 cv
100.687 222.736 100.804 223.215 100.804 223.836 cv
100.804 224.427 100.661 224.89 100.386 225.237 cv
100.106 225.583 99.7343 225.756 99.2653 225.756 cv
99.1383 225.756 99.0103 225.741 98.8833 225.721 cv
98.7513 225.701 98.6183 225.665 98.4813 225.614 cv
ef
102.772 221.91 mo
103.184 221.91 103.5 222.078 103.724 222.404 cv
103.944 222.736 104.055 223.215 104.055 223.836 cv
104.055 224.463 103.944 224.942 103.724 225.267 cv
103.5 225.593 103.184 225.756 102.772 225.756 cv
102.354 225.756 102.033 225.593 101.814 225.267 cv
101.595 224.942 101.488 224.463 101.488 223.836 cv
101.488 223.215 101.595 222.736 101.814 222.404 cv
102.033 222.078 102.354 221.91 102.772 221.91 cv
cp
102.772 222.308 mo
102.512 222.308 102.318 222.435 102.186 222.69 cv
102.053 222.944 101.992 223.326 101.992 223.836 cv
101.992 224.345 102.053 224.727 102.186 224.982 cv
102.318 225.237 102.512 225.364 102.772 225.364 cv
103.032 225.364 103.225 225.237 103.358 224.982 cv
103.485 224.727 103.551 224.345 103.551 223.836 cv
103.551 223.326 103.485 222.944 103.358 222.69 cv
103.225 222.435 103.032 222.308 102.772 222.308 cv
ef
45.6703 228.352 mo
46.4193 228.352 li
47.3673 230.879 li
48.3193 228.352 li
49.0683 228.352 li
49.0683 232.066 li
48.5793 232.066 li
48.5793 228.805 li
47.6213 231.352 li
47.1173 231.352 li
46.1593 228.805 li
46.1593 232.066 li
45.6703 232.066 li
45.6703 228.352 li
ef
50.0173 228.194 mo
50.4753 228.194 li
50.4753 228.775 li
50.0173 228.775 li
50.0173 228.194 li
cp
50.0173 229.279 mo
50.4753 229.279 li
50.4753 232.066 li
50.0173 232.066 li
50.0173 229.279 li
ef
53.1923 229.361 mo
53.1923 229.793 li
53.0593 229.733 52.9273 229.681 52.7893 229.646 cv
52.6473 229.615 52.5043 229.595 52.3573 229.595 cv
52.1273 229.595 51.9543 229.631 51.8423 229.702 cv
51.7303 229.773 51.6743 229.875 51.6743 230.013 cv
51.6743 230.119 51.7143 230.201 51.7963 230.262 cv
51.8783 230.323 52.0413 230.384 52.2853 230.435 cv
52.4433 230.471 li
52.7693 230.542 52.9983 230.644 53.1363 230.767 cv
53.2683 230.894 53.3403 231.072 53.3403 231.296 cv
53.3403 231.556 53.2383 231.76 53.0343 231.908 cv
52.8303 232.061 52.5453 232.132 52.1883 232.132 cv
52.0353 232.132 51.8833 232.117 51.7193 232.091 cv
51.5573 232.066 51.3893 232.025 51.2103 231.964 cv
51.2103 231.49 li
51.3783 231.582 51.5463 231.648 51.7093 231.689 cv
51.8733 231.734 52.0353 231.755 52.1983 231.755 cv
52.4123 231.755 52.5803 231.719 52.6983 231.648 cv
52.8103 231.577 52.8713 231.47 52.8713 231.332 cv
52.8713 231.21 52.8253 231.113 52.7443 231.047 cv
52.6623 230.981 52.4793 230.914 52.1933 230.853 cv
52.0353 230.817 li
51.7503 230.756 51.5413 230.665 51.4193 230.542 cv
51.2923 230.42 51.2303 230.252 51.2303 230.033 cv
51.2303 229.773 51.3223 229.569 51.5063 229.427 cv
51.6893 229.284 51.9543 229.213 52.3003 229.213 cv
52.4693 229.213 52.6263 229.228 52.7793 229.254 cv
52.9273 229.279 53.0643 229.315 53.1923 229.361 cv
ef
55.8123 229.361 mo
55.8123 229.793 li
55.6803 229.733 55.5473 229.681 55.4093 229.646 cv
55.2673 229.615 55.1243 229.595 54.9763 229.595 cv
54.7473 229.595 54.5743 229.631 54.4623 229.702 cv
54.3503 229.773 54.2943 229.875 54.2943 230.013 cv
54.2943 230.119 54.3353 230.201 54.4163 230.262 cv
54.4983 230.323 54.6603 230.384 54.9053 230.435 cv
55.0633 230.471 li
55.3893 230.542 55.6183 230.644 55.7563 230.767 cv
55.8883 230.894 55.9603 231.072 55.9603 231.296 cv
55.9603 231.556 55.8583 231.76 55.6543 231.908 cv
55.4503 232.061 55.1653 232.132 54.8083 232.132 cv
54.6553 232.132 54.5033 232.117 54.3403 232.091 cv
54.1763 232.066 54.0083 232.025 53.8303 231.964 cv
53.8303 231.49 li
53.9983 231.582 54.1663 231.648 54.3293 231.689 cv
54.4923 231.734 54.6553 231.755 54.8193 231.755 cv
55.0323 231.755 55.2013 231.719 55.3183 231.648 cv
55.4303 231.577 55.4913 231.47 55.4913 231.332 cv
55.4913 231.21 55.4453 231.113 55.3643 231.047 cv
55.2823 230.981 55.0993 230.914 54.8133 230.853 cv
54.6553 230.817 li
54.3703 230.756 54.1613 230.665 54.0393 230.542 cv
53.9123 230.42 53.8513 230.252 53.8513 230.033 cv
53.8513 229.773 53.9423 229.569 54.1263 229.427 cv
54.3093 229.284 54.5743 229.213 54.9203 229.213 cv
55.0893 229.213 55.2463 229.228 55.3993 229.254 cv
55.5473 229.279 55.6853 229.315 55.8123 229.361 cv
ef
56.7413 228.194 mo
57.2003 228.194 li
57.2003 228.775 li
56.7413 228.775 li
56.7413 228.194 li
cp
56.7413 229.279 mo
57.2003 229.279 li
57.2003 232.066 li
56.7413 232.066 li
56.7413 229.279 li
ef
60.4573 230.384 mo
60.4573 232.066 li
59.9983 232.066 li
59.9983 230.4 li
59.9983 230.135 59.9423 229.941 59.8403 229.809 cv
59.7383 229.676 59.5853 229.61 59.3823 229.61 cv
59.1323 229.61 58.9393 229.692 58.7963 229.85 cv
58.6533 230.008 58.5823 230.222 58.5823 230.492 cv
58.5823 232.066 li
58.1233 232.066 li
58.1233 229.279 li
58.5823 229.279 li
58.5823 229.712 li
58.6893 229.549 58.8163 229.422 58.9693 229.34 cv
59.1173 229.259 59.2903 229.213 59.4833 229.213 cv
59.7993 229.213 60.0443 229.315 60.2073 229.513 cv
60.3703 229.712 60.4573 230.002 60.4573 230.384 cv
ef
63.6623 231.719 mo
63.6623 232.188 63.5553 232.54 63.3463 232.774 cv
63.1333 233.003 62.8123 233.12 62.3783 233.12 cv
62.2163 233.12 62.0683 233.105 61.9253 233.084 cv
61.7833 233.059 61.6403 233.024 61.5073 232.972 cv
61.5073 232.529 li
61.6403 232.601 61.7733 232.651 61.9053 232.687 cv
62.0373 232.723 62.1703 232.743 62.3073 232.743 cv
62.6033 232.743 62.8273 232.662 62.9803 232.509 cv
63.1283 232.351 63.2043 232.117 63.2043 231.801 cv
63.2043 231.577 li
63.1073 231.74 62.9853 231.862 62.8373 231.943 cv
62.6893 232.025 62.5163 232.066 62.3123 232.066 cv
61.9663 232.066 61.6913 231.938 61.4823 231.679 cv
61.2733 231.418 61.1713 231.072 61.1713 230.639 cv
61.1713 230.211 61.2733 229.865 61.4823 229.605 cv
61.6913 229.345 61.9663 229.213 62.3123 229.213 cv
62.5163 229.213 62.6893 229.254 62.8373 229.335 cv
62.9853 229.417 63.1073 229.539 63.2043 229.702 cv
63.2043 229.279 li
63.6623 229.279 li
63.6623 231.719 li
cp
63.2043 230.639 mo
63.2043 230.313 63.1333 230.053 63.0003 229.87 cv
62.8623 229.686 62.6693 229.595 62.4243 229.595 cv
62.1803 229.595 61.9863 229.686 61.8493 229.87 cv
61.7113 230.053 61.6453 230.313 61.6453 230.639 cv
61.6453 230.97 61.7113 231.225 61.8493 231.408 cv
61.9863 231.592 62.1803 231.684 62.4243 231.684 cv
62.6693 231.684 62.8623 231.592 63.0003 231.408 cv
63.1333 231.225 63.2043 230.97 63.2043 230.639 cv
ef
66.7853 228.765 mo
66.7853 230.084 li
67.4173 230.084 li
67.6573 230.084 67.8403 230.028 67.9623 229.916 cv
68.0843 229.804 68.1513 229.641 68.1513 229.422 cv
68.1513 229.208 68.0843 229.045 67.9623 228.933 cv
67.8403 228.82 67.6573 228.765 67.4173 228.765 cv
66.7853 228.765 li
cp
68.0443 230.323 mo
68.1513 230.364 68.2583 230.44 68.3603 230.558 cv
68.4613 230.68 68.5633 230.843 68.6653 231.052 cv
69.1743 232.066 li
68.6353 232.066 li
68.1613 231.113 li
68.0393 230.868 67.9163 230.7 67.8043 230.619 cv
67.6873 230.537 67.5293 230.497 67.3303 230.497 cv
66.7853 230.497 li
66.7853 232.066 li
66.2813 232.066 li
66.2813 228.352 li
67.4173 228.352 li
67.8403 228.352 68.1563 228.443 68.3653 228.617 cv
68.5733 228.795 68.6803 229.065 68.6803 229.422 cv
68.6803 229.656 68.6243 229.855 68.5173 230.008 cv
68.4053 230.16 68.2483 230.267 68.0443 230.323 cv
ef
71.9343 230.476 mo
71.9343 232.066 li
71.4763 232.066 li
71.4763 231.643 li
71.3693 231.816 71.2363 231.938 71.0833 232.015 cv
70.9313 232.091 70.7373 232.132 70.5133 232.132 cv
70.2283 232.132 69.9983 232.056 69.8303 231.897 cv
69.6623 231.74 69.5813 231.526 69.5813 231.256 cv
69.5813 230.945 69.6833 230.711 69.8963 230.547 cv
70.1053 230.39 70.4163 230.308 70.8343 230.308 cv
71.4763 230.308 li
71.4763 230.262 li
71.4763 230.053 71.4053 229.89 71.2673 229.773 cv
71.1303 229.661 70.9363 229.6 70.6863 229.6 cv
70.5233 229.6 70.3703 229.62 70.2173 229.661 cv
70.0653 229.702 69.9223 229.758 69.7853 229.829 cv
69.7853 229.406 li
69.9483 229.345 70.1103 229.294 70.2683 229.264 cv
70.4263 229.233 70.5793 229.213 70.7323 229.213 cv
71.1353 229.213 71.4353 229.32 71.6343 229.529 cv
71.8323 229.738 71.9343 230.053 71.9343 230.476 cv
cp
71.0233 230.665 mo
70.6513 230.665 70.3963 230.711 70.2533 230.792 cv
70.1103 230.879 70.0393 231.021 70.0393 231.225 cv
70.0393 231.388 70.0903 231.52 70.1973 231.612 cv
70.3043 231.709 70.4523 231.755 70.6353 231.755 cv
70.8903 231.755 71.0943 231.668 71.2473 231.485 cv
71.3993 231.306 71.4763 231.067 71.4763 230.767 cv
71.4763 230.665 li
71.0233 230.665 li
ef
73.3513 228.489 mo
73.3513 229.279 li
74.2943 229.279 li
74.2943 229.636 li
73.3513 229.636 li
73.3513 231.149 li
73.3513 231.378 73.3823 231.526 73.4433 231.587 cv
73.5043 231.653 73.6323 231.684 73.8253 231.684 cv
74.2943 231.684 li
74.2943 232.066 li
73.8253 232.066 li
73.4693 232.066 73.2243 231.999 73.0923 231.867 cv
72.9593 231.734 72.8933 231.495 72.8933 231.149 cv
72.8933 229.636 li
72.5573 229.636 li
72.5573 229.279 li
72.8933 229.279 li
72.8933 228.489 li
73.3513 228.489 li
ef
76.8323 230.425 mo
76.8273 230.176 76.7563 229.977 76.6233 229.824 cv
76.4863 229.676 76.3033 229.6 76.0783 229.6 cv
75.8243 229.6 75.6203 229.676 75.4673 229.819 cv
75.3143 229.961 75.2233 230.165 75.2023 230.425 cv
76.8323 230.425 li
cp
77.2913 230.558 mo
77.2913 230.782 li
75.1873 230.782 li
75.2073 231.098 75.2993 231.342 75.4723 231.505 cv
75.6403 231.668 75.8743 231.75 76.1803 231.75 cv
76.3533 231.75 76.5263 231.729 76.6903 231.689 cv
76.8533 231.648 77.0213 231.582 77.1843 231.49 cv
77.1843 231.923 li
77.0213 231.994 76.8533 232.051 76.6803 232.081 cv
76.5063 232.111 76.3283 232.132 76.1553 232.132 cv
75.7073 232.132 75.3553 232.004 75.0953 231.75 cv
74.8353 231.495 74.7083 231.143 74.7083 230.7 cv
74.7083 230.247 74.8303 229.885 75.0743 229.615 cv
75.3193 229.35 75.6553 229.213 76.0733 229.213 cv
76.4503 229.213 76.7463 229.335 76.9653 229.574 cv
77.1793 229.819 77.2913 230.145 77.2913 230.558 cv
ef
80.7233 228.199 mo
80.4993 228.586 80.3363 228.963 80.2293 229.335 cv
80.1173 229.707 80.0663 230.084 80.0663 230.466 cv
80.0663 230.853 80.1173 231.23 80.2293 231.602 cv
80.3363 231.979 80.4993 232.351 80.7233 232.733 cv
80.3263 232.733 li
80.0763 232.341 79.8873 231.964 79.7653 231.587 cv
79.6433 231.21 79.5823 230.838 79.5823 230.466 cv
79.5823 230.099 79.6433 229.727 79.7653 229.35 cv
79.8873 228.973 80.0713 228.591 80.3263 228.199 cv
80.7233 228.199 li
ef
82.2893 228.286 mo
82.5483 228.286 82.7573 228.377 82.9153 228.561 cv
83.0683 228.744 83.1493 228.988 83.1493 229.294 cv
83.1493 229.61 83.0683 229.855 82.9153 230.038 cv
82.7623 230.222 82.5533 230.308 82.2893 230.308 cv
82.0233 230.308 81.8153 230.222 81.6623 230.038 cv
81.5093 229.855 81.4333 229.61 81.4333 229.294 cv
81.4333 228.988 81.5093 228.744 81.6623 228.561 cv
81.8153 228.377 82.0233 228.286 82.2893 228.286 cv
cp
84.5353 228.286 mo
84.9323 228.286 li
82.6093 232.132 li
82.2123 232.132 li
84.5353 228.286 li
82.2893 228.601 mo
82.1463 228.601 82.0343 228.668 81.9523 228.79 cv
81.8713 228.912 81.8303 229.08 81.8303 229.294 cv
81.8303 229.518 81.8713 229.686 81.9523 229.809 cv
82.0343 229.931 82.1463 229.992 82.2893 229.992 cv
82.4313 229.992 82.5483 229.931 82.6303 229.809 cv
82.7113 229.686 82.7523 229.518 82.7523 229.294 cv
82.7523 229.08 82.7063 228.912 82.6243 228.79 cv
82.5433 228.668 82.4313 228.601 82.2893 228.601 cv
84.8563 230.115 mo
85.1163 230.115 85.3253 230.206 85.4783 230.39 cv
85.6303 230.573 85.7123 230.823 85.7123 231.128 cv
85.7123 231.439 85.6303 231.684 85.4783 231.862 cv
85.3253 232.045 85.1163 232.132 84.8563 232.132 cv
84.5913 232.132 84.3773 232.045 84.2243 231.862 cv
84.0713 231.684 83.9953 231.439 83.9953 231.128 cv
83.9953 230.817 84.0713 230.573 84.2243 230.39 cv
84.3773 230.206 84.5913 230.115 84.8563 230.115 cv
84.8563 230.43 mo
84.7143 230.43 84.5963 230.492 84.5153 230.614 cv
84.4333 230.736 84.3923 230.909 84.3923 231.128 cv
84.3923 231.342 84.4333 231.515 84.5153 231.638 cv
84.5963 231.76 84.7143 231.821 84.8563 231.821 cv
84.9993 231.821 85.1113 231.76 85.1923 231.638 cv
85.2743 231.515 85.3143 231.342 85.3143 231.128 cv
85.3143 230.914 85.2743 230.741 85.1923 230.619 cv
85.1113 230.497 84.9993 230.43 84.8563 230.43 cv
ef
86.3633 228.199 mo
86.7603 228.199 li
87.0053 228.591 87.1943 228.973 87.3163 229.35 cv
87.4383 229.727 87.5053 230.099 87.5053 230.466 cv
87.5053 230.838 87.4383 231.21 87.3163 231.587 cv
87.1943 231.964 87.0053 232.341 86.7603 232.733 cv
86.3633 232.733 li
86.5823 232.351 86.7453 231.979 86.8573 231.602 cv
86.9643 231.23 87.0213 230.853 87.0213 230.466 cv
87.0213 230.084 86.9643 229.707 86.8573 229.335 cv
86.7453 228.963 86.5823 228.586 86.3633 228.199 cv
ef
gsave
20.8713 220.559 mo
112.243 220.559 li
112.243 131.552 li
20.8713 131.552 li
20.8713 220.559 li
cp
clp
[1.07711 .465778 ] 0 dsh
20.8713 220.559 mo
112.243 220.559 li
0 0 0 .310059 cmyk
@
grestore
20.8713 220.559 mo
22.1443 220.559 li
f
20.8713 220.559 mo
22.1443 220.559 li
@
17.9713 218.679 mo
18.3843 218.679 18.6993 218.847 18.9243 219.173 cv
19.1433 219.504 19.2553 219.983 19.2553 220.604 cv
19.2553 221.231 19.1433 221.71 18.9243 222.036 cv
18.6993 222.362 18.3843 222.525 17.9713 222.525 cv
17.5533 222.525 17.2323 222.362 17.0133 222.036 cv
16.7943 221.71 16.6873 221.231 16.6873 220.604 cv
16.6873 219.983 16.7943 219.504 17.0133 219.173 cv
17.2323 218.847 17.5533 218.679 17.9713 218.679 cv
cp
17.9713 219.076 mo
17.7113 219.076 17.5183 219.204 17.3853 219.458 cv
17.2533 219.713 17.1923 220.095 17.1923 220.604 cv
17.1923 221.114 17.2533 221.496 17.3853 221.751 cv
17.5183 222.006 17.7113 222.133 17.9713 222.133 cv
18.2313 222.133 18.4243 222.006 18.5573 221.751 cv
18.6843 221.496 18.7503 221.114 18.7503 220.604 cv
18.7503 220.095 18.6843 219.713 18.5573 219.458 cv
18.4243 219.204 18.2313 219.076 17.9713 219.076 cv
ef
gsave
20.8713 220.559 mo
112.243 220.559 li
112.243 131.552 li
20.8713 131.552 li
20.8713 220.559 li
cp
clp
[1.07711 .465778 ] 0 dsh
20.8713 205.724 mo
112.243 205.724 li
0 0 0 .310059 cmyk
@
grestore
20.8713 205.724 mo
22.1443 205.724 li
f
20.8713 205.724 mo
22.1443 205.724 li
@
13.7513 207.277 mo
14.5723 207.277 li
14.5723 204.444 li
13.6803 204.622 li
13.6803 204.164 li
14.5663 203.986 li
15.0713 203.986 li
15.0713 207.277 li
15.8913 207.277 li
15.8913 207.7 li
13.7513 207.7 li
13.7513 207.277 li
ef
17.9713 203.919 mo
18.3843 203.919 18.6993 204.088 18.9243 204.414 cv
19.1433 204.745 19.2553 205.223 19.2553 205.845 cv
19.2553 206.472 19.1433 206.951 18.9243 207.277 cv
18.6993 207.603 18.3843 207.766 17.9713 207.766 cv
17.5533 207.766 17.2323 207.603 17.0133 207.277 cv
16.7943 206.951 16.6873 206.472 16.6873 205.845 cv
16.6873 205.223 16.7943 204.745 17.0133 204.414 cv
17.2323 204.088 17.5533 203.919 17.9713 203.919 cv
cp
17.9713 204.317 mo
17.7113 204.317 17.5183 204.444 17.3853 204.699 cv
17.2533 204.954 17.1923 205.336 17.1923 205.845 cv
17.1923 206.355 17.2533 206.737 17.3853 206.992 cv
17.5183 207.246 17.7113 207.374 17.9713 207.374 cv
18.2313 207.374 18.4243 207.246 18.5573 206.992 cv
18.6843 206.737 18.7503 206.355 18.7503 205.845 cv
18.7503 205.336 18.6843 204.954 18.5573 204.699 cv
18.4243 204.444 18.2313 204.317 17.9713 204.317 cv
ef
gsave
20.8713 220.559 mo
112.243 220.559 li
112.243 131.552 li
20.8713 131.552 li
20.8713 220.559 li
cp
clp
[1.07711 .465778 ] 0 dsh
20.8713 190.888 mo
112.243 190.888 li
0 0 0 .310059 cmyk
@
grestore
20.8713 190.888 mo
22.1443 190.888 li
f
20.8713 190.888 mo
22.1443 190.888 li
@
14.0983 192.43 mo
15.8503 192.43 li
15.8503 192.853 li
13.4923 192.853 li
13.4923 192.43 li
13.6803 192.236 13.9403 191.972 14.2713 191.635 cv
14.5973 191.304 14.8063 191.09 14.8923 190.993 cv
15.0563 190.815 15.1683 190.662 15.2293 190.535 cv
15.2903 190.413 15.3263 190.285 15.3263 190.163 cv
15.3263 189.97 15.2543 189.806 15.1173 189.684 cv
14.9793 189.562 14.8013 189.496 14.5773 189.496 cv
14.4193 189.496 14.2513 189.526 14.0783 189.577 cv
13.9043 189.633 13.7163 189.715 13.5173 189.827 cv
13.5173 189.317 li
13.7213 189.236 13.9093 189.175 14.0833 189.134 cv
14.2563 189.093 14.4193 189.073 14.5663 189.073 cv
14.9493 189.073 15.2543 189.17 15.4833 189.363 cv
15.7133 189.557 15.8303 189.811 15.8303 190.133 cv
15.8303 190.285 15.7993 190.433 15.7433 190.566 cv
15.6873 190.703 15.5853 190.866 15.4333 191.049 cv
15.3923 191.101 15.2593 191.238 15.0353 191.467 cv
14.8113 191.697 14.5003 192.017 14.0983 192.43 cv
ef
17.9713 189.073 mo
18.3843 189.073 18.6993 189.241 18.9243 189.567 cv
19.1433 189.898 19.2553 190.377 19.2553 190.999 cv
19.2553 191.625 19.1433 192.104 18.9243 192.43 cv
18.6993 192.756 18.3843 192.919 17.9713 192.919 cv
17.5533 192.919 17.2323 192.756 17.0133 192.43 cv
16.7943 192.104 16.6873 191.625 16.6873 190.999 cv
16.6873 190.377 16.7943 189.898 17.0133 189.567 cv
17.2323 189.241 17.5533 189.073 17.9713 189.073 cv
cp
17.9713 189.47 mo
17.7113 189.47 17.5183 189.598 17.3853 189.852 cv
17.2533 190.107 17.1923 190.489 17.1923 190.999 cv
17.1923 191.508 17.2533 191.89 17.3853 192.145 cv
17.5183 192.4 17.7113 192.527 17.9713 192.527 cv
18.2313 192.527 18.4243 192.4 18.5573 192.145 cv
18.6843 191.89 18.7503 191.508 18.7503 190.999 cv
18.7503 190.489 18.6843 190.107 18.5573 189.852 cv
18.4243 189.598 18.2313 189.47 17.9713 189.47 cv
ef
gsave
20.8713 220.559 mo
112.243 220.559 li
112.243 131.552 li
20.8713 131.552 li
20.8713 220.559 li
cp
clp
[1.07711 .465778 ] 0 dsh
20.8713 176.052 mo
112.243 176.052 li
0 0 0 .310059 cmyk
@
grestore
20.8713 176.052 mo
22.1443 176.052 li
f
20.8713 176.052 mo
22.1443 176.052 li
@
15.1883 176.004 mo
15.4283 176.055 15.6163 176.162 15.7483 176.325 cv
15.8813 176.488 15.9523 176.692 15.9523 176.926 cv
15.9523 177.293 15.8253 177.578 15.5753 177.777 cv
15.3213 177.976 14.9643 178.072 14.5003 178.072 cv
14.3423 178.072 14.1793 178.057 14.0163 178.027 cv
13.8533 178.001 13.6803 177.955 13.5073 177.894 cv
13.5073 177.41 li
13.6443 177.492 13.7973 177.553 13.9663 177.593 cv
14.1283 177.634 14.3023 177.655 14.4853 177.655 cv
14.8013 177.655 15.0403 177.593 15.2033 177.471 cv
15.3663 177.349 15.4533 177.166 15.4533 176.926 cv
15.4533 176.712 15.3763 176.539 15.2243 176.417 cv
15.0713 176.295 14.8573 176.228 14.5823 176.228 cv
14.1493 176.228 li
14.1493 175.816 li
14.6023 175.816 li
14.8473 175.816 15.0353 175.77 15.1683 175.668 cv
15.3003 175.571 15.3663 175.429 15.3663 175.24 cv
15.3663 175.052 15.2953 174.904 15.1623 174.802 cv
15.0253 174.7 14.8323 174.649 14.5823 174.649 cv
14.4443 174.649 14.2963 174.664 14.1393 174.695 cv
13.9813 174.726 13.8073 174.771 13.6193 174.833 cv
13.6193 174.384 li
13.8073 174.333 13.9863 174.292 14.1543 174.267 cv
14.3173 174.242 14.4753 174.226 14.6283 174.226 cv
15.0053 174.226 15.3053 174.313 15.5293 174.486 cv
15.7533 174.659 15.8663 174.893 15.8663 175.189 cv
15.8663 175.393 15.8053 175.566 15.6873 175.709 cv
15.5703 175.851 15.4023 175.953 15.1883 176.004 cv
ef
17.9713 174.226 mo
18.3843 174.226 18.6993 174.394 18.9243 174.72 cv
19.1433 175.052 19.2553 175.531 19.2553 176.152 cv
19.2553 176.779 19.1433 177.258 18.9243 177.583 cv
18.6993 177.909 18.3843 178.072 17.9713 178.072 cv
17.5533 178.072 17.2323 177.909 17.0133 177.583 cv
16.7943 177.258 16.6873 176.779 16.6873 176.152 cv
16.6873 175.531 16.7943 175.052 17.0133 174.72 cv
17.2323 174.394 17.5533 174.226 17.9713 174.226 cv
cp
17.9713 174.624 mo
17.7113 174.624 17.5183 174.751 17.3853 175.006 cv
17.2533 175.26 17.1923 175.642 17.1923 176.152 cv
17.1923 176.661 17.2533 177.043 17.3853 177.298 cv
17.5183 177.553 17.7113 177.68 17.9713 177.68 cv
18.2313 177.68 18.4243 177.553 18.5573 177.298 cv
18.6843 177.043 18.7503 176.661 18.7503 176.152 cv
18.7503 175.642 18.6843 175.26 18.5573 175.006 cv
18.4243 174.751 18.2313 174.624 17.9713 174.624 cv
ef
gsave
20.8713 220.559 mo
112.243 220.559 li
112.243 131.552 li
20.8713 131.552 li
20.8713 220.559 li
cp
clp
[1.07711 .465778 ] 0 dsh
20.8713 161.217 mo
112.243 161.217 li
0 0 0 .310059 cmyk
@
grestore
20.8713 161.217 mo
22.1443 161.217 li
f
20.8713 161.217 mo
22.1443 161.217 li
@
14.9133 159.446 mo
15.5443 159.446 li
15.5443 161.866 li
16.0743 161.866 li
16.0743 162.283 li
15.5443 162.283 li
15.5443 163.159 li
15.0463 163.159 li
15.0463 162.283 li
13.3693 162.283 li
13.3693 161.799 li
14.9133 159.446 li
cp
15.0463 159.884 mo
13.7773 161.866 li
15.0463 161.866 li
15.0463 159.884 li
ef
17.9713 159.379 mo
18.3843 159.379 18.6993 159.548 18.9243 159.874 cv
19.1433 160.205 19.2553 160.684 19.2553 161.305 cv
19.2553 161.932 19.1433 162.411 18.9243 162.737 cv
18.6993 163.063 18.3843 163.226 17.9713 163.226 cv
17.5533 163.226 17.2323 163.063 17.0133 162.737 cv
16.7943 162.411 16.6873 161.932 16.6873 161.305 cv
16.6873 160.684 16.7943 160.205 17.0133 159.874 cv
17.2323 159.548 17.5533 159.379 17.9713 159.379 cv
cp
17.9713 159.777 mo
17.7113 159.777 17.5183 159.904 17.3853 160.159 cv
17.2533 160.414 17.1923 160.796 17.1923 161.305 cv
17.1923 161.815 17.2533 162.197 17.3853 162.452 cv
17.5183 162.706 17.7113 162.834 17.9713 162.834 cv
18.2313 162.834 18.4243 162.706 18.5573 162.452 cv
18.6843 162.197 18.7503 161.815 18.7503 161.305 cv
18.7503 160.796 18.6843 160.414 18.5573 160.159 cv
18.4243 159.904 18.2313 159.777 17.9713 159.777 cv
ef
gsave
20.8713 220.559 mo
112.243 220.559 li
112.243 131.552 li
20.8713 131.552 li
20.8713 220.559 li
cp
clp
[1.07711 .465778 ] 0 dsh
20.8713 146.381 mo
112.243 146.381 li
0 0 0 .310059 cmyk
@
grestore
20.8713 146.381 mo
22.1443 146.381 li
f
20.8713 146.381 mo
22.1443 146.381 li
@
13.6703 144.599 mo
15.6413 144.599 li
15.6413 145.022 li
14.1283 145.022 li
14.1283 145.934 li
14.2003 145.908 14.2763 145.888 14.3483 145.878 cv
14.4193 145.868 14.4953 145.858 14.5663 145.858 cv
14.9793 145.858 15.3053 145.975 15.5503 146.199 cv
15.7943 146.428 15.9173 146.734 15.9173 147.121 cv
15.9173 147.523 15.7893 147.834 15.5403 148.053 cv
15.2903 148.272 14.9393 148.379 14.4903 148.379 cv
14.3323 148.379 14.1743 148.364 14.0113 148.343 cv
13.8483 148.318 13.6853 148.283 13.5123 148.226 cv
13.5123 147.722 li
13.6603 147.804 13.8123 147.865 13.9763 147.905 cv
14.1333 147.946 14.3023 147.961 14.4803 147.961 cv
14.7653 147.961 14.9943 147.89 15.1623 147.737 cv
15.3263 147.584 15.4123 147.381 15.4123 147.121 cv
15.4123 146.866 15.3263 146.662 15.1623 146.509 cv
14.9943 146.357 14.7653 146.28 14.4803 146.28 cv
14.3483 146.28 14.2103 146.295 14.0783 146.326 cv
13.9453 146.357 13.8073 146.402 13.6703 146.464 cv
13.6703 144.599 li
ef
17.9713 144.533 mo
18.3843 144.533 18.6993 144.701 18.9243 145.027 cv
19.1433 145.358 19.2553 145.837 19.2553 146.458 cv
19.2553 147.085 19.1433 147.564 18.9243 147.89 cv
18.6993 148.216 18.3843 148.379 17.9713 148.379 cv
17.5533 148.379 17.2323 148.216 17.0133 147.89 cv
16.7943 147.564 16.6873 147.085 16.6873 146.458 cv
16.6873 145.837 16.7943 145.358 17.0133 145.027 cv
17.2323 144.701 17.5533 144.533 17.9713 144.533 cv
cp
17.9713 144.93 mo
17.7113 144.93 17.5183 145.058 17.3853 145.312 cv
17.2533 145.567 17.1923 145.949 17.1923 146.458 cv
17.1923 146.968 17.2533 147.35 17.3853 147.605 cv
17.5183 147.859 17.7113 147.987 17.9713 147.987 cv
18.2313 147.987 18.4243 147.859 18.5573 147.605 cv
18.6843 147.35 18.7503 146.968 18.7503 146.458 cv
18.7503 145.949 18.6843 145.567 18.5573 145.312 cv
18.4243 145.058 18.2313 144.93 17.9713 144.93 cv
ef
gsave
20.8713 220.559 mo
112.243 220.559 li
112.243 131.552 li
20.8713 131.552 li
20.8713 220.559 li
cp
clp
[1.07711 .465778 ] 0 dsh
20.8713 131.545 mo
112.243 131.545 li
0 0 0 .310059 cmyk
@
grestore
20.8713 131.545 mo
22.1443 131.545 li
f
20.8713 131.545 mo
22.1443 131.545 li
@
7.28627 182.243 mo
8.60527 182.243 li
8.60527 181.611 li
8.60527 181.372 8.54927 181.188 8.43727 181.066 cv
8.32527 180.943 8.16228 180.877 7.94328 180.877 cv
7.72928 180.877 7.56627 180.943 7.45427 181.066 cv
7.34227 181.188 7.28627 181.372 7.28627 181.611 cv
7.28627 182.243 li
cp
8.84528 180.984 mo
8.88527 180.877 8.96227 180.77 9.07927 180.668 cv
9.20128 180.567 9.36427 180.465 9.57327 180.363 cv
10.5873 179.853 li
10.5873 180.393 li
9.63428 180.867 li
9.39027 180.99 9.22227 181.112 9.14027 181.224 cv
9.05928 181.341 9.01828 181.499 9.01828 181.698 cv
9.01828 182.243 li
10.5873 182.243 li
10.5873 182.747 li
6.87328 182.747 li
6.87328 181.611 li
6.87328 181.188 6.96527 180.872 7.13828 180.663 cv
7.31627 180.454 7.58727 180.347 7.94328 180.347 cv
8.17728 180.347 8.37627 180.404 8.52928 180.511 cv
8.68228 180.623 8.78928 180.781 8.84528 180.984 cv
ef
6.87328 179.167 mo
6.87328 178.417 li
9.40027 177.47 li
6.87328 176.517 li
6.87328 175.768 li
10.5873 175.768 li
10.5873 176.258 li
7.32628 176.258 li
9.87427 177.215 li
9.87427 177.719 li
7.32628 178.677 li
10.5873 178.677 li
10.5873 179.167 li
6.87328 179.167 li
ef
6.99628 172.574 mo
7.48528 172.574 li
7.39328 172.767 7.32628 172.945 7.28128 173.113 cv
7.24028 173.287 7.21527 173.45 7.21527 173.602 cv
7.21527 173.877 7.27129 174.092 7.37227 174.239 cv
7.48027 174.387 7.63228 174.458 7.82628 174.458 cv
7.98927 174.458 8.11627 174.413 8.19827 174.311 cv
8.28429 174.214 8.35027 174.026 8.40128 173.75 cv
8.46327 173.445 li
8.53429 173.073 8.66127 172.798 8.84027 172.619 cv
9.02327 172.441 9.26227 172.349 9.56328 172.349 cv
9.92528 172.349 10.1953 172.472 10.3783 172.711 cv
10.5623 172.956 10.6533 173.307 10.6533 173.771 cv
10.6533 173.949 10.6333 174.138 10.5973 174.336 cv
10.5623 174.535 10.5053 174.738 10.4243 174.947 cv
9.90428 174.947 li
10.0213 174.743 10.1083 174.545 10.1643 174.351 cv
10.2253 174.158 10.2513 173.964 10.2513 173.771 cv
10.2513 173.485 10.1953 173.266 10.0833 173.108 cv
9.97128 172.956 9.81328 172.874 9.59927 172.874 cv
9.41527 172.874 9.27327 172.93 9.17128 173.042 cv
9.06927 173.154 8.99228 173.338 8.94127 173.592 cv
8.88028 173.898 li
8.80928 174.275 8.69228 174.545 8.52928 174.713 cv
8.37128 174.881 8.15227 174.963 7.86728 174.963 cv
7.54128 174.963 7.28128 174.851 7.09227 174.616 cv
6.90428 174.387 6.80728 174.066 6.80728 173.659 cv
6.80728 173.485 6.82227 173.312 6.85327 173.129 cv
6.88329 172.951 6.93428 172.767 6.99628 172.574 cv
ef
6.87328 171.568 mo
6.87328 169.22 li
7.29628 169.22 li
7.29628 171.064 li
8.39629 171.064 li
8.39629 169.296 li
8.81927 169.296 li
8.81927 171.064 li
10.1643 171.064 li
10.1643 169.174 li
10.5873 169.174 li
10.5873 171.568 li
6.87328 171.568 li
ef
2 lc
0 lj
20.8713 131.545 mo
112.243 131.545 li
20.8713 220.559 mo
112.243 220.559 li
112.243 220.559 mo
112.243 131.545 li
20.8713 220.559 mo
20.8713 131.545 li
@
22.6093 178.256 mo
72.1393 178.256 li
72.8183 178.256 73.1583 177.917 73.1583 177.237 cv
73.1583 132.886 li
73.1583 132.206 72.8183 131.867 72.1393 131.867 cv
22.6093 131.867 li
21.9303 131.867 21.5903 132.206 21.5903 132.886 cv
21.5903 177.237 li
21.5903 177.917 21.9303 178.256 22.6093 178.256 cv
0 0 0 0 cmyk
f
.363889 lw
0 lc
22.6093 178.256 mo
72.1393 178.256 li
72.8183 178.256 73.1583 177.917 73.1583 177.237 cv
73.1583 132.886 li
73.1583 132.206 72.8183 131.867 72.1393 131.867 cv
22.6093 131.867 li
21.9303 131.867 21.5903 132.206 21.5903 132.886 cv
21.5903 177.237 li
21.5903 177.917 21.9303 178.256 22.6093 178.256 cv
cp
0 0 0 .199951 cmyk
@
23.6283 137.777 mo
33.8173 137.777 li
33.8173 134.211 li
23.6283 134.211 li
23.6283 137.777 li
0 .648438 .892578 0 cmyk
f
38.4223 134.032 mo
39.5583 134.032 li
39.9703 134.032 40.2863 134.129 40.5003 134.317 cv
40.7143 134.506 40.8213 134.781 40.8213 135.142 cv
40.8213 135.509 40.7143 135.789 40.5003 135.973 cv
40.2863 136.161 39.9703 136.253 39.5583 136.253 cv
38.9263 136.253 li
38.9263 137.745 li
38.4223 137.745 li
38.4223 134.032 li
cp
38.9263 134.445 mo
38.9263 135.84 li
39.5583 135.84 li
39.7923 135.84 39.9703 135.784 40.0983 135.662 cv
40.2253 135.54 40.2913 135.367 40.2913 135.142 cv
40.2913 134.918 40.2253 134.75 40.0983 134.628 cv
39.9703 134.506 39.7923 134.445 39.5583 134.445 cv
38.9263 134.445 li
0 0 0 1 cmyk
ef
41.4783 134.032 mo
42.6143 134.032 li
43.0273 134.032 43.3433 134.129 43.5573 134.317 cv
43.7713 134.506 43.8783 134.781 43.8783 135.142 cv
43.8783 135.509 43.7713 135.789 43.5573 135.973 cv
43.3433 136.161 43.0273 136.253 42.6143 136.253 cv
41.9833 136.253 li
41.9833 137.745 li
41.4783 137.745 li
41.4783 134.032 li
cp
41.9833 134.445 mo
41.9833 135.84 li
42.6143 135.84 li
42.8493 135.84 43.0273 135.784 43.1543 135.662 cv
43.2823 135.54 43.3483 135.367 43.3483 135.142 cv
43.3483 134.918 43.2823 134.75 43.1543 134.628 cv
43.0273 134.506 42.8493 134.445 42.6143 134.445 cv
41.9833 134.445 li
ef
47.3173 134.317 mo
47.3173 134.847 li
47.1433 134.694 46.9653 134.577 46.7713 134.495 cv
46.5783 134.419 46.3793 134.378 46.1653 134.378 cv
45.7373 134.378 45.4113 134.511 45.1873 134.77 cv
44.9633 135.03 44.8513 135.402 44.8513 135.891 cv
44.8513 136.38 44.9633 136.758 45.1873 137.017 cv
45.4113 137.277 45.7373 137.404 46.1653 137.404 cv
46.3793 137.404 46.5783 137.368 46.7713 137.287 cv
46.9653 137.211 47.1433 137.093 47.3173 136.936 cv
47.3173 137.46 li
47.1383 137.583 46.9503 137.669 46.7563 137.725 cv
46.5623 137.781 46.3543 137.812 46.1353 137.812 cv
45.5743 137.812 45.1313 137.644 44.8053 137.302 cv
44.4793 136.961 44.3213 136.492 44.3213 135.891 cv
44.3213 135.295 44.4793 134.826 44.8053 134.48 cv
45.1313 134.139 45.5743 133.966 46.1353 133.966 cv
46.3593 133.966 46.5673 133.996 46.7613 134.052 cv
46.9553 134.113 47.1433 134.2 47.3173 134.317 cv
ef
49.0733 134.032 mo
49.6443 134.032 li
51.0603 137.745 li
50.5353 137.745 li
50.1993 136.793 li
48.5233 136.793 li
48.1873 137.745 li
47.6573 137.745 li
49.0733 134.032 li
cp
49.3583 134.526 mo
48.6763 136.375 li
50.0413 136.375 li
49.3583 134.526 li
ef
23.6283 145.253 mo
33.8173 145.253 li
33.8173 141.687 li
23.6283 141.687 li
23.6283 145.253 li
.239014 .333252 0 0 cmyk
f
38.4223 141.542 mo
38.9263 141.542 li
38.9263 143.066 li
40.7503 143.066 li
40.7503 141.542 li
41.2543 141.542 li
41.2543 145.256 li
40.7503 145.256 li
40.7503 143.488 li
38.9263 143.488 li
38.9263 145.256 li
38.4223 145.256 li
38.4223 141.542 li
0 0 0 1 cmyk
ef
44.4243 143.667 mo
44.4243 145.256 li
43.9663 145.256 li
43.9663 144.833 li
43.8593 145.007 43.7263 145.129 43.5743 145.205 cv
43.4213 145.282 43.2273 145.323 43.0033 145.323 cv
42.7183 145.323 42.4893 145.246 42.3203 145.088 cv
42.1523 144.93 42.0713 144.717 42.0713 144.446 cv
42.0713 144.136 42.1733 143.901 42.3873 143.738 cv
42.5963 143.58 42.9063 143.499 43.3243 143.499 cv
43.9663 143.499 li
43.9663 143.453 li
43.9663 143.244 43.8943 143.081 43.7573 142.964 cv
43.6193 142.852 43.4263 142.791 43.1763 142.791 cv
43.0133 142.791 42.8603 142.811 42.7073 142.852 cv
42.5553 142.892 42.4123 142.949 42.2743 143.02 cv
42.2743 142.597 li
42.4373 142.536 42.6013 142.485 42.7583 142.454 cv
42.9163 142.424 43.0693 142.403 43.2223 142.403 cv
43.6243 142.403 43.9253 142.51 44.1243 142.719 cv
44.3233 142.928 44.4243 143.244 44.4243 143.667 cv
cp
43.5123 143.855 mo
43.1413 143.855 42.8863 143.901 42.7433 143.983 cv
42.6013 144.069 42.5293 144.212 42.5293 144.416 cv
42.5293 144.579 42.5803 144.711 42.6873 144.803 cv
42.7943 144.9 42.9423 144.945 43.1253 144.945 cv
43.3803 144.945 43.5843 144.859 43.7373 144.676 cv
43.8893 144.497 43.9663 144.258 43.9663 143.957 cv
43.9663 143.855 li
43.5123 143.855 li
ef
45.3213 141.542 mo
45.8253 141.542 li
45.8253 144.833 li
47.6343 144.833 li
47.6343 145.256 li
45.3213 145.256 li
45.3213 141.542 li
ef
48.7073 141.955 mo
48.7073 143.274 li
49.3393 143.274 li
49.5783 143.274 49.7623 143.218 49.8843 143.106 cv
50.0073 142.994 50.0733 142.831 50.0733 142.612 cv
50.0733 142.398 50.0073 142.235 49.8843 142.123 cv
49.7623 142.011 49.5783 141.955 49.3393 141.955 cv
48.7073 141.955 li
cp
49.9663 143.514 mo
50.0733 143.555 50.1803 143.631 50.2823 143.748 cv
50.3833 143.87 50.4853 144.034 50.5873 144.242 cv
51.0973 145.256 li
50.5573 145.256 li
50.0833 144.304 li
49.9603 144.059 49.8383 143.891 49.7263 143.809 cv
49.6093 143.728 49.4513 143.687 49.2523 143.687 cv
48.7073 143.687 li
48.7073 145.256 li
48.2033 145.256 li
48.2033 141.542 li
49.3393 141.542 li
49.7623 141.542 50.0783 141.634 50.2873 141.808 cv
50.4963 141.986 50.6033 142.256 50.6033 142.612 cv
50.6033 142.847 50.5463 143.045 50.4393 143.198 cv
50.3273 143.351 50.1693 143.458 49.9663 143.514 cv
ef
51.1873 141.542 mo
54.3253 141.542 li
54.3253 141.965 li
53.0053 141.965 li
53.0053 145.256 li
52.5013 145.256 li
52.5013 141.965 li
51.1873 141.965 li
51.1873 141.542 li
ef
57.6223 141.828 mo
57.6223 142.358 li
57.4493 142.205 57.2703 142.088 57.0773 142.006 cv
56.8833 141.93 56.6853 141.889 56.4713 141.889 cv
56.0423 141.889 55.7173 142.021 55.4923 142.281 cv
55.2683 142.541 55.1563 142.913 55.1563 143.402 cv
55.1563 143.891 55.2683 144.268 55.4923 144.528 cv
55.7173 144.788 56.0423 144.915 56.4713 144.915 cv
56.6853 144.915 56.8833 144.879 57.0773 144.798 cv
57.2703 144.721 57.4493 144.604 57.6223 144.446 cv
57.6223 144.971 li
57.4443 145.093 57.2553 145.18 57.0623 145.236 cv
56.8683 145.292 56.6593 145.323 56.4403 145.323 cv
55.8803 145.323 55.4363 145.154 55.1103 144.813 cv
54.7843 144.472 54.6263 144.003 54.6263 143.402 cv
54.6263 142.806 54.7843 142.337 55.1103 141.991 cv
55.4363 141.649 55.8803 141.476 56.4403 141.476 cv
56.6643 141.476 56.8733 141.507 57.0673 141.563 cv
57.2603 141.624 57.4493 141.711 57.6223 141.828 cv
ef
23.6283 152.73 mo
33.8173 152.73 li
33.8173 149.164 li
23.6283 149.164 li
23.6283 152.73 li
.476807 .101563 .0893555 0 cmyk
f
40.6483 149.176 mo
40.6483 149.664 li
40.4543 149.573 40.2763 149.506 40.1083 149.461 cv
39.9353 149.42 39.7723 149.395 39.6193 149.395 cv
39.3443 149.395 39.1303 149.451 38.9823 149.552 cv
38.8343 149.659 38.7633 149.812 38.7633 150.006 cv
38.7633 150.169 38.8093 150.296 38.9113 150.377 cv
39.0073 150.464 39.1963 150.531 39.4713 150.581 cv
39.7773 150.643 li
40.1493 150.714 40.4243 150.842 40.6023 151.02 cv
40.7803 151.203 40.8723 151.442 40.8723 151.743 cv
40.8723 152.105 40.7503 152.375 40.5103 152.558 cv
40.2663 152.742 39.9143 152.833 39.4513 152.833 cv
39.2723 152.833 39.0843 152.813 38.8853 152.777 cv
38.6873 152.742 38.4833 152.686 38.2743 152.604 cv
38.2743 152.084 li
38.4783 152.201 38.6763 152.288 38.8703 152.344 cv
39.0643 152.405 39.2573 152.431 39.4513 152.431 cv
39.7363 152.431 39.9553 152.375 40.1133 152.263 cv
40.2663 152.151 40.3473 151.993 40.3473 151.779 cv
40.3473 151.595 40.2913 151.452 40.1793 151.351 cv
40.0673 151.249 39.8843 151.172 39.6293 151.121 cv
39.3233 151.06 li
38.9463 150.989 38.6763 150.872 38.5083 150.709 cv
38.3403 150.551 38.2583 150.332 38.2583 150.047 cv
38.2583 149.72 38.3713 149.461 38.6053 149.272 cv
38.8343 149.084 39.1553 148.987 39.5633 148.987 cv
39.7363 148.987 39.9093 149.002 40.0933 149.033 cv
40.2713 149.063 40.4543 149.114 40.6483 149.176 cv
0 0 0 1 cmyk
ef
41.6533 149.053 mo
42.6873 149.053 li
43.4053 149.053 43.9353 149.206 44.2713 149.501 cv
44.6083 149.802 44.7763 150.27 44.7763 150.908 cv
44.7763 151.549 44.6033 152.018 44.2663 152.318 cv
43.9303 152.619 43.4003 152.767 42.6873 152.767 cv
41.6533 152.767 li
41.6533 149.053 li
cp
42.1573 149.466 mo
42.1573 152.354 li
42.7643 152.354 li
43.2733 152.354 43.6503 152.242 43.8893 152.008 cv
44.1243 151.774 44.2463 151.407 44.2463 150.908 cv
44.2463 150.408 44.1243 150.047 43.8893 149.812 cv
43.6503 149.583 43.2733 149.466 42.7643 149.466 cv
42.1573 149.466 li
ef
46.5413 149.053 mo
47.1113 149.053 li
48.5283 152.767 li
48.0033 152.767 li
47.6673 151.814 li
45.9913 151.814 li
45.6543 152.767 li
45.1243 152.767 li
46.5413 149.053 li
cp
46.8263 149.547 mo
46.1433 151.397 li
47.5083 151.397 li
46.8263 149.547 li
ef
49.0763 149.053 mo
51.4253 149.053 li
51.4253 149.476 li
49.5813 149.476 li
49.5813 150.576 li
51.3483 150.576 li
51.3483 150.999 li
49.5813 150.999 li
49.5813 152.344 li
51.4713 152.344 li
51.4713 152.767 li
49.0763 152.767 li
49.0763 149.053 li
ef
23.6283 160.207 mo
33.8173 160.207 li
33.8173 156.641 li
23.6283 156.641 li
23.6283 160.207 li
1 .841797 .237549 0 cmyk
f
41.2033 156.762 mo
41.2033 157.292 li
41.0303 157.139 40.8523 157.022 40.6583 156.94 cv
40.4653 156.864 40.2663 156.823 40.0523 156.823 cv
39.6243 156.823 39.2983 156.955 39.0743 157.215 cv
38.8493 157.475 38.7373 157.847 38.7373 158.336 cv
38.7373 158.825 38.8493 159.202 39.0743 159.462 cv
39.2983 159.722 39.6243 159.849 40.0523 159.849 cv
40.2663 159.849 40.4653 159.813 40.6583 159.732 cv
40.8523 159.655 41.0303 159.538 41.2033 159.38 cv
41.2033 159.905 li
41.0253 160.027 40.8373 160.114 40.6433 160.17 cv
40.4493 160.226 40.2413 160.256 40.0213 160.256 cv
39.4613 160.256 39.0183 160.088 38.6923 159.747 cv
38.3663 159.406 38.2083 158.937 38.2083 158.336 cv
38.2083 157.74 38.3663 157.271 38.6923 156.925 cv
39.0183 156.583 39.4613 156.41 40.0213 156.41 cv
40.2463 156.41 40.4543 156.441 40.6483 156.497 cv
40.8413 156.558 41.0303 156.645 41.2033 156.762 cv
0 0 0 1 cmyk
ef
42.9743 157.337 mo
43.3723 157.337 43.6833 157.47 43.9123 157.725 cv
44.1363 157.984 44.2533 158.341 44.2533 158.799 cv
44.2533 159.258 44.1363 159.615 43.9123 159.869 cv
43.6833 160.129 43.3723 160.256 42.9743 160.256 cv
42.5723 160.256 42.2563 160.129 42.0323 159.869 cv
41.8083 159.615 41.6963 159.258 41.6963 158.799 cv
41.6963 158.341 41.8083 157.984 42.0323 157.725 cv
42.2563 157.47 42.5723 157.337 42.9743 157.337 cv
cp
42.9743 157.725 mo
42.7303 157.725 42.5373 157.821 42.3943 158.015 cv
42.2513 158.209 42.1803 158.468 42.1803 158.799 cv
42.1803 159.136 42.2463 159.395 42.3893 159.589 cv
42.5323 159.783 42.7253 159.874 42.9743 159.874 cv
43.2193 159.874 43.4133 159.783 43.5553 159.589 cv
43.6983 159.395 43.7693 159.136 43.7693 158.799 cv
43.7693 158.474 43.6983 158.209 43.5553 158.015 cv
43.4133 157.821 43.2193 157.725 42.9743 157.725 cv
ef
47.2093 157.938 mo
47.3213 157.735 47.4583 157.587 47.6163 157.485 cv
47.7743 157.388 47.9633 157.337 48.1823 157.337 cv
48.4673 157.337 48.6913 157.439 48.8493 157.643 cv
49.0073 157.847 49.0893 158.137 49.0893 158.509 cv
49.0893 160.19 li
48.6303 160.19 li
48.6303 158.524 li
48.6303 158.259 48.5793 158.061 48.4873 157.928 cv
48.3913 157.801 48.2483 157.735 48.0553 157.735 cv
47.8153 157.735 47.6263 157.816 47.4893 157.974 cv
47.3513 158.132 47.2853 158.346 47.2853 158.616 cv
47.2853 160.19 li
46.8273 160.19 li
46.8273 158.524 li
46.8273 158.259 46.7763 158.061 46.6843 157.928 cv
46.5873 157.801 46.4403 157.735 46.2463 157.735 cv
46.0123 157.735 45.8233 157.816 45.6853 157.974 cv
45.5483 158.132 45.4823 158.346 45.4823 158.616 cv
45.4823 160.19 li
45.0233 160.19 li
45.0233 157.404 li
45.4823 157.404 li
45.4823 157.837 li
45.5833 157.668 45.7113 157.541 45.8593 157.459 cv
46.0013 157.378 46.1743 157.337 46.3783 157.337 cv
46.5823 157.337 46.7503 157.388 46.8933 157.49 cv
47.0353 157.592 47.1373 157.745 47.2093 157.938 cv
ef
50.4603 157.826 mo
50.5513 157.663 50.6743 157.541 50.8213 157.459 cv
50.9693 157.378 51.1483 157.337 51.3513 157.337 cv
51.6873 157.337 51.9633 157.475 52.1763 157.74 cv
52.3853 158.01 52.4923 158.361 52.4923 158.799 cv
52.4923 159.238 52.3853 159.594 52.1763 159.859 cv
51.9633 160.124 51.6873 160.256 51.3513 160.256 cv
51.1483 160.256 50.9693 160.216 50.8213 160.139 cv
50.6743 160.063 50.5513 159.941 50.4603 159.772 cv
50.4603 160.19 li
50.0013 160.19 li
50.0013 156.318 li
50.4603 156.318 li
50.4603 157.826 li
cp
52.0193 158.799 mo
52.0193 158.463 51.9483 158.204 51.8103 158.01 cv
51.6673 157.816 51.4793 157.72 51.2393 157.72 cv
50.9953 157.72 50.8063 157.816 50.6693 158.01 cv
50.5263 158.204 50.4603 158.463 50.4603 158.799 cv
50.4603 159.136 50.5263 159.401 50.6693 159.594 cv
50.8063 159.788 50.9953 159.879 51.2393 159.879 cv
51.4793 159.879 51.6673 159.788 51.8103 159.594 cv
51.9483 159.401 52.0193 159.136 52.0193 158.799 cv
ef
56.0503 156.762 mo
56.0503 157.292 li
55.8763 157.139 55.6983 157.022 55.5053 156.94 cv
55.3113 156.864 55.1123 156.823 54.8983 156.823 cv
54.4713 156.823 54.1443 156.955 53.9203 157.215 cv
53.6963 157.475 53.5843 157.847 53.5843 158.336 cv
53.5843 158.825 53.6963 159.202 53.9203 159.462 cv
54.1443 159.722 54.4713 159.849 54.8983 159.849 cv
55.1123 159.849 55.3113 159.813 55.5053 159.732 cv
55.6983 159.655 55.8763 159.538 56.0503 159.38 cv
56.0503 159.905 li
55.8713 160.027 55.6833 160.114 55.4893 160.17 cv
55.2963 160.226 55.0873 160.256 54.8683 160.256 cv
54.3083 160.256 53.8643 160.088 53.5383 159.747 cv
53.2123 159.406 53.0543 158.937 53.0543 158.336 cv
53.0543 157.74 53.2123 157.271 53.5383 156.925 cv
53.8643 156.583 54.3083 156.41 54.8683 156.41 cv
55.0923 156.41 55.3013 156.441 55.4943 156.497 cv
55.6883 156.558 55.8763 156.645 56.0503 156.762 cv
ef
56.8493 156.476 mo
57.5263 156.476 li
59.1723 159.584 li
59.1723 156.476 li
59.6613 156.476 li
59.6613 160.19 li
58.9833 160.19 li
57.3383 157.083 li
57.3383 160.19 li
56.8493 160.19 li
56.8493 156.476 li
ef
23.6283 167.683 mo
33.8173 167.683 li
33.8173 164.118 li
23.6283 164.118 li
23.6283 167.683 li
.673828 0 .941406 0 cmyk
f
38.4223 163.987 mo
39.1713 163.987 li
40.1183 166.514 li
41.0713 163.987 li
41.8193 163.987 li
41.8193 167.701 li
41.3313 167.701 li
41.3313 164.44 li
40.3733 166.988 li
39.8683 166.988 li
38.9113 164.44 li
38.9113 167.701 li
38.4223 167.701 li
38.4223 163.987 li
0 0 0 1 cmyk
ef
42.7883 163.987 mo
43.2923 163.987 li
43.2923 167.278 li
45.1013 167.278 li
45.1013 167.701 li
42.7883 167.701 li
42.7883 163.987 li
ef
45.5833 163.987 mo
46.7193 163.987 li
47.1323 163.987 47.4483 164.084 47.6623 164.272 cv
47.8753 164.461 47.9823 164.736 47.9823 165.098 cv
47.9823 165.465 47.8753 165.745 47.6623 165.928 cv
47.4483 166.117 47.1323 166.208 46.7193 166.208 cv
46.0873 166.208 li
46.0873 167.701 li
45.5833 167.701 li
45.5833 163.987 li
cp
46.0873 164.4 mo
46.0873 165.796 li
46.7193 165.796 li
46.9533 165.796 47.1323 165.74 47.2593 165.617 cv
47.3863 165.495 47.4533 165.322 47.4533 165.098 cv
47.4533 164.874 47.3863 164.706 47.2593 164.583 cv
47.1323 164.461 46.9533 164.4 46.7193 164.4 cv
46.0873 164.4 li
ef
48.4773 166.101 mo
49.8173 166.101 li
49.8173 166.509 li
48.4773 166.509 li
48.4773 166.101 li
ef
51.5193 167.701 mo
50.1033 163.987 li
50.6273 163.987 li
51.8043 167.115 li
52.9813 163.987 li
53.5053 163.987 li
52.0893 167.701 li
51.5193 167.701 li
ef
55.0123 163.987 mo
55.5833 163.987 li
56.9993 167.701 li
56.4743 167.701 li
56.1383 166.748 li
54.4623 166.748 li
54.1263 167.701 li
53.5963 167.701 li
55.0123 163.987 li
cp
55.2973 164.481 mo
54.6153 166.331 li
55.9803 166.331 li
55.2973 164.481 li
ef
57.5483 163.987 mo
59.8963 163.987 li
59.8963 164.41 li
58.0523 164.41 li
58.0523 165.51 li
59.8203 165.51 li
59.8203 165.933 li
58.0523 165.933 li
58.0523 167.278 li
59.9423 167.278 li
59.9423 167.701 li
57.5483 167.701 li
57.5483 163.987 li
ef
23.6283 175.16 mo
33.8173 175.16 li
33.8173 171.594 li
23.6283 171.594 li
23.6283 175.16 li
.163086 .976563 .724609 0 cmyk
f
40.6483 171.533 mo
40.6483 172.022 li
40.4543 171.93 40.2763 171.864 40.1083 171.818 cv
39.9353 171.777 39.7723 171.752 39.6193 171.752 cv
39.3443 171.752 39.1303 171.808 38.9823 171.91 cv
38.8343 172.017 38.7633 172.17 38.7633 172.363 cv
38.7633 172.526 38.8093 172.654 38.9113 172.735 cv
39.0073 172.822 39.1963 172.888 39.4713 172.939 cv
39.7773 173 li
40.1493 173.071 40.4243 173.199 40.6023 173.377 cv
40.7803 173.56 40.8723 173.8 40.8723 174.1 cv
40.8723 174.462 40.7503 174.732 40.5103 174.915 cv
40.2663 175.099 39.9143 175.19 39.4513 175.19 cv
39.2723 175.19 39.0843 175.17 38.8853 175.134 cv
38.6873 175.099 38.4833 175.043 38.2743 174.961 cv
38.2743 174.442 li
38.4783 174.559 38.6763 174.645 38.8703 174.701 cv
39.0643 174.763 39.2573 174.788 39.4513 174.788 cv
39.7363 174.788 39.9553 174.732 40.1133 174.62 cv
40.2663 174.508 40.3473 174.35 40.3473 174.136 cv
40.3473 173.952 40.2913 173.81 40.1793 173.708 cv
40.0673 173.606 39.8843 173.53 39.6293 173.479 cv
39.3233 173.418 li
38.9463 173.346 38.6763 173.229 38.5083 173.066 cv
38.3403 172.908 38.2583 172.689 38.2583 172.404 cv
38.2583 172.078 38.3713 171.818 38.6053 171.629 cv
38.8343 171.441 39.1553 171.344 39.5633 171.344 cv
39.7363 171.344 39.9093 171.359 40.0933 171.39 cv
40.2713 171.421 40.4543 171.472 40.6483 171.533 cv
0 0 0 1 cmyk
ef
41.1443 171.41 mo
44.2823 171.41 li
44.2823 171.833 li
42.9623 171.833 li
42.9623 175.124 li
42.4583 175.124 li
42.4583 171.833 li
41.1443 171.833 li
41.1443 171.41 li
ef
45.6673 175.124 mo
44.2513 171.41 li
44.7763 171.41 li
45.9533 174.538 li
47.1303 171.41 li
47.6543 171.41 li
46.2383 175.124 li
45.6673 175.124 li
ef
49.1613 171.41 mo
49.7313 171.41 li
51.1483 175.124 li
50.6233 175.124 li
50.2873 174.172 li
48.6103 174.172 li
48.2743 175.124 li
47.7443 175.124 li
49.1613 171.41 li
cp
49.4463 171.904 mo
48.7633 173.754 li
50.1293 173.754 li
49.4463 171.904 li
ef
51.6963 171.41 mo
54.0453 171.41 li
54.0453 171.833 li
52.2013 171.833 li
52.2013 172.934 li
53.9683 172.934 li
53.9683 173.356 li
52.2013 173.356 li
52.2013 174.701 li
54.0913 174.701 li
54.0913 175.124 li
51.6963 175.124 li
51.6963 171.41 li
ef
57.6673 171.258 mo
57.4433 171.645 57.2803 172.022 57.1733 172.394 cv
57.0613 172.766 57.0103 173.143 57.0103 173.525 cv
57.0103 173.912 57.0613 174.289 57.1733 174.661 cv
57.2803 175.038 57.4433 175.409 57.6673 175.792 cv
57.2693 175.792 li
57.0203 175.399 56.8323 175.022 56.7093 174.645 cv
56.5873 174.268 56.5263 173.897 56.5263 173.525 cv
56.5263 173.158 56.5873 172.786 56.7093 172.409 cv
56.8323 172.032 57.0153 171.65 57.2693 171.258 cv
57.6673 171.258 li
ef
59.5683 172.271 mo
59.9653 172.271 60.2763 172.404 60.5053 172.659 cv
60.7303 172.918 60.8473 173.275 60.8473 173.733 cv
60.8473 174.192 60.7303 174.549 60.5053 174.803 cv
60.2763 175.063 59.9653 175.19 59.5683 175.19 cv
59.1663 175.19 58.8493 175.063 58.6253 174.803 cv
58.4013 174.549 58.2893 174.192 58.2893 173.733 cv
58.2893 173.275 58.4013 172.918 58.6253 172.659 cv
58.8493 172.404 59.1663 172.271 59.5683 172.271 cv
cp
59.5683 172.659 mo
59.3233 172.659 59.1303 172.755 58.9873 172.949 cv
58.8443 173.143 58.7733 173.402 58.7733 173.733 cv
58.7733 174.07 58.8393 174.329 58.9823 174.523 cv
59.1253 174.717 59.3183 174.808 59.5683 174.808 cv
59.8123 174.808 60.0063 174.717 60.1493 174.523 cv
60.2913 174.329 60.3633 174.07 60.3633 173.733 cv
60.3633 173.408 60.2913 173.143 60.1493 172.949 cv
60.0063 172.755 59.8123 172.659 59.5683 172.659 cv
ef
62.7373 172.271 mo
62.7373 172.271 li
cp
61.5863 174.024 mo
61.5863 172.338 li
62.0443 172.338 li
62.0443 174.009 li
62.0443 174.274 62.0963 174.467 62.1983 174.6 cv
62.2993 174.732 62.4523 174.798 62.6613 174.798 cv
62.9053 174.798 63.1043 174.722 63.2473 174.564 cv
63.3893 174.406 63.4613 174.192 63.4613 173.917 cv
63.4613 172.338 li
63.9193 172.338 li
63.9193 175.124 li
63.4613 175.124 li
63.4613 174.696 li
63.3493 174.87 63.2163 174.992 63.0743 175.073 cv
62.9263 175.15 62.7583 175.19 62.5643 175.19 cv
62.2433 175.19 61.9993 175.094 61.8363 174.895 cv
61.6673 174.701 61.5863 174.411 61.5863 174.024 cv
ef
66.4783 172.766 mo
66.4273 172.735 66.3713 172.715 66.3103 172.699 cv
66.2493 172.689 66.1833 172.679 66.1113 172.679 cv
65.8513 172.679 65.6533 172.766 65.5163 172.934 cv
65.3733 173.102 65.3073 173.341 65.3073 173.657 cv
65.3073 175.124 li
64.8483 175.124 li
64.8483 172.338 li
65.3073 172.338 li
65.3073 172.771 li
65.3983 172.602 65.5263 172.475 65.6783 172.394 cv
65.8313 172.312 66.0203 172.271 66.2443 172.271 cv
66.2743 172.271 66.3103 172.277 66.3513 172.277 cv
66.3873 172.282 66.4273 172.287 66.4783 172.297 cv
66.4783 172.766 li
ef
68.7373 172.419 mo
68.7373 172.852 li
68.6053 172.791 68.4723 172.74 68.3353 172.704 cv
68.1923 172.674 68.0493 172.654 67.9023 172.654 cv
67.6733 172.654 67.4993 172.689 67.3873 172.761 cv
67.2753 172.832 67.2193 172.934 67.2193 173.071 cv
67.2193 173.178 67.2603 173.26 67.3413 173.321 cv
67.4233 173.382 67.5863 173.443 67.8303 173.494 cv
67.9883 173.53 li
68.3143 173.601 68.5443 173.703 68.6813 173.825 cv
68.8143 173.952 68.8853 174.131 68.8853 174.355 cv
68.8853 174.615 68.7833 174.818 68.5793 174.967 cv
68.3763 175.119 68.0903 175.19 67.7333 175.19 cv
67.5813 175.19 67.4283 175.175 67.2653 175.15 cv
67.1023 175.124 66.9343 175.084 66.7553 175.022 cv
66.7553 174.549 li
66.9243 174.64 67.0923 174.706 67.2553 174.747 cv
67.4183 174.793 67.5813 174.813 67.7443 174.813 cv
67.9583 174.813 68.1263 174.778 68.2433 174.706 cv
68.3553 174.635 68.4163 174.528 68.4163 174.391 cv
68.4163 174.268 68.3703 174.172 68.2893 174.106 cv
68.2073 174.039 68.0243 173.973 67.7393 173.912 cv
67.5813 173.876 li
67.2963 173.815 67.0873 173.723 66.9643 173.601 cv
66.8373 173.479 66.7763 173.311 66.7763 173.092 cv
66.7763 172.832 66.8673 172.628 67.0513 172.485 cv
67.2343 172.343 67.4993 172.271 67.8463 172.271 cv
68.0143 172.271 68.1723 172.287 68.3243 172.312 cv
68.4723 172.338 68.6103 172.373 68.7373 172.419 cv
ef
69.5083 171.258 mo
69.9053 171.258 li
70.1503 171.65 70.3383 172.032 70.4603 172.409 cv
70.5833 172.786 70.6493 173.158 70.6493 173.525 cv
70.6493 173.897 70.5833 174.268 70.4603 174.645 cv
70.3383 175.022 70.1503 175.399 69.9053 175.792 cv
69.5083 175.792 li
69.7273 175.409 69.8903 175.038 70.0023 174.661 cv
70.1093 174.289 70.1653 173.912 70.1653 173.525 cv
70.1653 173.143 70.1093 172.766 70.0023 172.394 cv
69.8903 172.022 69.7273 171.645 69.5083 171.258 cv
ef
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: XAAAAA+CMR9 AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2021 Adobe System Incorporated. All rights reserved.systemdict beginNOAXUK+CMR9 dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/R <1C60D8A8C9B6E9C36699F864A3F0FEC2468866C2390EB9DE1BDFD9D654BFD993A65979093BA3E69CAD14C3F148DBC107EFC5FD546EE167E3A638D7F1084EC9BEE1C46482799FA5BFBC086954514D821FF34E13A1167E0A9B77615954E2A4B3A8FA23E1F0282D2CFE77353539D7378DA334C95C2296B5DC92699B37EDA29E6E22A5ADA26E0AF00E0DDC81EF5101289517B8FD466F52C56316C65953258245F7D10C19F950A27FB68FDDB2FEBDA5B5A56065A0504B545C3DE96A7A6D242115B100870BC0CBC175A8D8B666E460DF3B034CC77B562AAE450EC56770310F768B2317E55B1CC272D84E02D4F90811C7DFE1D831CE515B3096BDED8D098E278876828F> |-/d <1C60D8A8C9B7E1F893A967A6DCFDCA1D58E724B3693786D7E4F53186F1DB6540A200FA5D0BB0B0022F47D482D7CA1B2FFCB0F71C09BA620363B35029D733968CA510853279E3FF9A88C0A310BF6FE921D813D2316E6A1D6E04FC6909876C36903ED1804680F7938767B7C819C315032DF36A0CED801B47C75E0273FBD3C63EBA04772975E003366AF563302DFC909C60947D538F00039BFA34DD4E8224A9F994> |-systemdict /gcheck known {setglobal} if end {end} ifendNOAXUK+CMR9 /Encoding getdup 82 /R putdup 100 /d putpop%ADOEndSubsetFont
/NOAXUK+CMR9*1 [40{/.notdef}rp /parenleft /parenright 24{/.notdef}rp /B /C /.notdef /E 4{/.notdef}rp /J 2{/.notdef}rp /M /N 3{/.notdef}rp /R /S /T 4{/.notdef}rp /Y 7{/.notdef}rp /a /b /c /d /e 3{/.notdef}rp /i /.notdef /k 2{/.notdef}rp /n /o 8{/.notdef}rp /x 135{/.notdef}rp]NOAXUK+CMR9 nfNOAXUK+CMR9*1 [8.96638 0 0 -8.96638 0 0 ]msf16.0933 246.217 mo(\(d\)RMSEonTaxiBJ)[3.60002 5.16005 6.84003 6.83998 8.39996 5.16005 9.24005 4.56 8.27991 5.88013 4.56001 4.92007 2.52002 6.48006 0 ]xsh122.293 235.297 mo
240.193 235.297 li
240.193 117.397 li
122.293 117.397 li
122.293 235.297 li
0 0 0 0 cmyk
f
137.03 220.559 mo
228.403 220.559 li
228.403 131.545 li
137.03 131.545 li
137.03 220.559 li
f
141.184 220.559 mo
143.491 220.559 li
143.491 211.743 li
141.184 211.743 li
141.184 220.559 li
0 .648438 .892578 0 cmyk
f
158.489 220.559 mo
160.797 220.559 li
160.797 201.809 li
158.489 201.809 li
158.489 220.559 li
f
175.794 220.559 mo
178.102 220.559 li
178.102 195.575 li
175.794 195.575 li
175.794 220.559 li
f
193.1 220.559 mo
195.407 220.559 li
195.407 187.565 li
193.1 187.565 li
193.1 220.559 li
f
210.405 220.559 mo
212.712 220.559 li
212.712 179.92 li
210.405 179.92 li
210.405 220.559 li
f
143.491 220.559 mo
145.798 220.559 li
145.798 214.031 li
143.491 214.031 li
143.491 220.559 li
.239014 .333252 0 0 cmyk
f
160.797 220.559 mo
163.104 220.559 li
163.104 205.899 li
160.797 205.899 li
160.797 220.559 li
f
178.102 220.559 mo
180.409 220.559 li
180.409 197.381 li
178.102 197.381 li
178.102 220.559 li
f
195.407 220.559 mo
197.715 220.559 li
197.715 177.878 li
195.407 177.878 li
195.407 220.559 li
f
212.712 220.559 mo
215.02 220.559 li
215.02 134.213 li
212.712 134.213 li
212.712 220.559 li
f
145.798 220.559 mo
148.106 220.559 li
148.106 205.412 li
145.798 205.412 li
145.798 220.559 li
.476807 .101563 .0893555 0 cmyk
f
163.104 220.559 mo
165.411 220.559 li
165.411 191.661 li
163.104 191.661 li
163.104 220.559 li
f
180.409 220.559 mo
182.717 220.559 li
182.717 185.881 li
180.409 185.881 li
180.409 220.559 li
f
197.715 220.559 mo
200.022 220.559 li
200.022 176.39 li
197.715 176.39 li
197.715 220.559 li
f
215.02 220.559 mo
217.328 220.559 li
217.328 169.074 li
215.02 169.074 li
215.02 220.559 li
f
148.106 220.559 mo
150.414 220.559 li
150.414 212.427 li
148.106 212.427 li
148.106 220.559 li
1 .841797 .237549 0 cmyk
f
165.411 220.559 mo
167.719 220.559 li
167.719 204.865 li
165.411 204.865 li
165.411 220.559 li
f
182.717 220.559 mo
185.024 220.559 li
185.024 199.956 li
182.717 199.956 li
182.717 220.559 li
f
200.022 220.559 mo
202.329 220.559 li
202.329 195.283 li
200.022 195.283 li
200.022 220.559 li
f
217.328 220.559 mo
219.635 220.559 li
219.635 182.647 li
217.328 182.647 li
217.328 220.559 li
f
150.414 220.559 mo
152.721 220.559 li
152.721 212.755 li
150.414 212.755 li
150.414 220.559 li
.673828 0 .941406 0 cmyk
f
167.719 220.559 mo
170.026 220.559 li
170.026 204.388 li
167.719 204.388 li
167.719 220.559 li
f
185.024 220.559 mo
187.331 220.559 li
187.331 201.231 li
185.024 201.231 li
185.024 220.559 li
f
202.329 220.559 mo
204.637 220.559 li
204.637 194.753 li
202.329 194.753 li
202.329 220.559 li
f
219.635 220.559 mo
221.942 220.559 li
221.942 185.219 li
219.635 185.219 li
219.635 220.559 li
f
152.721 220.559 mo
155.028 220.559 li
155.028 213.968 li
152.721 213.968 li
152.721 220.559 li
.163086 .976563 .724609 0 cmyk
f
170.026 220.559 mo
172.333 220.559 li
172.333 208.009 li
170.026 208.009 li
170.026 220.559 li
f
187.331 220.559 mo
189.639 220.559 li
189.639 204.198 li
187.331 204.198 li
187.331 220.559 li
f
204.637 220.559 mo
206.944 220.559 li
206.944 199.206 li
204.637 199.206 li
204.637 220.559 li
f
221.942 220.559 mo
224.25 220.559 li
224.25 190.681 li
221.942 190.681 li
221.942 220.559 li
f
148.106 220.559 mo
148.106 219.286 li
0 0 0 1 cmyk
f
.291111 lw
1 lj
148.106 220.559 mo
148.106 219.286 li
@
145.457 225.267 mo
146.277 225.267 li
146.277 222.435 li
145.385 222.613 li
145.385 222.155 li
146.272 221.976 li
146.776 221.976 li
146.776 225.267 li
147.596 225.267 li
147.596 225.69 li
145.457 225.69 li
145.457 225.267 li
ef
149.764 221.91 mo
150.176 221.91 150.492 222.078 150.716 222.404 cv
150.935 222.736 151.048 223.215 151.048 223.836 cv
151.048 224.463 150.935 224.942 150.716 225.267 cv
150.492 225.593 150.176 225.756 149.764 225.756 cv
149.346 225.756 149.025 225.593 148.806 225.267 cv
148.587 224.942 148.48 224.463 148.48 223.836 cv
148.48 223.215 148.587 222.736 148.806 222.404 cv
149.025 222.078 149.346 221.91 149.764 221.91 cv
cp
149.764 222.308 mo
149.504 222.308 149.31 222.435 149.178 222.69 cv
149.046 222.944 148.984 223.326 148.984 223.836 cv
148.984 224.345 149.046 224.727 149.178 224.982 cv
149.31 225.237 149.504 225.364 149.764 225.364 cv
150.024 225.364 150.217 225.237 150.349 224.982 cv
150.477 224.727 150.543 224.345 150.543 223.836 cv
150.543 223.326 150.477 222.944 150.349 222.69 cv
150.217 222.435 150.024 222.308 149.764 222.308 cv
ef
165.411 220.559 mo
165.411 219.286 li
f
165.411 220.559 mo
165.411 219.286 li
@
164.273 223.688 mo
164.512 223.739 164.701 223.846 164.833 224.009 cv
164.966 224.172 165.037 224.376 165.037 224.61 cv
165.037 224.977 164.91 225.262 164.66 225.461 cv
164.405 225.66 164.049 225.756 163.585 225.756 cv
163.427 225.756 163.264 225.741 163.101 225.711 cv
162.938 225.685 162.765 225.639 162.592 225.578 cv
162.592 225.094 li
162.729 225.176 162.882 225.237 163.05 225.277 cv
163.213 225.318 163.386 225.339 163.57 225.339 cv
163.885 225.339 164.125 225.277 164.288 225.155 cv
164.451 225.033 164.538 224.85 164.538 224.61 cv
164.538 224.396 164.461 224.223 164.308 224.101 cv
164.155 223.979 163.942 223.912 163.666 223.912 cv
163.233 223.912 li
163.233 223.5 li
163.687 223.5 li
163.932 223.5 164.12 223.454 164.252 223.352 cv
164.385 223.255 164.451 223.113 164.451 222.924 cv
164.451 222.736 164.38 222.588 164.247 222.486 cv
164.11 222.384 163.916 222.333 163.666 222.333 cv
163.529 222.333 163.381 222.348 163.223 222.379 cv
163.065 222.409 162.892 222.455 162.704 222.517 cv
162.704 222.068 li
162.892 222.017 163.071 221.976 163.239 221.951 cv
163.401 221.926 163.56 221.91 163.712 221.91 cv
164.089 221.91 164.39 221.997 164.614 222.17 cv
164.838 222.343 164.95 222.577 164.95 222.873 cv
164.95 223.077 164.889 223.25 164.772 223.393 cv
164.655 223.535 164.487 223.637 164.273 223.688 cv
ef
167.056 221.91 mo
167.468 221.91 167.784 222.078 168.008 222.404 cv
168.228 222.736 168.339 223.215 168.339 223.836 cv
168.339 224.463 168.228 224.942 168.008 225.267 cv
167.784 225.593 167.468 225.756 167.056 225.756 cv
166.638 225.756 166.317 225.593 166.098 225.267 cv
165.879 224.942 165.772 224.463 165.772 223.836 cv
165.772 223.215 165.879 222.736 166.098 222.404 cv
166.317 222.078 166.638 221.91 167.056 221.91 cv
cp
167.056 222.308 mo
166.796 222.308 166.602 222.435 166.47 222.69 cv
166.337 222.944 166.276 223.326 166.276 223.836 cv
166.276 224.345 166.337 224.727 166.47 224.982 cv
166.602 225.237 166.796 225.364 167.056 225.364 cv
167.316 225.364 167.509 225.237 167.642 224.982 cv
167.769 224.727 167.835 224.345 167.835 223.836 cv
167.835 223.326 167.769 222.944 167.642 222.69 cv
167.509 222.435 167.316 222.308 167.056 222.308 cv
ef
182.717 220.559 mo
182.717 219.286 li
f
182.717 220.559 mo
182.717 219.286 li
@
180.046 221.976 mo
182.018 221.976 li
182.018 222.399 li
180.505 222.399 li
180.505 223.311 li
180.576 223.286 180.653 223.265 180.724 223.255 cv
180.796 223.245 180.872 223.235 180.943 223.235 cv
181.356 223.235 181.682 223.352 181.926 223.576 cv
182.171 223.805 182.293 224.111 182.293 224.498 cv
182.293 224.901 182.166 225.211 181.916 225.431 cv
181.667 225.65 181.315 225.756 180.867 225.756 cv
180.709 225.756 180.551 225.741 180.388 225.721 cv
180.225 225.695 180.062 225.66 179.889 225.604 cv
179.889 225.099 li
180.036 225.181 180.189 225.242 180.352 225.283 cv
180.51 225.324 180.678 225.339 180.857 225.339 cv
181.142 225.339 181.371 225.267 181.539 225.115 cv
181.702 224.962 181.789 224.758 181.789 224.498 cv
181.789 224.243 181.702 224.04 181.539 223.887 cv
181.371 223.734 181.142 223.658 180.857 223.658 cv
180.724 223.658 180.587 223.673 180.454 223.704 cv
180.322 223.734 180.184 223.78 180.046 223.841 cv
180.046 221.976 li
ef
184.348 221.91 mo
184.76 221.91 185.076 222.078 185.3 222.404 cv
185.519 222.736 185.632 223.215 185.632 223.836 cv
185.632 224.463 185.519 224.942 185.3 225.267 cv
185.076 225.593 184.76 225.756 184.348 225.756 cv
183.93 225.756 183.609 225.593 183.39 225.267 cv
183.171 224.942 183.064 224.463 183.064 223.836 cv
183.064 223.215 183.171 222.736 183.39 222.404 cv
183.609 222.078 183.93 221.91 184.348 221.91 cv
cp
184.348 222.308 mo
184.088 222.308 183.894 222.435 183.762 222.69 cv
183.63 222.944 183.568 223.326 183.568 223.836 cv
183.568 224.345 183.63 224.727 183.762 224.982 cv
183.894 225.237 184.088 225.364 184.348 225.364 cv
184.608 225.364 184.801 225.237 184.933 224.982 cv
185.061 224.727 185.127 224.345 185.127 223.836 cv
185.127 223.326 185.061 222.944 184.933 222.69 cv
184.801 222.435 184.608 222.308 184.348 222.308 cv
ef
200.022 220.559 mo
200.022 219.286 li
f
200.022 220.559 mo
200.022 219.286 li
@
197.206 221.976 mo
199.595 221.976 li
199.595 222.19 li
198.245 225.69 li
197.721 225.69 li
198.989 222.399 li
197.206 222.399 li
197.206 221.976 li
ef
201.64 221.91 mo
202.052 221.91 202.368 222.078 202.592 222.404 cv
202.812 222.736 202.923 223.215 202.923 223.836 cv
202.923 224.463 202.812 224.942 202.592 225.267 cv
202.368 225.593 202.052 225.756 201.64 225.756 cv
201.222 225.756 200.901 225.593 200.682 225.267 cv
200.463 224.942 200.356 224.463 200.356 223.836 cv
200.356 223.215 200.463 222.736 200.682 222.404 cv
200.901 222.078 201.222 221.91 201.64 221.91 cv
cp
201.64 222.308 mo
201.38 222.308 201.186 222.435 201.054 222.69 cv
200.921 222.944 200.86 223.326 200.86 223.836 cv
200.86 224.345 200.921 224.727 201.054 224.982 cv
201.186 225.237 201.38 225.364 201.64 225.364 cv
201.899 225.364 202.093 225.237 202.226 224.982 cv
202.353 224.727 202.419 224.345 202.419 223.836 cv
202.419 223.326 202.353 222.944 202.226 222.69 cv
202.093 222.435 201.899 222.308 201.64 222.308 cv
ef
217.328 220.559 mo
217.328 219.286 li
f
217.328 220.559 mo
217.328 219.286 li
@
215.639 224.04 mo
215.864 224.04 216.042 223.963 216.174 223.81 cv
216.307 223.658 216.373 223.443 216.373 223.174 cv
216.373 222.909 216.307 222.695 216.174 222.542 cv
216.042 222.389 215.864 222.308 215.639 222.308 cv
215.415 222.308 215.237 222.389 215.104 222.542 cv
214.972 222.695 214.906 222.909 214.906 223.174 cv
214.906 223.443 214.972 223.658 215.104 223.81 cv
215.237 223.963 215.415 224.04 215.639 224.04 cv
cp
214.641 225.614 mo
214.641 225.155 li
214.763 225.217 214.891 225.262 215.023 225.293 cv
215.15 225.324 215.278 225.339 215.405 225.339 cv
215.731 225.339 215.986 225.232 216.159 225.008 cv
216.332 224.783 216.434 224.447 216.465 223.989 cv
216.363 224.131 216.241 224.243 216.098 224.32 cv
215.95 224.396 215.787 224.432 215.609 224.432 cv
215.232 224.432 214.936 224.32 214.722 224.096 cv
214.508 223.872 214.401 223.566 214.401 223.174 cv
214.401 222.797 214.514 222.491 214.737 222.257 cv
214.962 222.027 215.262 221.91 215.639 221.91 cv
216.067 221.91 216.398 222.078 216.623 222.404 cv
216.847 222.736 216.964 223.215 216.964 223.836 cv
216.964 224.427 216.821 224.89 216.546 225.237 cv
216.266 225.583 215.894 225.756 215.425 225.756 cv
215.298 225.756 215.171 225.741 215.043 225.721 cv
214.911 225.701 214.778 225.665 214.641 225.614 cv
ef
218.932 221.91 mo
219.344 221.91 219.66 222.078 219.884 222.404 cv
220.103 222.736 220.216 223.215 220.216 223.836 cv
220.216 224.463 220.103 224.942 219.884 225.267 cv
219.66 225.593 219.344 225.756 218.932 225.756 cv
218.514 225.756 218.193 225.593 217.974 225.267 cv
217.755 224.942 217.648 224.463 217.648 223.836 cv
217.648 223.215 217.755 222.736 217.974 222.404 cv
218.193 222.078 218.514 221.91 218.932 221.91 cv
cp
218.932 222.308 mo
218.672 222.308 218.478 222.435 218.346 222.69 cv
218.214 222.944 218.152 223.326 218.152 223.836 cv
218.152 224.345 218.214 224.727 218.346 224.982 cv
218.478 225.237 218.672 225.364 218.932 225.364 cv
219.192 225.364 219.385 225.237 219.517 224.982 cv
219.645 224.727 219.711 224.345 219.711 223.836 cv
219.711 223.326 219.645 222.944 219.517 222.69 cv
219.385 222.435 219.192 222.308 218.932 222.308 cv
ef
161.83 228.352 mo
162.579 228.352 li
163.527 230.879 li
164.479 228.352 li
165.228 228.352 li
165.228 232.066 li
164.739 232.066 li
164.739 228.805 li
163.782 231.352 li
163.277 231.352 li
162.319 228.805 li
162.319 232.066 li
161.83 232.066 li
161.83 228.352 li
ef
166.176 228.194 mo
166.635 228.194 li
166.635 228.775 li
166.176 228.775 li
166.176 228.194 li
cp
166.176 229.279 mo
166.635 229.279 li
166.635 232.066 li
166.176 232.066 li
166.176 229.279 li
ef
169.352 229.361 mo
169.352 229.793 li
169.219 229.733 169.087 229.681 168.949 229.646 cv
168.807 229.615 168.664 229.595 168.516 229.595 cv
168.287 229.595 168.114 229.631 168.002 229.702 cv
167.89 229.773 167.834 229.875 167.834 230.013 cv
167.834 230.119 167.874 230.201 167.956 230.262 cv
168.037 230.323 168.201 230.384 168.445 230.435 cv
168.603 230.471 li
168.929 230.542 169.158 230.644 169.296 230.767 cv
169.428 230.894 169.499 231.072 169.499 231.296 cv
169.499 231.556 169.398 231.76 169.194 231.908 cv
168.99 232.061 168.705 232.132 168.348 232.132 cv
168.196 232.132 168.042 232.117 167.88 232.091 cv
167.717 232.066 167.548 232.025 167.37 231.964 cv
167.37 231.49 li
167.538 231.582 167.707 231.648 167.869 231.689 cv
168.032 231.734 168.196 231.755 168.358 231.755 cv
168.573 231.755 168.741 231.719 168.858 231.648 cv
168.97 231.577 169.031 231.47 169.031 231.332 cv
169.031 231.21 168.985 231.113 168.903 231.047 cv
168.822 230.981 168.639 230.914 168.353 230.853 cv
168.196 230.817 li
167.91 230.756 167.701 230.665 167.579 230.542 cv
167.451 230.42 167.391 230.252 167.391 230.033 cv
167.391 229.773 167.482 229.569 167.666 229.427 cv
167.849 229.284 168.114 229.213 168.46 229.213 cv
168.628 229.213 168.786 229.228 168.939 229.254 cv
169.087 229.279 169.224 229.315 169.352 229.361 cv
ef
171.972 229.361 mo
171.972 229.793 li
171.839 229.733 171.707 229.681 171.569 229.646 cv
171.427 229.615 171.284 229.595 171.136 229.595 cv
170.907 229.595 170.734 229.631 170.622 229.702 cv
170.51 229.773 170.454 229.875 170.454 230.013 cv
170.454 230.119 170.494 230.201 170.576 230.262 cv
170.657 230.323 170.821 230.384 171.065 230.435 cv
171.223 230.471 li
171.549 230.542 171.778 230.644 171.916 230.767 cv
172.048 230.894 172.119 231.072 172.119 231.296 cv
172.119 231.556 172.018 231.76 171.814 231.908 cv
171.61 232.061 171.325 232.132 170.968 232.132 cv
170.816 232.132 170.662 232.117 170.499 232.091 cv
170.337 232.066 170.168 232.025 169.99 231.964 cv
169.99 231.49 li
170.158 231.582 170.326 231.648 170.489 231.689 cv
170.652 231.734 170.816 231.755 170.978 231.755 cv
171.192 231.755 171.36 231.719 171.478 231.648 cv
171.59 231.577 171.651 231.47 171.651 231.332 cv
171.651 231.21 171.605 231.113 171.524 231.047 cv
171.442 230.981 171.258 230.914 170.973 230.853 cv
170.816 230.817 li
170.53 230.756 170.321 230.665 170.199 230.542 cv
170.072 230.42 170.01 230.252 170.01 230.033 cv
170.01 229.773 170.102 229.569 170.285 229.427 cv
170.469 229.284 170.734 229.213 171.08 229.213 cv
171.248 229.213 171.407 229.228 171.559 229.254 cv
171.707 229.279 171.844 229.315 171.972 229.361 cv
ef
172.901 228.194 mo
173.36 228.194 li
173.36 228.775 li
172.901 228.775 li
172.901 228.194 li
cp
172.901 229.279 mo
173.36 229.279 li
173.36 232.066 li
172.901 232.066 li
172.901 229.279 li
ef
176.617 230.384 mo
176.617 232.066 li
176.158 232.066 li
176.158 230.4 li
176.158 230.135 176.102 229.941 176 229.809 cv
175.898 229.676 175.745 229.61 175.542 229.61 cv
175.292 229.61 175.098 229.692 174.956 229.85 cv
174.813 230.008 174.742 230.222 174.742 230.492 cv
174.742 232.066 li
174.283 232.066 li
174.283 229.279 li
174.742 229.279 li
174.742 229.712 li
174.849 229.549 174.976 229.422 175.129 229.34 cv
175.277 229.259 175.45 229.213 175.644 229.213 cv
175.959 229.213 176.204 229.315 176.367 229.513 cv
176.53 229.712 176.617 230.002 176.617 230.384 cv
ef
179.823 231.719 mo
179.823 232.188 179.716 232.54 179.507 232.774 cv
179.292 233.003 178.972 233.12 178.539 233.12 cv
178.376 233.12 178.228 233.105 178.085 233.084 cv
177.942 233.059 177.8 233.024 177.667 232.972 cv
177.667 232.529 li
177.8 232.601 177.932 232.651 178.065 232.687 cv
178.197 232.723 178.33 232.743 178.467 232.743 cv
178.763 232.743 178.987 232.662 179.14 232.509 cv
179.287 232.351 179.364 232.117 179.364 231.801 cv
179.364 231.577 li
179.267 231.74 179.145 231.862 178.997 231.943 cv
178.849 232.025 178.676 232.066 178.473 232.066 cv
178.126 232.066 177.851 231.938 177.642 231.679 cv
177.433 231.418 177.331 231.072 177.331 230.639 cv
177.331 230.211 177.433 229.865 177.642 229.605 cv
177.851 229.345 178.126 229.213 178.473 229.213 cv
178.676 229.213 178.849 229.254 178.997 229.335 cv
179.145 229.417 179.267 229.539 179.364 229.702 cv
179.364 229.279 li
179.823 229.279 li
179.823 231.719 li
cp
179.364 230.639 mo
179.364 230.313 179.292 230.053 179.16 229.87 cv
179.023 229.686 178.829 229.595 178.584 229.595 cv
178.34 229.595 178.146 229.686 178.009 229.87 cv
177.871 230.053 177.805 230.313 177.805 230.639 cv
177.805 230.97 177.871 231.225 178.009 231.408 cv
178.146 231.592 178.34 231.684 178.584 231.684 cv
178.829 231.684 179.023 231.592 179.16 231.408 cv
179.292 231.225 179.364 230.97 179.364 230.639 cv
ef
182.945 228.765 mo
182.945 230.084 li
183.577 230.084 li
183.816 230.084 184 230.028 184.122 229.916 cv
184.244 229.804 184.31 229.641 184.31 229.422 cv
184.31 229.208 184.244 229.045 184.122 228.933 cv
184 228.82 183.816 228.765 183.577 228.765 cv
182.945 228.765 li
cp
184.204 230.323 mo
184.31 230.364 184.417 230.44 184.519 230.558 cv
184.621 230.68 184.723 230.843 184.825 231.052 cv
185.335 232.066 li
184.794 232.066 li
184.321 231.113 li
184.198 230.868 184.076 230.7 183.964 230.619 cv
183.847 230.537 183.689 230.497 183.491 230.497 cv
182.945 230.497 li
182.945 232.066 li
182.441 232.066 li
182.441 228.352 li
183.577 228.352 li
184 228.352 184.316 228.443 184.524 228.617 cv
184.733 228.795 184.841 229.065 184.841 229.422 cv
184.841 229.656 184.784 229.855 184.677 230.008 cv
184.566 230.16 184.407 230.267 184.204 230.323 cv
ef
188.094 230.476 mo
188.094 232.066 li
187.636 232.066 li
187.636 231.643 li
187.529 231.816 187.396 231.938 187.244 232.015 cv
187.091 232.091 186.897 232.132 186.673 232.132 cv
186.388 232.132 186.158 232.056 185.99 231.897 cv
185.822 231.74 185.741 231.526 185.741 231.256 cv
185.741 230.945 185.842 230.711 186.057 230.547 cv
186.266 230.39 186.576 230.308 186.994 230.308 cv
187.636 230.308 li
187.636 230.262 li
187.636 230.053 187.564 229.89 187.427 229.773 cv
187.289 229.661 187.096 229.6 186.846 229.6 cv
186.683 229.6 186.53 229.62 186.378 229.661 cv
186.224 229.702 186.082 229.758 185.944 229.829 cv
185.944 229.406 li
186.107 229.345 186.271 229.294 186.428 229.264 cv
186.586 229.233 186.739 229.213 186.892 229.213 cv
187.294 229.213 187.595 229.32 187.794 229.529 cv
187.992 229.738 188.094 230.053 188.094 230.476 cv
cp
187.182 230.665 mo
186.81 230.665 186.556 230.711 186.413 230.792 cv
186.271 230.879 186.199 231.021 186.199 231.225 cv
186.199 231.388 186.25 231.52 186.357 231.612 cv
186.464 231.709 186.612 231.755 186.795 231.755 cv
187.05 231.755 187.254 231.668 187.407 231.485 cv
187.559 231.306 187.636 231.067 187.636 230.767 cv
187.636 230.665 li
187.182 230.665 li
ef
189.511 228.489 mo
189.511 229.279 li
190.454 229.279 li
190.454 229.636 li
189.511 229.636 li
189.511 231.149 li
189.511 231.378 189.542 231.526 189.603 231.587 cv
189.664 231.653 189.792 231.684 189.985 231.684 cv
190.454 231.684 li
190.454 232.066 li
189.985 232.066 li
189.628 232.066 189.384 231.999 189.251 231.867 cv
189.119 231.734 189.053 231.495 189.053 231.149 cv
189.053 229.636 li
188.717 229.636 li
188.717 229.279 li
189.053 229.279 li
189.053 228.489 li
189.511 228.489 li
ef
192.992 230.425 mo
192.987 230.176 192.916 229.977 192.783 229.824 cv
192.646 229.676 192.462 229.6 192.238 229.6 cv
191.983 229.6 191.78 229.676 191.627 229.819 cv
191.474 229.961 191.382 230.165 191.362 230.425 cv
192.992 230.425 li
cp
193.451 230.558 mo
193.451 230.782 li
191.347 230.782 li
191.367 231.098 191.459 231.342 191.632 231.505 cv
191.8 231.668 192.035 231.75 192.34 231.75 cv
192.514 231.75 192.687 231.729 192.849 231.689 cv
193.013 231.648 193.181 231.582 193.344 231.49 cv
193.344 231.923 li
193.181 231.994 193.013 232.051 192.839 232.081 cv
192.666 232.111 192.488 232.132 192.315 232.132 cv
191.866 232.132 191.515 232.004 191.255 231.75 cv
190.995 231.495 190.868 231.143 190.868 230.7 cv
190.868 230.247 190.99 229.885 191.235 229.615 cv
191.479 229.35 191.816 229.213 192.233 229.213 cv
192.61 229.213 192.906 229.335 193.125 229.574 cv
193.339 229.819 193.451 230.145 193.451 230.558 cv
ef
196.883 228.199 mo
196.659 228.586 196.496 228.963 196.389 229.335 cv
196.277 229.707 196.226 230.084 196.226 230.466 cv
196.226 230.853 196.277 231.23 196.389 231.602 cv
196.496 231.979 196.659 232.351 196.883 232.733 cv
196.485 232.733 li
196.236 232.341 196.048 231.964 195.925 231.587 cv
195.803 231.21 195.742 230.838 195.742 230.466 cv
195.742 230.099 195.803 229.727 195.925 229.35 cv
196.048 228.973 196.231 228.591 196.485 228.199 cv
196.883 228.199 li
ef
198.448 228.286 mo
198.708 228.286 198.917 228.377 199.075 228.561 cv
199.228 228.744 199.309 228.988 199.309 229.294 cv
199.309 229.61 199.228 229.855 199.075 230.038 cv
198.922 230.222 198.713 230.308 198.448 230.308 cv
198.183 230.308 197.974 230.222 197.822 230.038 cv
197.669 229.855 197.592 229.61 197.592 229.294 cv
197.592 228.988 197.669 228.744 197.822 228.561 cv
197.974 228.377 198.183 228.286 198.448 228.286 cv
cp
200.695 228.286 mo
201.092 228.286 li
198.769 232.132 li
198.372 232.132 li
200.695 228.286 li
198.448 228.601 mo
198.306 228.601 198.194 228.668 198.112 228.79 cv
198.031 228.912 197.99 229.08 197.99 229.294 cv
197.99 229.518 198.031 229.686 198.112 229.809 cv
198.194 229.931 198.306 229.992 198.448 229.992 cv
198.591 229.992 198.708 229.931 198.79 229.809 cv
198.871 229.686 198.912 229.518 198.912 229.294 cv
198.912 229.08 198.866 228.912 198.785 228.79 cv
198.703 228.668 198.591 228.601 198.448 228.601 cv
201.016 230.115 mo
201.276 230.115 201.485 230.206 201.637 230.39 cv
201.791 230.573 201.872 230.823 201.872 231.128 cv
201.872 231.439 201.791 231.684 201.637 231.862 cv
201.485 232.045 201.276 232.132 201.016 232.132 cv
200.751 232.132 200.537 232.045 200.384 231.862 cv
200.232 231.684 200.155 231.439 200.155 231.128 cv
200.155 230.817 200.232 230.573 200.384 230.39 cv
200.537 230.206 200.751 230.115 201.016 230.115 cv
201.016 230.43 mo
200.873 230.43 200.756 230.492 200.674 230.614 cv
200.593 230.736 200.552 230.909 200.552 231.128 cv
200.552 231.342 200.593 231.515 200.674 231.638 cv
200.756 231.76 200.873 231.821 201.016 231.821 cv
201.158 231.821 201.271 231.76 201.352 231.638 cv
201.434 231.515 201.474 231.342 201.474 231.128 cv
201.474 230.914 201.434 230.741 201.352 230.619 cv
201.271 230.497 201.158 230.43 201.016 230.43 cv
ef
202.523 228.199 mo
202.921 228.199 li
203.165 228.591 203.354 228.973 203.476 229.35 cv
203.598 229.727 203.664 230.099 203.664 230.466 cv
203.664 230.838 203.598 231.21 203.476 231.587 cv
203.354 231.964 203.165 232.341 202.921 232.733 cv
202.523 232.733 li
202.742 232.351 202.905 231.979 203.017 231.602 cv
203.124 231.23 203.18 230.853 203.18 230.466 cv
203.18 230.084 203.124 229.707 203.017 229.335 cv
202.905 228.963 202.742 228.586 202.523 228.199 cv
ef
gsave
137.03 220.559 mo
228.403 220.559 li
228.403 131.552 li
137.03 131.552 li
137.03 220.559 li
cp
clp
[1.07711 .465778 ] 0 dsh
137.03 220.559 mo
228.403 220.559 li
0 0 0 .310059 cmyk
@
grestore
137.03 220.559 mo
138.304 220.559 li
f
137.03 220.559 mo
138.304 220.559 li
@
134.131 218.679 mo
134.544 218.679 134.86 218.847 135.083 219.173 cv
135.303 219.504 135.415 219.983 135.415 220.604 cv
135.415 221.231 135.303 221.71 135.083 222.036 cv
134.86 222.362 134.544 222.525 134.131 222.525 cv
133.713 222.525 133.392 222.362 133.173 222.036 cv
132.954 221.71 132.847 221.231 132.847 220.604 cv
132.847 219.983 132.954 219.504 133.173 219.173 cv
133.392 218.847 133.713 218.679 134.131 218.679 cv
cp
134.131 219.076 mo
133.871 219.076 133.678 219.204 133.545 219.458 cv
133.413 219.713 133.351 220.095 133.351 220.604 cv
133.351 221.114 133.413 221.496 133.545 221.751 cv
133.678 222.006 133.871 222.133 134.131 222.133 cv
134.391 222.133 134.584 222.006 134.717 221.751 cv
134.844 221.496 134.91 221.114 134.91 220.604 cv
134.91 220.095 134.844 219.713 134.717 219.458 cv
134.584 219.204 134.391 219.076 134.131 219.076 cv
ef
gsave
137.03 220.559 mo
228.403 220.559 li
228.403 131.552 li
137.03 131.552 li
137.03 220.559 li
cp
clp
[1.07711 .465778 ] 0 dsh
137.03 207.843 mo
228.403 207.843 li
0 0 0 .310059 cmyk
@
grestore
137.03 207.843 mo
138.304 207.843 li
f
137.03 207.843 mo
138.304 207.843 li
@
133.489 209.373 mo
135.242 209.373 li
135.242 209.795 li
132.883 209.795 li
132.883 209.373 li
133.071 209.179 133.331 208.914 133.662 208.578 cv
133.989 208.247 134.197 208.033 134.284 207.936 cv
134.447 207.758 134.559 207.605 134.62 207.477 cv
134.681 207.355 134.717 207.228 134.717 207.106 cv
134.717 206.912 134.646 206.749 134.508 206.627 cv
134.371 206.505 134.192 206.438 133.968 206.438 cv
133.81 206.438 133.642 206.469 133.469 206.52 cv
133.296 206.576 133.107 206.658 132.908 206.77 cv
132.908 206.26 li
133.112 206.179 133.301 206.117 133.474 206.077 cv
133.647 206.036 133.81 206.015 133.958 206.015 cv
134.34 206.015 134.646 206.112 134.875 206.306 cv
135.104 206.499 135.221 206.754 135.221 207.075 cv
135.221 207.228 135.191 207.376 135.135 207.508 cv
135.079 207.646 134.977 207.809 134.824 207.992 cv
134.783 208.043 134.651 208.181 134.426 208.41 cv
134.202 208.639 133.892 208.96 133.489 209.373 cv
ef
gsave
137.03 220.559 mo
228.403 220.559 li
228.403 131.552 li
137.03 131.552 li
137.03 220.559 li
cp
clp
[1.07711 .465778 ] 0 dsh
137.03 195.127 mo
228.403 195.127 li
0 0 0 .310059 cmyk
@
grestore
137.03 195.127 mo
138.304 195.127 li
f
137.03 195.127 mo
138.304 195.127 li
@
134.304 193.331 mo
134.936 193.331 li
134.936 195.751 li
135.466 195.751 li
135.466 196.169 li
134.936 196.169 li
134.936 197.045 li
134.437 197.045 li
134.437 196.169 li
132.761 196.169 li
132.761 195.685 li
134.304 193.331 li
cp
134.437 193.769 mo
133.168 195.751 li
134.437 195.751 li
134.437 193.769 li
ef
gsave
137.03 220.559 mo
228.403 220.559 li
228.403 131.552 li
137.03 131.552 li
137.03 220.559 li
cp
clp
[1.07711 .465778 ] 0 dsh
137.03 182.41 mo
228.403 182.41 li
0 0 0 .310059 cmyk
@
grestore
137.03 182.41 mo
138.304 182.41 li
f
137.03 182.41 mo
138.304 182.41 li
@
135.191 180.749 mo
135.191 181.208 li
135.063 181.147 134.936 181.101 134.808 181.07 cv
134.676 181.04 134.549 181.024 134.426 181.024 cv
134.09 181.024 133.836 181.136 133.662 181.361 cv
133.489 181.585 133.387 181.926 133.367 182.374 cv
133.464 182.232 133.586 182.12 133.733 182.043 cv
133.882 181.967 134.044 181.926 134.223 181.926 cv
134.595 181.926 134.89 182.043 135.104 182.267 cv
135.318 182.492 135.43 182.802 135.43 183.19 cv
135.43 183.572 135.313 183.877 135.089 184.106 cv
134.865 184.336 134.564 184.448 134.192 184.448 cv
133.764 184.448 133.433 184.285 133.209 183.959 cv
132.98 183.633 132.868 183.154 132.868 182.527 cv
132.868 181.942 133.005 181.473 133.285 181.126 cv
133.56 180.78 133.937 180.602 134.406 180.602 cv
134.528 180.602 134.656 180.617 134.788 180.637 cv
134.916 180.663 135.048 180.698 135.191 180.749 cv
cp
134.192 182.324 mo
133.968 182.324 133.79 182.405 133.657 182.558 cv
133.525 182.711 133.458 182.925 133.458 183.19 cv
133.458 183.459 133.525 183.674 133.657 183.826 cv
133.79 183.979 133.968 184.056 134.192 184.056 cv
134.416 184.056 134.595 183.979 134.727 183.826 cv
134.86 183.674 134.926 183.459 134.926 183.19 cv
134.926 182.925 134.86 182.711 134.727 182.558 cv
134.595 182.405 134.416 182.324 134.192 182.324 cv
ef
gsave
137.03 220.559 mo
228.403 220.559 li
228.403 131.552 li
137.03 131.552 li
137.03 220.559 li
cp
clp
[1.07711 .465778 ] 0 dsh
137.03 169.694 mo
228.403 169.694 li
0 0 0 .310059 cmyk
@
grestore
137.03 169.694 mo
138.304 169.694 li
f
137.03 169.694 mo
138.304 169.694 li
@
133.443 168.859 mo
133.443 169.053 133.499 169.206 133.621 169.313 cv
133.744 169.42 133.912 169.471 134.131 169.471 cv
134.345 169.471 134.513 169.42 134.635 169.313 cv
134.758 169.206 134.819 169.053 134.819 168.859 cv
134.819 168.666 134.758 168.518 134.635 168.411 cv
134.513 168.304 134.345 168.248 134.131 168.248 cv
133.912 168.248 133.744 168.304 133.621 168.411 cv
133.499 168.518 133.443 168.666 133.443 168.859 cv
cp
133.627 169.654 mo
133.413 169.603 133.245 169.501 133.122 169.354 cv
133 169.206 132.944 169.028 132.944 168.814 cv
132.944 168.518 133.046 168.284 133.26 168.111 cv
133.469 167.938 133.759 167.851 134.131 167.851 cv
134.498 167.851 134.788 167.938 135.002 168.111 cv
135.211 168.284 135.318 168.518 135.318 168.814 cv
135.318 169.028 135.257 169.206 135.135 169.354 cv
135.012 169.501 134.849 169.603 134.635 169.654 cv
134.875 169.71 135.063 169.822 135.201 169.985 cv
135.333 170.149 135.405 170.352 135.405 170.586 cv
135.405 170.948 135.292 171.224 135.074 171.412 cv
134.849 171.606 134.539 171.697 134.131 171.697 cv
133.718 171.697 133.403 171.606 133.183 171.412 cv
132.964 171.224 132.858 170.948 132.858 170.586 cv
132.858 170.352 132.924 170.149 133.061 169.985 cv
133.194 169.822 133.382 169.71 133.627 169.654 cv
134.131 169.868 mo
133.892 169.868 133.703 169.934 133.566 170.062 cv
133.428 170.189 133.362 170.363 133.362 170.586 cv
133.362 170.811 133.428 170.989 133.566 171.117 cv
133.703 171.244 133.892 171.305 134.131 171.305 cv
134.366 171.305 134.554 171.244 134.691 171.111 cv
134.829 170.984 134.9 170.811 134.9 170.586 cv
134.9 170.363 134.829 170.189 134.696 170.062 cv
134.559 169.934 134.371 169.868 134.131 169.868 cv
ef
gsave
137.03 220.559 mo
228.403 220.559 li
228.403 131.552 li
137.03 131.552 li
137.03 220.559 li
cp
clp
[1.07711 .465778 ] 0 dsh
137.03 156.977 mo
228.403 156.977 li
0 0 0 .310059 cmyk
@
grestore
137.03 156.977 mo
138.304 156.977 li
f
137.03 156.977 mo
138.304 156.977 li
@
129.911 158.458 mo
130.732 158.458 li
130.732 155.625 li
129.84 155.803 li
129.84 155.345 li
130.726 155.167 li
131.231 155.167 li
131.231 158.458 li
132.051 158.458 li
132.051 158.88 li
129.911 158.88 li
129.911 158.458 li
ef
134.131 155.1 mo
134.544 155.1 134.86 155.268 135.083 155.594 cv
135.303 155.926 135.415 156.404 135.415 157.026 cv
135.415 157.652 135.303 158.131 135.083 158.458 cv
134.86 158.783 134.544 158.947 134.131 158.947 cv
133.713 158.947 133.392 158.783 133.173 158.458 cv
132.954 158.131 132.847 157.652 132.847 157.026 cv
132.847 156.404 132.954 155.926 133.173 155.594 cv
133.392 155.268 133.713 155.1 134.131 155.1 cv
cp
134.131 155.498 mo
133.871 155.498 133.678 155.625 133.545 155.88 cv
133.413 156.134 133.351 156.517 133.351 157.026 cv
133.351 157.535 133.413 157.917 133.545 158.172 cv
133.678 158.427 133.871 158.554 134.131 158.554 cv
134.391 158.554 134.584 158.427 134.717 158.172 cv
134.844 157.917 134.91 157.535 134.91 157.026 cv
134.91 156.517 134.844 156.134 134.717 155.88 cv
134.584 155.625 134.391 155.498 134.131 155.498 cv
ef
gsave
137.03 220.559 mo
228.403 220.559 li
228.403 131.552 li
137.03 131.552 li
137.03 220.559 li
cp
clp
[1.07711 .465778 ] 0 dsh
137.03 144.261 mo
228.403 144.261 li
0 0 0 .310059 cmyk
@
grestore
137.03 144.261 mo
138.304 144.261 li
f
137.03 144.261 mo
138.304 144.261 li
@
129.911 145.794 mo
130.732 145.794 li
130.732 142.961 li
129.84 143.14 li
129.84 142.681 li
130.726 142.503 li
131.231 142.503 li
131.231 145.794 li
132.051 145.794 li
132.051 146.217 li
129.911 146.217 li
129.911 145.794 li
ef
133.489 145.794 mo
135.242 145.794 li
135.242 146.217 li
132.883 146.217 li
132.883 145.794 li
133.071 145.601 133.331 145.336 133.662 144.999 cv
133.989 144.668 134.197 144.454 134.284 144.358 cv
134.447 144.179 134.559 144.026 134.62 143.899 cv
134.681 143.777 134.717 143.649 134.717 143.527 cv
134.717 143.333 134.646 143.17 134.508 143.048 cv
134.371 142.926 134.192 142.86 133.968 142.86 cv
133.81 142.86 133.642 142.89 133.469 142.941 cv
133.296 142.997 133.107 143.079 132.908 143.191 cv
132.908 142.681 li
133.112 142.6 133.301 142.539 133.474 142.498 cv
133.647 142.457 133.81 142.437 133.958 142.437 cv
134.34 142.437 134.646 142.534 134.875 142.727 cv
135.104 142.921 135.221 143.176 135.221 143.497 cv
135.221 143.649 135.191 143.797 135.135 143.929 cv
135.079 144.067 134.977 144.23 134.824 144.413 cv
134.783 144.465 134.651 144.602 134.426 144.831 cv
134.202 145.061 133.892 145.381 133.489 145.794 cv
ef
gsave
137.03 220.559 mo
228.403 220.559 li
228.403 131.552 li
137.03 131.552 li
137.03 220.559 li
cp
clp
[1.07711 .465778 ] 0 dsh
137.03 131.545 mo
228.403 131.545 li
0 0 0 .310059 cmyk
@
grestore
137.03 131.545 mo
138.304 131.545 li
f
137.03 131.545 mo
138.304 131.545 li
@
123.446 182.243 mo
124.765 182.243 li
124.765 181.611 li
124.765 181.372 124.709 181.188 124.597 181.066 cv
124.485 180.943 124.322 180.877 124.103 180.877 cv
123.889 180.877 123.726 180.943 123.614 181.066 cv
123.502 181.188 123.446 181.372 123.446 181.611 cv
123.446 182.243 li
cp
125.005 180.984 mo
125.046 180.877 125.122 180.77 125.239 180.668 cv
125.361 180.567 125.524 180.465 125.733 180.363 cv
126.747 179.853 li
126.747 180.393 li
125.794 180.867 li
125.55 180.99 125.382 181.112 125.3 181.224 cv
125.219 181.341 125.178 181.499 125.178 181.698 cv
125.178 182.243 li
126.747 182.243 li
126.747 182.747 li
123.033 182.747 li
123.033 181.611 li
123.033 181.188 123.125 180.872 123.298 180.663 cv
123.476 180.454 123.746 180.347 124.103 180.347 cv
124.337 180.347 124.536 180.404 124.689 180.511 cv
124.842 180.623 124.949 180.781 125.005 180.984 cv
ef
123.033 179.167 mo
123.033 178.417 li
125.56 177.47 li
123.033 176.517 li
123.033 175.768 li
126.747 175.768 li
126.747 176.258 li
123.487 176.258 li
126.034 177.215 li
126.034 177.719 li
123.487 178.677 li
126.747 178.677 li
126.747 179.167 li
123.033 179.167 li
ef
123.155 172.574 mo
123.644 172.574 li
123.553 172.767 123.487 172.945 123.441 173.113 cv
123.4 173.287 123.374 173.45 123.374 173.602 cv
123.374 173.877 123.43 174.092 123.532 174.239 cv
123.639 174.387 123.792 174.458 123.986 174.458 cv
124.149 174.458 124.276 174.413 124.358 174.311 cv
124.444 174.214 124.51 174.026 124.562 173.75 cv
124.623 173.445 li
124.694 173.073 124.821 172.798 124.999 172.619 cv
125.183 172.441 125.423 172.349 125.723 172.349 cv
126.085 172.349 126.355 172.472 126.538 172.711 cv
126.721 172.956 126.813 173.307 126.813 173.771 cv
126.813 173.949 126.793 174.138 126.757 174.336 cv
126.721 174.535 126.666 174.738 126.584 174.947 cv
126.064 174.947 li
126.182 174.743 126.268 174.545 126.324 174.351 cv
126.385 174.158 126.411 173.964 126.411 173.771 cv
126.411 173.485 126.355 173.266 126.243 173.108 cv
126.13 172.956 125.973 172.874 125.758 172.874 cv
125.575 172.874 125.433 172.93 125.331 173.042 cv
125.229 173.154 125.152 173.338 125.101 173.592 cv
125.04 173.898 li
124.969 174.275 124.852 174.545 124.689 174.713 cv
124.531 174.881 124.312 174.963 124.026 174.963 cv
123.701 174.963 123.441 174.851 123.252 174.616 cv
123.064 174.387 122.967 174.066 122.967 173.659 cv
122.967 173.485 122.982 173.312 123.013 173.129 cv
123.043 172.951 123.094 172.767 123.155 172.574 cv
ef
123.033 171.568 mo
123.033 169.22 li
123.456 169.22 li
123.456 171.064 li
124.557 171.064 li
124.557 169.296 li
124.979 169.296 li
124.979 171.064 li
126.324 171.064 li
126.324 169.174 li
126.747 169.174 li
126.747 171.568 li
123.033 171.568 li
ef
2 lc
0 lj
137.03 131.545 mo
228.403 131.545 li
137.03 220.559 mo
228.403 220.559 li
228.403 220.559 mo
228.403 131.545 li
137.03 220.559 mo
137.03 131.545 li
@
138.769 178.256 mo
188.299 178.256 li
188.978 178.256 189.318 177.917 189.318 177.237 cv
189.318 132.886 li
189.318 132.206 188.978 131.867 188.299 131.867 cv
138.769 131.867 li
138.09 131.867 137.75 132.206 137.75 132.886 cv
137.75 177.237 li
137.75 177.917 138.09 178.256 138.769 178.256 cv
0 0 0 0 cmyk
f
.363889 lw
0 lc
138.769 178.256 mo
188.299 178.256 li
188.978 178.256 189.318 177.917 189.318 177.237 cv
189.318 132.886 li
189.318 132.206 188.978 131.867 188.299 131.867 cv
138.769 131.867 li
138.09 131.867 137.75 132.206 137.75 132.886 cv
137.75 177.237 li
137.75 177.917 138.09 178.256 138.769 178.256 cv
cp
0 0 0 .199951 cmyk
@
139.788 137.777 mo
149.977 137.777 li
149.977 134.211 li
139.788 134.211 li
139.788 137.777 li
0 .648438 .892578 0 cmyk
f
154.582 134.032 mo
155.718 134.032 li
156.13 134.032 156.446 134.129 156.66 134.317 cv
156.874 134.506 156.981 134.781 156.981 135.142 cv
156.981 135.509 156.874 135.789 156.66 135.973 cv
156.446 136.161 156.13 136.253 155.718 136.253 cv
155.086 136.253 li
155.086 137.745 li
154.582 137.745 li
154.582 134.032 li
cp
155.086 134.445 mo
155.086 135.84 li
155.718 135.84 li
155.952 135.84 156.13 135.784 156.258 135.662 cv
156.385 135.54 156.451 135.367 156.451 135.142 cv
156.451 134.918 156.385 134.75 156.258 134.628 cv
156.13 134.506 155.952 134.445 155.718 134.445 cv
155.086 134.445 li
0 0 0 1 cmyk
ef
157.638 134.032 mo
158.774 134.032 li
159.187 134.032 159.503 134.129 159.717 134.317 cv
159.931 134.506 160.038 134.781 160.038 135.142 cv
160.038 135.509 159.931 135.789 159.717 135.973 cv
159.503 136.161 159.187 136.253 158.774 136.253 cv
158.142 136.253 li
158.142 137.745 li
157.638 137.745 li
157.638 134.032 li
cp
158.142 134.445 mo
158.142 135.84 li
158.774 135.84 li
159.008 135.84 159.187 135.784 159.314 135.662 cv
159.442 135.54 159.508 135.367 159.508 135.142 cv
159.508 134.918 159.442 134.75 159.314 134.628 cv
159.187 134.506 159.008 134.445 158.774 134.445 cv
158.142 134.445 li
ef
163.476 134.317 mo
163.476 134.847 li
163.303 134.694 163.125 134.577 162.932 134.495 cv
162.738 134.419 162.539 134.378 162.325 134.378 cv
161.897 134.378 161.571 134.511 161.347 134.77 cv
161.123 135.03 161.011 135.402 161.011 135.891 cv
161.011 136.38 161.123 136.758 161.347 137.017 cv
161.571 137.277 161.897 137.404 162.325 137.404 cv
162.539 137.404 162.738 137.368 162.932 137.287 cv
163.125 137.211 163.303 137.093 163.476 136.936 cv
163.476 137.46 li
163.298 137.583 163.11 137.669 162.916 137.725 cv
162.723 137.781 162.514 137.812 162.294 137.812 cv
161.734 137.812 161.291 137.644 160.965 137.302 cv
160.639 136.961 160.481 136.492 160.481 135.891 cv
160.481 135.295 160.639 134.826 160.965 134.48 cv
161.291 134.139 161.734 133.966 162.294 133.966 cv
162.519 133.966 162.728 133.996 162.921 134.052 cv
163.115 134.113 163.303 134.2 163.476 134.317 cv
ef
165.233 134.032 mo
165.804 134.032 li
167.22 137.745 li
166.696 137.745 li
166.359 136.793 li
164.683 136.793 li
164.347 137.745 li
163.817 137.745 li
165.233 134.032 li
cp
165.519 134.526 mo
164.836 136.375 li
166.201 136.375 li
165.519 134.526 li
ef
139.788 145.253 mo
149.977 145.253 li
149.977 141.687 li
139.788 141.687 li
139.788 145.253 li
.239014 .333252 0 0 cmyk
f
154.582 141.542 mo
155.086 141.542 li
155.086 143.066 li
156.91 143.066 li
156.91 141.542 li
157.414 141.542 li
157.414 145.256 li
156.91 145.256 li
156.91 143.488 li
155.086 143.488 li
155.086 145.256 li
154.582 145.256 li
154.582 141.542 li
0 0 0 1 cmyk
ef
160.584 143.667 mo
160.584 145.256 li
160.126 145.256 li
160.126 144.833 li
160.019 145.007 159.886 145.129 159.733 145.205 cv
159.581 145.282 159.387 145.323 159.163 145.323 cv
158.878 145.323 158.648 145.246 158.48 145.088 cv
158.312 144.93 158.231 144.717 158.231 144.446 cv
158.231 144.136 158.333 143.901 158.546 143.738 cv
158.755 143.58 159.066 143.499 159.484 143.499 cv
160.126 143.499 li
160.126 143.453 li
160.126 143.244 160.055 143.081 159.917 142.964 cv
159.78 142.852 159.586 142.791 159.336 142.791 cv
159.173 142.791 159.02 142.811 158.867 142.852 cv
158.715 142.892 158.572 142.949 158.434 143.02 cv
158.434 142.597 li
158.598 142.536 158.76 142.485 158.918 142.454 cv
159.076 142.424 159.229 142.403 159.382 142.403 cv
159.785 142.403 160.085 142.51 160.284 142.719 cv
160.482 142.928 160.584 143.244 160.584 143.667 cv
cp
159.673 143.855 mo
159.301 143.855 159.046 143.901 158.903 143.983 cv
158.76 144.069 158.689 144.212 158.689 144.416 cv
158.689 144.579 158.74 144.711 158.847 144.803 cv
158.954 144.9 159.102 144.945 159.285 144.945 cv
159.54 144.945 159.744 144.859 159.896 144.676 cv
160.049 144.497 160.126 144.258 160.126 143.957 cv
160.126 143.855 li
159.673 143.855 li
ef
161.481 141.542 mo
161.985 141.542 li
161.985 144.833 li
163.794 144.833 li
163.794 145.256 li
161.481 145.256 li
161.481 141.542 li
ef
164.867 141.955 mo
164.867 143.274 li
165.499 143.274 li
165.739 143.274 165.922 143.218 166.044 143.106 cv
166.166 142.994 166.233 142.831 166.233 142.612 cv
166.233 142.398 166.166 142.235 166.044 142.123 cv
165.922 142.011 165.739 141.955 165.499 141.955 cv
164.867 141.955 li
cp
166.126 143.514 mo
166.233 143.555 166.34 143.631 166.441 143.748 cv
166.543 143.87 166.645 144.034 166.747 144.242 cv
167.257 145.256 li
166.717 145.256 li
166.243 144.304 li
166.121 144.059 165.998 143.891 165.886 143.809 cv
165.769 143.728 165.611 143.687 165.412 143.687 cv
164.867 143.687 li
164.867 145.256 li
164.363 145.256 li
164.363 141.542 li
165.499 141.542 li
165.922 141.542 166.238 141.634 166.446 141.808 cv
166.655 141.986 166.762 142.256 166.762 142.612 cv
166.762 142.847 166.707 143.045 166.599 143.198 cv
166.487 143.351 166.33 143.458 166.126 143.514 cv
ef
167.347 141.542 mo
170.485 141.542 li
170.485 141.965 li
169.166 141.965 li
169.166 145.256 li
168.661 145.256 li
168.661 141.965 li
167.347 141.965 li
167.347 141.542 li
ef
173.782 141.828 mo
173.782 142.358 li
173.608 142.205 173.43 142.088 173.237 142.006 cv
173.043 141.93 172.844 141.889 172.63 141.889 cv
172.203 141.889 171.876 142.021 171.652 142.281 cv
171.428 142.541 171.316 142.913 171.316 143.402 cv
171.316 143.891 171.428 144.268 171.652 144.528 cv
171.876 144.788 172.203 144.915 172.63 144.915 cv
172.844 144.915 173.043 144.879 173.237 144.798 cv
173.43 144.721 173.608 144.604 173.782 144.446 cv
173.782 144.971 li
173.603 145.093 173.415 145.18 173.221 145.236 cv
173.028 145.292 172.819 145.323 172.6 145.323 cv
172.039 145.323 171.596 145.154 171.27 144.813 cv
170.944 144.472 170.786 144.003 170.786 143.402 cv
170.786 142.806 170.944 142.337 171.27 141.991 cv
171.596 141.649 172.039 141.476 172.6 141.476 cv
172.824 141.476 173.033 141.507 173.226 141.563 cv
173.42 141.624 173.608 141.711 173.782 141.828 cv
ef
139.788 152.73 mo
149.977 152.73 li
149.977 149.164 li
139.788 149.164 li
139.788 152.73 li
.476807 .101563 .0893555 0 cmyk
f
156.808 149.176 mo
156.808 149.664 li
156.614 149.573 156.436 149.506 156.268 149.461 cv
156.095 149.42 155.932 149.395 155.779 149.395 cv
155.504 149.395 155.29 149.451 155.142 149.552 cv
154.994 149.659 154.923 149.812 154.923 150.006 cv
154.923 150.169 154.969 150.296 155.071 150.377 cv
155.167 150.464 155.356 150.531 155.631 150.581 cv
155.937 150.643 li
156.308 150.714 156.584 150.842 156.762 151.02 cv
156.94 151.203 157.032 151.442 157.032 151.743 cv
157.032 152.105 156.91 152.375 156.671 152.558 cv
156.426 152.742 156.074 152.833 155.611 152.833 cv
155.432 152.833 155.244 152.813 155.045 152.777 cv
154.846 152.742 154.643 152.686 154.434 152.604 cv
154.434 152.084 li
154.638 152.201 154.836 152.288 155.03 152.344 cv
155.224 152.405 155.417 152.431 155.611 152.431 cv
155.896 152.431 156.115 152.375 156.273 152.263 cv
156.426 152.151 156.507 151.993 156.507 151.779 cv
156.507 151.595 156.451 151.452 156.339 151.351 cv
156.227 151.249 156.044 151.172 155.789 151.121 cv
155.483 151.06 li
155.106 150.989 154.836 150.872 154.668 150.709 cv
154.5 150.551 154.419 150.332 154.419 150.047 cv
154.419 149.72 154.531 149.461 154.765 149.272 cv
154.994 149.084 155.315 148.987 155.723 148.987 cv
155.896 148.987 156.069 149.002 156.253 149.033 cv
156.431 149.063 156.614 149.114 156.808 149.176 cv
0 0 0 1 cmyk
ef
157.813 149.053 mo
158.847 149.053 li
159.566 149.053 160.095 149.206 160.432 149.501 cv
160.768 149.802 160.936 150.27 160.936 150.908 cv
160.936 151.549 160.763 152.018 160.426 152.318 cv
160.09 152.619 159.56 152.767 158.847 152.767 cv
157.813 152.767 li
157.813 149.053 li
cp
158.317 149.466 mo
158.317 152.354 li
158.924 152.354 li
159.433 152.354 159.81 152.242 160.049 152.008 cv
160.284 151.774 160.406 151.407 160.406 150.908 cv
160.406 150.408 160.284 150.047 160.049 149.812 cv
159.81 149.583 159.433 149.466 158.924 149.466 cv
158.317 149.466 li
ef
162.701 149.053 mo
163.271 149.053 li
164.687 152.767 li
164.163 152.767 li
163.826 151.814 li
162.151 151.814 li
161.814 152.767 li
161.284 152.767 li
162.701 149.053 li
cp
162.986 149.547 mo
162.303 151.397 li
163.669 151.397 li
162.986 149.547 li
ef
165.236 149.053 mo
167.585 149.053 li
167.585 149.476 li
165.741 149.476 li
165.741 150.576 li
167.508 150.576 li
167.508 150.999 li
165.741 150.999 li
165.741 152.344 li
167.631 152.344 li
167.631 152.767 li
165.236 152.767 li
165.236 149.053 li
ef
139.788 160.207 mo
149.977 160.207 li
149.977 156.641 li
139.788 156.641 li
139.788 160.207 li
1 .841797 .237549 0 cmyk
f
157.363 156.762 mo
157.363 157.292 li
157.19 157.139 157.012 157.022 156.818 156.94 cv
156.624 156.864 156.426 156.823 156.212 156.823 cv
155.784 156.823 155.458 156.955 155.233 157.215 cv
155.01 157.475 154.898 157.847 154.898 158.336 cv
154.898 158.825 155.01 159.202 155.233 159.462 cv
155.458 159.722 155.784 159.849 156.212 159.849 cv
156.426 159.849 156.624 159.813 156.818 159.732 cv
157.012 159.655 157.19 159.538 157.363 159.38 cv
157.363 159.905 li
157.185 160.027 156.996 160.114 156.803 160.17 cv
156.609 160.226 156.4 160.256 156.181 160.256 cv
155.621 160.256 155.178 160.088 154.851 159.747 cv
154.526 159.406 154.367 158.937 154.367 158.336 cv
154.367 157.74 154.526 157.271 154.851 156.925 cv
155.178 156.583 155.621 156.41 156.181 156.41 cv
156.405 156.41 156.614 156.441 156.808 156.497 cv
157.001 156.558 157.19 156.645 157.363 156.762 cv
0 0 0 1 cmyk
ef
159.135 157.337 mo
159.532 157.337 159.843 157.47 160.072 157.725 cv
160.296 157.984 160.413 158.341 160.413 158.799 cv
160.413 159.258 160.296 159.615 160.072 159.869 cv
159.843 160.129 159.532 160.256 159.135 160.256 cv
158.732 160.256 158.416 160.129 158.192 159.869 cv
157.968 159.615 157.856 159.258 157.856 158.799 cv
157.856 158.341 157.968 157.984 158.192 157.725 cv
158.416 157.47 158.732 157.337 159.135 157.337 cv
cp
159.135 157.725 mo
158.89 157.725 158.696 157.821 158.554 158.015 cv
158.411 158.209 158.34 158.468 158.34 158.799 cv
158.34 159.136 158.406 159.395 158.549 159.589 cv
158.691 159.783 158.885 159.874 159.135 159.874 cv
159.379 159.874 159.573 159.783 159.716 159.589 cv
159.858 159.395 159.929 159.136 159.929 158.799 cv
159.929 158.474 159.858 158.209 159.716 158.015 cv
159.573 157.821 159.379 157.725 159.135 157.725 cv
ef
163.369 157.938 mo
163.481 157.735 163.618 157.587 163.776 157.485 cv
163.934 157.388 164.123 157.337 164.342 157.337 cv
164.627 157.337 164.851 157.439 165.009 157.643 cv
165.167 157.847 165.249 158.137 165.249 158.509 cv
165.249 160.19 li
164.79 160.19 li
164.79 158.524 li
164.79 158.259 164.739 158.061 164.648 157.928 cv
164.551 157.801 164.408 157.735 164.214 157.735 cv
163.975 157.735 163.787 157.816 163.649 157.974 cv
163.512 158.132 163.445 158.346 163.445 158.616 cv
163.445 160.19 li
162.987 160.19 li
162.987 158.524 li
162.987 158.259 162.936 158.061 162.844 157.928 cv
162.747 157.801 162.599 157.735 162.406 157.735 cv
162.172 157.735 161.983 157.816 161.846 157.974 cv
161.708 158.132 161.642 158.346 161.642 158.616 cv
161.642 160.19 li
161.183 160.19 li
161.183 157.404 li
161.642 157.404 li
161.642 157.837 li
161.744 157.668 161.871 157.541 162.019 157.459 cv
162.161 157.378 162.335 157.337 162.539 157.337 cv
162.742 157.337 162.91 157.388 163.053 157.49 cv
163.196 157.592 163.298 157.745 163.369 157.938 cv
ef
166.62 157.826 mo
166.712 157.663 166.834 157.541 166.982 157.459 cv
167.129 157.378 167.308 157.337 167.511 157.337 cv
167.848 157.337 168.123 157.475 168.337 157.74 cv
168.546 158.01 168.653 158.361 168.653 158.799 cv
168.653 159.238 168.546 159.594 168.337 159.859 cv
168.123 160.124 167.848 160.256 167.511 160.256 cv
167.308 160.256 167.129 160.216 166.982 160.139 cv
166.834 160.063 166.712 159.941 166.62 159.772 cv
166.62 160.19 li
166.161 160.19 li
166.161 156.318 li
166.62 156.318 li
166.62 157.826 li
cp
168.179 158.799 mo
168.179 158.463 168.107 158.204 167.97 158.01 cv
167.827 157.816 167.639 157.72 167.399 157.72 cv
167.155 157.72 166.966 157.816 166.829 158.01 cv
166.686 158.204 166.62 158.463 166.62 158.799 cv
166.62 159.136 166.686 159.401 166.829 159.594 cv
166.966 159.788 167.155 159.879 167.399 159.879 cv
167.639 159.879 167.827 159.788 167.97 159.594 cv
168.107 159.401 168.179 159.136 168.179 158.799 cv
ef
172.21 156.762 mo
172.21 157.292 li
172.037 157.139 171.858 157.022 171.665 156.94 cv
171.471 156.864 171.273 156.823 171.058 156.823 cv
170.631 156.823 170.305 156.955 170.08 157.215 cv
169.856 157.475 169.744 157.847 169.744 158.336 cv
169.744 158.825 169.856 159.202 170.08 159.462 cv
170.305 159.722 170.631 159.849 171.058 159.849 cv
171.273 159.849 171.471 159.813 171.665 159.732 cv
171.858 159.655 172.037 159.538 172.21 159.38 cv
172.21 159.905 li
172.032 160.027 171.843 160.114 171.649 160.17 cv
171.456 160.226 171.247 160.256 171.028 160.256 cv
170.467 160.256 170.024 160.088 169.698 159.747 cv
169.372 159.406 169.214 158.937 169.214 158.336 cv
169.214 157.74 169.372 157.271 169.698 156.925 cv
170.024 156.583 170.467 156.41 171.028 156.41 cv
171.252 156.41 171.461 156.441 171.655 156.497 cv
171.848 156.558 172.037 156.645 172.21 156.762 cv
ef
173.009 156.476 mo
173.687 156.476 li
175.332 159.584 li
175.332 156.476 li
175.821 156.476 li
175.821 160.19 li
175.144 160.19 li
173.498 157.083 li
173.498 160.19 li
173.009 160.19 li
173.009 156.476 li
ef
139.788 167.683 mo
149.977 167.683 li
149.977 164.118 li
139.788 164.118 li
139.788 167.683 li
.673828 0 .941406 0 cmyk
f
154.582 163.987 mo
155.33 163.987 li
156.278 166.514 li
157.231 163.987 li
157.98 163.987 li
157.98 167.701 li
157.491 167.701 li
157.491 164.44 li
156.533 166.988 li
156.028 166.988 li
155.071 164.44 li
155.071 167.701 li
154.582 167.701 li
154.582 163.987 li
0 0 0 1 cmyk
ef
158.948 163.987 mo
159.453 163.987 li
159.453 167.278 li
161.261 167.278 li
161.261 167.701 li
158.948 167.701 li
158.948 163.987 li
ef
161.743 163.987 mo
162.879 163.987 li
163.292 163.987 163.607 164.084 163.821 164.272 cv
164.035 164.461 164.142 164.736 164.142 165.098 cv
164.142 165.465 164.035 165.745 163.821 165.928 cv
163.607 166.117 163.292 166.208 162.879 166.208 cv
162.247 166.208 li
162.247 167.701 li
161.743 167.701 li
161.743 163.987 li
cp
162.247 164.4 mo
162.247 165.796 li
162.879 165.796 li
163.113 165.796 163.292 165.74 163.419 165.617 cv
163.546 165.495 163.613 165.322 163.613 165.098 cv
163.613 164.874 163.546 164.706 163.419 164.583 cv
163.292 164.461 163.113 164.4 162.879 164.4 cv
162.247 164.4 li
ef
164.637 166.101 mo
165.977 166.101 li
165.977 166.509 li
164.637 166.509 li
164.637 166.101 li
ef
167.679 167.701 mo
166.262 163.987 li
166.787 163.987 li
167.964 167.115 li
169.141 163.987 li
169.666 163.987 li
168.249 167.701 li
167.679 167.701 li
ef
171.172 163.987 mo
171.742 163.987 li
173.159 167.701 li
172.634 167.701 li
172.298 166.748 li
170.622 166.748 li
170.285 167.701 li
169.756 167.701 li
171.172 163.987 li
cp
171.457 164.481 mo
170.774 166.331 li
172.14 166.331 li
171.457 164.481 li
ef
173.708 163.987 mo
176.056 163.987 li
176.056 164.41 li
174.212 164.41 li
174.212 165.51 li
175.98 165.51 li
175.98 165.933 li
174.212 165.933 li
174.212 167.278 li
176.102 167.278 li
176.102 167.701 li
173.708 167.701 li
173.708 163.987 li
ef
139.788 175.16 mo
149.977 175.16 li
149.977 171.594 li
139.788 171.594 li
139.788 175.16 li
.163086 .976563 .724609 0 cmyk
f
156.808 171.533 mo
156.808 172.022 li
156.614 171.93 156.436 171.864 156.268 171.818 cv
156.095 171.777 155.932 171.752 155.779 171.752 cv
155.504 171.752 155.29 171.808 155.142 171.91 cv
154.994 172.017 154.923 172.17 154.923 172.363 cv
154.923 172.526 154.969 172.654 155.071 172.735 cv
155.167 172.822 155.356 172.888 155.631 172.939 cv
155.937 173 li
156.308 173.071 156.584 173.199 156.762 173.377 cv
156.94 173.56 157.032 173.8 157.032 174.1 cv
157.032 174.462 156.91 174.732 156.671 174.915 cv
156.426 175.099 156.074 175.19 155.611 175.19 cv
155.432 175.19 155.244 175.17 155.045 175.134 cv
154.846 175.099 154.643 175.043 154.434 174.961 cv
154.434 174.442 li
154.638 174.559 154.836 174.645 155.03 174.701 cv
155.224 174.763 155.417 174.788 155.611 174.788 cv
155.896 174.788 156.115 174.732 156.273 174.62 cv
156.426 174.508 156.507 174.35 156.507 174.136 cv
156.507 173.952 156.451 173.81 156.339 173.708 cv
156.227 173.606 156.044 173.53 155.789 173.479 cv
155.483 173.418 li
155.106 173.346 154.836 173.229 154.668 173.066 cv
154.5 172.908 154.419 172.689 154.419 172.404 cv
154.419 172.078 154.531 171.818 154.765 171.629 cv
154.994 171.441 155.315 171.344 155.723 171.344 cv
155.896 171.344 156.069 171.359 156.253 171.39 cv
156.431 171.421 156.614 171.472 156.808 171.533 cv
0 0 0 1 cmyk
ef
157.303 171.41 mo
160.442 171.41 li
160.442 171.833 li
159.122 171.833 li
159.122 175.124 li
158.618 175.124 li
158.618 171.833 li
157.303 171.833 li
157.303 171.41 li
ef
161.827 175.124 mo
160.411 171.41 li
160.936 171.41 li
162.113 174.538 li
163.289 171.41 li
163.814 171.41 li
162.398 175.124 li
161.827 175.124 li
ef
165.321 171.41 mo
165.891 171.41 li
167.308 175.124 li
166.783 175.124 li
166.446 174.172 li
164.771 174.172 li
164.434 175.124 li
163.905 175.124 li
165.321 171.41 li
cp
165.606 171.904 mo
164.923 173.754 li
166.289 173.754 li
165.606 171.904 li
ef
167.856 171.41 mo
170.205 171.41 li
170.205 171.833 li
168.36 171.833 li
168.36 172.934 li
170.128 172.934 li
170.128 173.356 li
168.36 173.356 li
168.36 174.701 li
170.251 174.701 li
170.251 175.124 li
167.856 175.124 li
167.856 171.41 li
ef
173.827 171.258 mo
173.603 171.645 173.44 172.022 173.333 172.394 cv
173.221 172.766 173.17 173.143 173.17 173.525 cv
173.17 173.912 173.221 174.289 173.333 174.661 cv
173.44 175.038 173.603 175.409 173.827 175.792 cv
173.43 175.792 li
173.18 175.399 172.991 175.022 172.869 174.645 cv
172.747 174.268 172.686 173.897 172.686 173.525 cv
172.686 173.158 172.747 172.786 172.869 172.409 cv
172.991 172.032 173.175 171.65 173.43 171.258 cv
173.827 171.258 li
ef
175.728 172.271 mo
176.125 172.271 176.436 172.404 176.665 172.659 cv
176.889 172.918 177.007 173.275 177.007 173.733 cv
177.007 174.192 176.889 174.549 176.665 174.803 cv
176.436 175.063 176.125 175.19 175.728 175.19 cv
175.325 175.19 175.01 175.063 174.785 174.803 cv
174.561 174.549 174.449 174.192 174.449 173.733 cv
174.449 173.275 174.561 172.918 174.785 172.659 cv
175.01 172.404 175.325 172.271 175.728 172.271 cv
cp
175.728 172.659 mo
175.483 172.659 175.29 172.755 175.147 172.949 cv
175.005 173.143 174.933 173.402 174.933 173.733 cv
174.933 174.07 174.999 174.329 175.142 174.523 cv
175.285 174.717 175.478 174.808 175.728 174.808 cv
175.973 174.808 176.166 174.717 176.309 174.523 cv
176.451 174.329 176.523 174.07 176.523 173.733 cv
176.523 173.408 176.451 173.143 176.309 172.949 cv
176.166 172.755 175.973 172.659 175.728 172.659 cv
ef
178.898 172.271 mo
178.898 172.271 li
cp
177.746 174.024 mo
177.746 172.338 li
178.205 172.338 li
178.205 174.009 li
178.205 174.274 178.255 174.467 178.357 174.6 cv
178.459 174.732 178.612 174.798 178.821 174.798 cv
179.066 174.798 179.264 174.722 179.407 174.564 cv
179.549 174.406 179.621 174.192 179.621 173.917 cv
179.621 172.338 li
180.079 172.338 li
180.079 175.124 li
179.621 175.124 li
179.621 174.696 li
179.509 174.87 179.376 174.992 179.233 175.073 cv
179.086 175.15 178.918 175.19 178.724 175.19 cv
178.403 175.19 178.159 175.094 177.996 174.895 cv
177.828 174.701 177.746 174.411 177.746 174.024 cv
ef
182.638 172.766 mo
182.587 172.735 182.531 172.715 182.47 172.699 cv
182.409 172.689 182.343 172.679 182.271 172.679 cv
182.012 172.679 181.813 172.766 181.675 172.934 cv
181.533 173.102 181.466 173.341 181.466 173.657 cv
181.466 175.124 li
181.008 175.124 li
181.008 172.338 li
181.466 172.338 li
181.466 172.771 li
181.558 172.602 181.685 172.475 181.838 172.394 cv
181.991 172.312 182.18 172.271 182.404 172.271 cv
182.434 172.271 182.47 172.277 182.511 172.277 cv
182.546 172.282 182.587 172.287 182.638 172.297 cv
182.638 172.766 li
ef
184.897 172.419 mo
184.897 172.852 li
184.765 172.791 184.632 172.74 184.495 172.704 cv
184.352 172.674 184.209 172.654 184.062 172.654 cv
183.832 172.654 183.659 172.689 183.547 172.761 cv
183.435 172.832 183.379 172.934 183.379 173.071 cv
183.379 173.178 183.42 173.26 183.501 173.321 cv
183.583 173.382 183.746 173.443 183.991 173.494 cv
184.148 173.53 li
184.474 173.601 184.703 173.703 184.841 173.825 cv
184.974 173.952 185.045 174.131 185.045 174.355 cv
185.045 174.615 184.943 174.818 184.739 174.967 cv
184.535 175.119 184.25 175.19 183.894 175.19 cv
183.741 175.19 183.588 175.175 183.425 175.15 cv
183.262 175.124 183.094 175.084 182.916 175.022 cv
182.916 174.549 li
183.083 174.64 183.252 174.706 183.415 174.747 cv
183.578 174.793 183.741 174.813 183.904 174.813 cv
184.118 174.813 184.286 174.778 184.403 174.706 cv
184.515 174.635 184.576 174.528 184.576 174.391 cv
184.576 174.268 184.53 174.172 184.449 174.106 cv
184.367 174.039 184.184 173.973 183.899 173.912 cv
183.741 173.876 li
183.455 173.815 183.247 173.723 183.124 173.601 cv
182.997 173.479 182.936 173.311 182.936 173.092 cv
182.936 172.832 183.028 172.628 183.211 172.485 cv
183.394 172.343 183.659 172.271 184.006 172.271 cv
184.174 172.271 184.332 172.287 184.485 172.312 cv
184.632 172.338 184.77 172.373 184.897 172.419 cv
ef
185.668 171.258 mo
186.065 171.258 li
186.31 171.65 186.498 172.032 186.621 172.409 cv
186.743 172.786 186.809 173.158 186.809 173.525 cv
186.809 173.897 186.743 174.268 186.621 174.645 cv
186.498 175.022 186.31 175.399 186.065 175.792 cv
185.668 175.792 li
185.887 175.409 186.05 175.038 186.162 174.661 cv
186.269 174.289 186.325 173.912 186.325 173.525 cv
186.325 173.143 186.269 172.766 186.162 172.394 cv
186.05 172.022 185.887 171.645 185.668 171.258 cv
ef
1 /0 /CSD get_res sepcs
1 sep
NOAXUK+CMR9*1 [8.96638 0 0 -8.96638 0 0 ]msf128.173 246.217 mo(\(e\)RMSEonTaxiNYC)[3.60001 4.08002 6.95987 6.83997 8.39993 5.1601 9.24002 4.56003 8.27988 5.88013 4.56003 4.92007 2.52002 6.96002 6.96005 0 ]xsh238.573 235.297 mo
356.473 235.297 li
356.473 117.397 li
238.573 117.397 li
238.573 235.297 li
0 0 0 0 cmyk
f
253.31 220.559 mo
344.683 220.559 li
344.683 131.545 li
253.31 131.545 li
253.31 220.559 li
f
257.464 220.559 mo
259.771 220.559 li
259.771 209.333 li
257.464 209.333 li
257.464 220.559 li
0 .648438 .892578 0 cmyk
f
274.769 220.559 mo
277.077 220.559 li
277.077 201.667 li
274.769 201.667 li
274.769 220.559 li
f
292.074 220.559 mo
294.382 220.559 li
294.382 194.007 li
292.074 194.007 li
292.074 220.559 li
f
309.38 220.559 mo
311.687 220.559 li
311.687 188.131 li
309.38 188.131 li
309.38 220.559 li
f
326.685 220.559 mo
328.992 220.559 li
328.992 168.479 li
326.685 168.479 li
326.685 220.559 li
f
259.771 220.559 mo
262.078 220.559 li
262.078 213.001 li
259.771 213.001 li
259.771 220.559 li
.239014 .333252 0 0 cmyk
f
277.077 220.559 mo
279.384 220.559 li
279.384 206.393 li
277.077 206.393 li
277.077 220.559 li
f
294.382 220.559 mo
296.689 220.559 li
296.689 197.987 li
294.382 197.987 li
294.382 220.559 li
f
311.687 220.559 mo
313.995 220.559 li
313.995 185.498 li
311.687 185.498 li
311.687 220.559 li
f
328.992 220.559 mo
331.3 220.559 li
331.3 138.018 li
328.992 138.018 li
328.992 220.559 li
f
262.078 220.559 mo
264.386 220.559 li
264.386 205.958 li
262.078 205.958 li
262.078 220.559 li
.476807 .101563 .0893555 0 cmyk
f
279.384 220.559 mo
281.691 220.559 li
281.691 202.415 li
279.384 202.415 li
279.384 220.559 li
f
296.689 220.559 mo
298.997 220.559 li
298.997 188.12 li
296.689 188.12 li
296.689 220.559 li
f
313.995 220.559 mo
316.302 220.559 li
316.302 182.508 li
313.995 182.508 li
313.995 220.559 li
f
331.3 220.559 mo
333.608 220.559 li
333.608 180.9 li
331.3 180.9 li
331.3 220.559 li
f
264.386 220.559 mo
266.693 220.559 li
266.693 211.145 li
264.386 211.145 li
264.386 220.559 li
1 .841797 .237549 0 cmyk
f
281.691 220.559 mo
283.999 220.559 li
283.999 204.526 li
281.691 204.526 li
281.691 220.559 li
f
298.997 220.559 mo
301.304 220.559 li
301.304 197.925 li
298.997 197.925 li
298.997 220.559 li
f
316.302 220.559 mo
318.609 220.559 li
318.609 190.801 li
316.302 190.801 li
316.302 220.559 li
f
333.608 220.559 mo
335.915 220.559 li
335.915 179.433 li
333.608 179.433 li
333.608 220.559 li
f
266.693 220.559 mo
269.001 220.559 li
269.001 212.386 li
266.693 212.386 li
266.693 220.559 li
.673828 0 .941406 0 cmyk
f
283.999 220.559 mo
286.306 220.559 li
286.306 203.42 li
283.999 203.42 li
283.999 220.559 li
f
301.304 220.559 mo
303.611 220.559 li
303.611 196.881 li
301.304 196.881 li
301.304 220.559 li
f
318.609 220.559 mo
320.917 220.559 li
320.917 188.342 li
318.609 188.342 li
318.609 220.559 li
f
335.915 220.559 mo
338.223 220.559 li
338.223 176.279 li
335.915 176.279 li
335.915 220.559 li
f
269.001 220.559 mo
271.308 220.559 li
271.308 213.233 li
269.001 213.233 li
269.001 220.559 li
.163086 .976563 .724609 0 cmyk
f
286.306 220.559 mo
288.614 220.559 li
288.614 207.416 li
286.306 207.416 li
286.306 220.559 li
f
303.611 220.559 mo
305.919 220.559 li
305.919 200.295 li
303.611 200.295 li
303.611 220.559 li
f
320.917 220.559 mo
323.224 220.559 li
323.224 195.14 li
320.917 195.14 li
320.917 220.559 li
f
338.223 220.559 mo
340.53 220.559 li
340.53 182.357 li
338.223 182.357 li
338.223 220.559 li
f
264.386 220.559 mo
264.386 219.286 li
0 0 0 1 cmyk
f
.291111 lw
1 lj
264.386 220.559 mo
264.386 219.286 li
@
261.737 225.267 mo
262.557 225.267 li
262.557 222.435 li
261.666 222.613 li
261.666 222.155 li
262.552 221.976 li
263.056 221.976 li
263.056 225.267 li
263.876 225.267 li
263.876 225.69 li
261.737 225.69 li
261.737 225.267 li
ef
266.044 221.91 mo
266.457 221.91 266.772 222.078 266.996 222.404 cv
267.216 222.736 267.328 223.215 267.328 223.836 cv
267.328 224.463 267.216 224.942 266.996 225.267 cv
266.772 225.593 266.457 225.756 266.044 225.756 cv
265.626 225.756 265.305 225.593 265.086 225.267 cv
264.867 224.942 264.76 224.463 264.76 223.836 cv
264.76 223.215 264.867 222.736 265.086 222.404 cv
265.305 222.078 265.626 221.91 266.044 221.91 cv
cp
266.044 222.308 mo
265.784 222.308 265.591 222.435 265.458 222.69 cv
265.325 222.944 265.264 223.326 265.264 223.836 cv
265.264 224.345 265.325 224.727 265.458 224.982 cv
265.591 225.237 265.784 225.364 266.044 225.364 cv
266.303 225.364 266.497 225.237 266.63 224.982 cv
266.757 224.727 266.823 224.345 266.823 223.836 cv
266.823 223.326 266.757 222.944 266.63 222.69 cv
266.497 222.435 266.303 222.308 266.044 222.308 cv
ef
281.691 220.559 mo
281.691 219.286 li
f
281.691 220.559 mo
281.691 219.286 li
@
280.553 223.688 mo
280.792 223.739 280.981 223.846 281.113 224.009 cv
281.246 224.172 281.317 224.376 281.317 224.61 cv
281.317 224.977 281.189 225.262 280.94 225.461 cv
280.685 225.66 280.328 225.756 279.865 225.756 cv
279.707 225.756 279.544 225.741 279.381 225.711 cv
279.218 225.685 279.045 225.639 278.871 225.578 cv
278.871 225.094 li
279.009 225.176 279.162 225.237 279.33 225.277 cv
279.493 225.318 279.666 225.339 279.849 225.339 cv
280.166 225.339 280.405 225.277 280.568 225.155 cv
280.731 225.033 280.817 224.85 280.817 224.61 cv
280.817 224.396 280.741 224.223 280.588 224.101 cv
280.435 223.979 280.221 223.912 279.946 223.912 cv
279.514 223.912 li
279.514 223.5 li
279.967 223.5 li
280.211 223.5 280.4 223.454 280.532 223.352 cv
280.665 223.255 280.731 223.113 280.731 222.924 cv
280.731 222.736 280.66 222.588 280.527 222.486 cv
280.39 222.384 280.196 222.333 279.946 222.333 cv
279.809 222.333 279.661 222.348 279.503 222.379 cv
279.345 222.409 279.172 222.455 278.983 222.517 cv
278.983 222.068 li
279.172 222.017 279.35 221.976 279.519 221.951 cv
279.682 221.926 279.839 221.91 279.992 221.91 cv
280.369 221.91 280.67 221.997 280.894 222.17 cv
281.118 222.343 281.23 222.577 281.23 222.873 cv
281.23 223.077 281.169 223.25 281.052 223.393 cv
280.935 223.535 280.767 223.637 280.553 223.688 cv
ef
283.336 221.91 mo
283.748 221.91 284.064 222.078 284.289 222.404 cv
284.507 222.736 284.619 223.215 284.619 223.836 cv
284.619 224.463 284.507 224.942 284.289 225.267 cv
284.064 225.593 283.748 225.756 283.336 225.756 cv
282.918 225.756 282.597 225.593 282.378 225.267 cv
282.159 224.942 282.052 224.463 282.052 223.836 cv
282.052 223.215 282.159 222.736 282.378 222.404 cv
282.597 222.078 282.918 221.91 283.336 221.91 cv
cp
283.336 222.308 mo
283.076 222.308 282.882 222.435 282.75 222.69 cv
282.617 222.944 282.556 223.326 282.556 223.836 cv
282.556 224.345 282.617 224.727 282.75 224.982 cv
282.882 225.237 283.076 225.364 283.336 225.364 cv
283.596 225.364 283.789 225.237 283.922 224.982 cv
284.049 224.727 284.115 224.345 284.115 223.836 cv
284.115 223.326 284.049 222.944 283.922 222.69 cv
283.789 222.435 283.596 222.308 283.336 222.308 cv
ef
298.997 220.559 mo
298.997 219.286 li
f
298.997 220.559 mo
298.997 219.286 li
@
296.326 221.976 mo
298.298 221.976 li
298.298 222.399 li
296.785 222.399 li
296.785 223.311 li
296.857 223.286 296.933 223.265 297.004 223.255 cv
297.075 223.245 297.152 223.235 297.223 223.235 cv
297.636 223.235 297.962 223.352 298.207 223.576 cv
298.451 223.805 298.573 224.111 298.573 224.498 cv
298.573 224.901 298.446 225.211 298.196 225.431 cv
297.947 225.65 297.595 225.756 297.147 225.756 cv
296.989 225.756 296.831 225.741 296.668 225.721 cv
296.505 225.695 296.342 225.66 296.169 225.604 cv
296.169 225.099 li
296.316 225.181 296.469 225.242 296.632 225.283 cv
296.79 225.324 296.958 225.339 297.137 225.339 cv
297.422 225.339 297.651 225.267 297.819 225.115 cv
297.982 224.962 298.069 224.758 298.069 224.498 cv
298.069 224.243 297.982 224.04 297.819 223.887 cv
297.651 223.734 297.422 223.658 297.137 223.658 cv
297.004 223.658 296.867 223.673 296.734 223.704 cv
296.601 223.734 296.464 223.78 296.326 223.841 cv
296.326 221.976 li
ef
300.628 221.91 mo
301.041 221.91 301.356 222.078 301.58 222.404 cv
301.799 222.736 301.912 223.215 301.912 223.836 cv
301.912 224.463 301.799 224.942 301.58 225.267 cv
301.356 225.593 301.041 225.756 300.628 225.756 cv
300.21 225.756 299.889 225.593 299.67 225.267 cv
299.451 224.942 299.344 224.463 299.344 223.836 cv
299.344 223.215 299.451 222.736 299.67 222.404 cv
299.889 222.078 300.21 221.91 300.628 221.91 cv
cp
300.628 222.308 mo
300.368 222.308 300.174 222.435 300.042 222.69 cv
299.909 222.944 299.848 223.326 299.848 223.836 cv
299.848 224.345 299.909 224.727 300.042 224.982 cv
300.174 225.237 300.368 225.364 300.628 225.364 cv
300.887 225.364 301.081 225.237 301.214 224.982 cv
301.341 224.727 301.407 224.345 301.407 223.836 cv
301.407 223.326 301.341 222.944 301.214 222.69 cv
301.081 222.435 300.887 222.308 300.628 222.308 cv
ef
316.302 220.559 mo
316.302 219.286 li
f
316.302 220.559 mo
316.302 219.286 li
@
313.486 221.976 mo
315.875 221.976 li
315.875 222.19 li
314.525 225.69 li
314.001 225.69 li
315.269 222.399 li
313.486 222.399 li
313.486 221.976 li
ef
317.92 221.91 mo
318.332 221.91 318.648 222.078 318.873 222.404 cv
319.091 222.736 319.203 223.215 319.203 223.836 cv
319.203 224.463 319.091 224.942 318.873 225.267 cv
318.648 225.593 318.332 225.756 317.92 225.756 cv
317.502 225.756 317.181 225.593 316.962 225.267 cv
316.743 224.942 316.636 224.463 316.636 223.836 cv
316.636 223.215 316.743 222.736 316.962 222.404 cv
317.181 222.078 317.502 221.91 317.92 221.91 cv
cp
317.92 222.308 mo
317.66 222.308 317.466 222.435 317.334 222.69 cv
317.201 222.944 317.14 223.326 317.14 223.836 cv
317.14 224.345 317.201 224.727 317.334 224.982 cv
317.466 225.237 317.66 225.364 317.92 225.364 cv
318.18 225.364 318.373 225.237 318.506 224.982 cv
318.633 224.727 318.699 224.345 318.699 223.836 cv
318.699 223.326 318.633 222.944 318.506 222.69 cv
318.373 222.435 318.18 222.308 317.92 222.308 cv
ef
333.608 220.559 mo
333.608 219.286 li
f
333.608 220.559 mo
333.608 219.286 li
@
331.919 224.04 mo
332.143 224.04 332.322 223.963 332.454 223.81 cv
332.587 223.658 332.653 223.443 332.653 223.174 cv
332.653 222.909 332.587 222.695 332.454 222.542 cv
332.322 222.389 332.143 222.308 331.919 222.308 cv
331.695 222.308 331.517 222.389 331.384 222.542 cv
331.252 222.695 331.186 222.909 331.186 223.174 cv
331.186 223.443 331.252 223.658 331.384 223.81 cv
331.517 223.963 331.695 224.04 331.919 224.04 cv
cp
330.921 225.614 mo
330.921 225.155 li
331.043 225.217 331.17 225.262 331.303 225.293 cv
331.43 225.324 331.558 225.339 331.685 225.339 cv
332.011 225.339 332.266 225.232 332.439 225.008 cv
332.612 224.783 332.714 224.447 332.744 223.989 cv
332.642 224.131 332.52 224.243 332.378 224.32 cv
332.23 224.396 332.067 224.432 331.889 224.432 cv
331.512 224.432 331.216 224.32 331.002 224.096 cv
330.788 223.872 330.681 223.566 330.681 223.174 cv
330.681 222.797 330.793 222.491 331.017 222.257 cv
331.242 222.027 331.542 221.91 331.919 221.91 cv
332.347 221.91 332.678 222.078 332.903 222.404 cv
333.126 222.736 333.244 223.215 333.244 223.836 cv
333.244 224.427 333.101 224.89 332.826 225.237 cv
332.546 225.583 332.174 225.756 331.705 225.756 cv
331.578 225.756 331.451 225.741 331.323 225.721 cv
331.191 225.701 331.058 225.665 330.921 225.614 cv
ef
335.212 221.91 mo
335.624 221.91 335.94 222.078 336.164 222.404 cv
336.383 222.736 336.496 223.215 336.496 223.836 cv
336.496 224.463 336.383 224.942 336.164 225.267 cv
335.94 225.593 335.624 225.756 335.212 225.756 cv
334.794 225.756 334.473 225.593 334.254 225.267 cv
334.035 224.942 333.928 224.463 333.928 223.836 cv
333.928 223.215 334.035 222.736 334.254 222.404 cv
334.473 222.078 334.794 221.91 335.212 221.91 cv
cp
335.212 222.308 mo
334.952 222.308 334.758 222.435 334.626 222.69 cv
334.493 222.944 334.432 223.326 334.432 223.836 cv
334.432 224.345 334.493 224.727 334.626 224.982 cv
334.758 225.237 334.952 225.364 335.212 225.364 cv
335.471 225.364 335.665 225.237 335.798 224.982 cv
335.925 224.727 335.991 224.345 335.991 223.836 cv
335.991 223.326 335.925 222.944 335.798 222.69 cv
335.665 222.435 335.471 222.308 335.212 222.308 cv
ef
278.11 228.352 mo
278.859 228.352 li
279.807 230.879 li
280.759 228.352 li
281.508 228.352 li
281.508 232.066 li
281.019 232.066 li
281.019 228.805 li
280.062 231.352 li
279.557 231.352 li
278.599 228.805 li
278.599 232.066 li
278.11 232.066 li
278.11 228.352 li
ef
282.457 228.194 mo
282.915 228.194 li
282.915 228.775 li
282.457 228.775 li
282.457 228.194 li
cp
282.457 229.279 mo
282.915 229.279 li
282.915 232.066 li
282.457 232.066 li
282.457 229.279 li
ef
285.632 229.361 mo
285.632 229.793 li
285.499 229.733 285.367 229.681 285.23 229.646 cv
285.087 229.615 284.944 229.595 284.796 229.595 cv
284.567 229.595 284.394 229.631 284.282 229.702 cv
284.17 229.773 284.114 229.875 284.114 230.013 cv
284.114 230.119 284.155 230.201 284.236 230.262 cv
284.317 230.323 284.48 230.384 284.725 230.435 cv
284.883 230.471 li
285.209 230.542 285.438 230.644 285.576 230.767 cv
285.708 230.894 285.78 231.072 285.78 231.296 cv
285.78 231.556 285.678 231.76 285.474 231.908 cv
285.27 232.061 284.985 232.132 284.628 232.132 cv
284.475 232.132 284.323 232.117 284.16 232.091 cv
283.996 232.066 283.828 232.025 283.65 231.964 cv
283.65 231.49 li
283.818 231.582 283.986 231.648 284.149 231.689 cv
284.312 231.734 284.475 231.755 284.639 231.755 cv
284.852 231.755 285.021 231.719 285.138 231.648 cv
285.25 231.577 285.311 231.47 285.311 231.332 cv
285.311 231.21 285.265 231.113 285.183 231.047 cv
285.102 230.981 284.919 230.914 284.633 230.853 cv
284.475 230.817 li
284.19 230.756 283.981 230.665 283.859 230.542 cv
283.732 230.42 283.671 230.252 283.671 230.033 cv
283.671 229.773 283.762 229.569 283.946 229.427 cv
284.129 229.284 284.394 229.213 284.74 229.213 cv
284.908 229.213 285.066 229.228 285.219 229.254 cv
285.367 229.279 285.505 229.315 285.632 229.361 cv
ef
288.252 229.361 mo
288.252 229.793 li
288.119 229.733 287.987 229.681 287.849 229.646 cv
287.707 229.615 287.564 229.595 287.416 229.595 cv
287.187 229.595 287.014 229.631 286.902 229.702 cv
286.79 229.773 286.734 229.875 286.734 230.013 cv
286.734 230.119 286.774 230.201 286.856 230.262 cv
286.937 230.323 287.101 230.384 287.345 230.435 cv
287.503 230.471 li
287.829 230.542 288.058 230.644 288.196 230.767 cv
288.328 230.894 288.399 231.072 288.399 231.296 cv
288.399 231.556 288.298 231.76 288.094 231.908 cv
287.89 232.061 287.605 232.132 287.248 232.132 cv
287.096 232.132 286.942 232.117 286.78 232.091 cv
286.617 232.066 286.448 232.025 286.27 231.964 cv
286.27 231.49 li
286.438 231.582 286.607 231.648 286.769 231.689 cv
286.932 231.734 287.096 231.755 287.258 231.755 cv
287.473 231.755 287.641 231.719 287.758 231.648 cv
287.87 231.577 287.931 231.47 287.931 231.332 cv
287.931 231.21 287.885 231.113 287.803 231.047 cv
287.722 230.981 287.539 230.914 287.253 230.853 cv
287.096 230.817 li
286.81 230.756 286.601 230.665 286.479 230.542 cv
286.351 230.42 286.291 230.252 286.291 230.033 cv
286.291 229.773 286.382 229.569 286.566 229.427 cv
286.749 229.284 287.014 229.213 287.36 229.213 cv
287.528 229.213 287.686 229.228 287.839 229.254 cv
287.987 229.279 288.124 229.315 288.252 229.361 cv
ef
289.181 228.194 mo
289.64 228.194 li
289.64 228.775 li
289.181 228.775 li
289.181 228.194 li
cp
289.181 229.279 mo
289.64 229.279 li
289.64 232.066 li
289.181 232.066 li
289.181 229.279 li
ef
292.896 230.384 mo
292.896 232.066 li
292.438 232.066 li
292.438 230.4 li
292.438 230.135 292.382 229.941 292.28 229.809 cv
292.178 229.676 292.025 229.61 291.822 229.61 cv
291.572 229.61 291.378 229.692 291.236 229.85 cv
291.093 230.008 291.022 230.222 291.022 230.492 cv
291.022 232.066 li
290.563 232.066 li
290.563 229.279 li
291.022 229.279 li
291.022 229.712 li
291.129 229.549 291.256 229.422 291.409 229.34 cv
291.557 229.259 291.73 229.213 291.923 229.213 cv
292.239 229.213 292.484 229.315 292.647 229.513 cv
292.81 229.712 292.896 230.002 292.896 230.384 cv
ef
296.102 231.719 mo
296.102 232.188 295.996 232.54 295.787 232.774 cv
295.573 233.003 295.251 233.12 294.819 233.12 cv
294.656 233.12 294.508 233.105 294.365 233.084 cv
294.223 233.059 294.08 233.024 293.948 232.972 cv
293.948 232.529 li
294.08 232.601 294.212 232.651 294.345 232.687 cv
294.477 232.723 294.61 232.743 294.747 232.743 cv
295.043 232.743 295.267 232.662 295.42 232.509 cv
295.567 232.351 295.644 232.117 295.644 231.801 cv
295.644 231.577 li
295.547 231.74 295.425 231.862 295.277 231.943 cv
295.129 232.025 294.956 232.066 294.752 232.066 cv
294.406 232.066 294.131 231.938 293.922 231.679 cv
293.713 231.418 293.611 231.072 293.611 230.639 cv
293.611 230.211 293.713 229.865 293.922 229.605 cv
294.131 229.345 294.406 229.213 294.752 229.213 cv
294.956 229.213 295.129 229.254 295.277 229.335 cv
295.425 229.417 295.547 229.539 295.644 229.702 cv
295.644 229.279 li
296.102 229.279 li
296.102 231.719 li
cp
295.644 230.639 mo
295.644 230.313 295.573 230.053 295.44 229.87 cv
295.303 229.686 295.109 229.595 294.864 229.595 cv
294.62 229.595 294.426 229.686 294.289 229.87 cv
294.151 230.053 294.085 230.313 294.085 230.639 cv
294.085 230.97 294.151 231.225 294.289 231.408 cv
294.426 231.592 294.62 231.684 294.864 231.684 cv
295.109 231.684 295.303 231.592 295.44 231.408 cv
295.573 231.225 295.644 230.97 295.644 230.639 cv
ef
299.225 228.765 mo
299.225 230.084 li
299.857 230.084 li
300.096 230.084 300.28 230.028 300.402 229.916 cv
300.524 229.804 300.591 229.641 300.591 229.422 cv
300.591 229.208 300.524 229.045 300.402 228.933 cv
300.28 228.82 300.096 228.765 299.857 228.765 cv
299.225 228.765 li
cp
300.483 230.323 mo
300.591 230.364 300.698 230.44 300.799 230.558 cv
300.901 230.68 301.003 230.843 301.105 231.052 cv
301.615 232.066 li
301.074 232.066 li
300.601 231.113 li
300.478 230.868 300.356 230.7 300.244 230.619 cv
300.127 230.537 299.969 230.497 299.77 230.497 cv
299.225 230.497 li
299.225 232.066 li
298.721 232.066 li
298.721 228.352 li
299.857 228.352 li
300.28 228.352 300.596 228.443 300.805 228.617 cv
301.014 228.795 301.121 229.065 301.121 229.422 cv
301.121 229.656 301.064 229.855 300.957 230.008 cv
300.845 230.16 300.687 230.267 300.483 230.323 cv
ef
304.374 230.476 mo
304.374 232.066 li
303.916 232.066 li
303.916 231.643 li
303.809 231.816 303.676 231.938 303.524 232.015 cv
303.371 232.091 303.177 232.132 302.953 232.132 cv
302.668 232.132 302.439 232.056 302.27 231.897 cv
302.102 231.74 302.021 231.526 302.021 231.256 cv
302.021 230.945 302.123 230.711 302.337 230.547 cv
302.546 230.39 302.856 230.308 303.274 230.308 cv
303.916 230.308 li
303.916 230.262 li
303.916 230.053 303.844 229.89 303.707 229.773 cv
303.569 229.661 303.376 229.6 303.126 229.6 cv
302.963 229.6 302.81 229.62 302.657 229.661 cv
302.505 229.702 302.362 229.758 302.224 229.829 cv
302.224 229.406 li
302.387 229.345 302.551 229.294 302.708 229.264 cv
302.866 229.233 303.019 229.213 303.172 229.213 cv
303.574 229.213 303.875 229.32 304.074 229.529 cv
304.273 229.738 304.374 230.053 304.374 230.476 cv
cp
303.462 230.665 mo
303.091 230.665 302.836 230.711 302.693 230.792 cv
302.551 230.879 302.479 231.021 302.479 231.225 cv
302.479 231.388 302.53 231.52 302.637 231.612 cv
302.744 231.709 302.892 231.755 303.075 231.755 cv
303.33 231.755 303.534 231.668 303.687 231.485 cv
303.839 231.306 303.916 231.067 303.916 230.767 cv
303.916 230.665 li
303.462 230.665 li
ef
305.791 228.489 mo
305.791 229.279 li
306.734 229.279 li
306.734 229.636 li
305.791 229.636 li
305.791 231.149 li
305.791 231.378 305.822 231.526 305.883 231.587 cv
305.944 231.653 306.071 231.684 306.265 231.684 cv
306.734 231.684 li
306.734 232.066 li
306.265 232.066 li
305.908 232.066 305.664 231.999 305.532 231.867 cv
305.399 231.734 305.333 231.495 305.333 231.149 cv
305.333 229.636 li
304.996 229.636 li
304.996 229.279 li
305.333 229.279 li
305.333 228.489 li
305.791 228.489 li
ef
309.272 230.425 mo
309.267 230.176 309.196 229.977 309.064 229.824 cv
308.926 229.676 308.742 229.6 308.518 229.6 cv
308.264 229.6 308.06 229.676 307.907 229.819 cv
307.754 229.961 307.662 230.165 307.642 230.425 cv
309.272 230.425 li
cp
309.731 230.558 mo
309.731 230.782 li
307.627 230.782 li
307.647 231.098 307.739 231.342 307.912 231.505 cv
308.08 231.668 308.314 231.75 308.62 231.75 cv
308.793 231.75 308.967 231.729 309.13 231.689 cv
309.292 231.648 309.461 231.582 309.624 231.49 cv
309.624 231.923 li
309.461 231.994 309.292 232.051 309.119 232.081 cv
308.946 232.111 308.768 232.132 308.595 232.132 cv
308.146 232.132 307.795 232.004 307.535 231.75 cv
307.275 231.495 307.148 231.143 307.148 230.7 cv
307.148 230.247 307.27 229.885 307.515 229.615 cv
307.759 229.35 308.096 229.213 308.513 229.213 cv
308.89 229.213 309.186 229.335 309.405 229.574 cv
309.619 229.819 309.731 230.145 309.731 230.558 cv
ef
313.163 228.199 mo
312.939 228.586 312.776 228.963 312.669 229.335 cv
312.557 229.707 312.506 230.084 312.506 230.466 cv
312.506 230.853 312.557 231.23 312.669 231.602 cv
312.776 231.979 312.939 232.351 313.163 232.733 cv
312.766 232.733 li
312.516 232.341 312.328 231.964 312.205 231.587 cv
312.083 231.21 312.022 230.838 312.022 230.466 cv
312.022 230.099 312.083 229.727 312.205 229.35 cv
312.328 228.973 312.511 228.591 312.766 228.199 cv
313.163 228.199 li
ef
314.728 228.286 mo
314.988 228.286 315.197 228.377 315.355 228.561 cv
315.508 228.744 315.589 228.988 315.589 229.294 cv
315.589 229.61 315.508 229.855 315.355 230.038 cv
315.202 230.222 314.993 230.308 314.728 230.308 cv
314.464 230.308 314.255 230.222 314.102 230.038 cv
313.949 229.855 313.873 229.61 313.873 229.294 cv
313.873 228.988 313.949 228.744 314.102 228.561 cv
314.255 228.377 314.464 228.286 314.728 228.286 cv
cp
316.975 228.286 mo
317.373 228.286 li
315.049 232.132 li
314.652 232.132 li
316.975 228.286 li
314.728 228.601 mo
314.586 228.601 314.474 228.668 314.392 228.79 cv
314.311 228.912 314.27 229.08 314.27 229.294 cv
314.27 229.518 314.311 229.686 314.392 229.809 cv
314.474 229.931 314.586 229.992 314.728 229.992 cv
314.871 229.992 314.988 229.931 315.07 229.809 cv
315.151 229.686 315.192 229.518 315.192 229.294 cv
315.192 229.08 315.146 228.912 315.065 228.79 cv
314.983 228.668 314.871 228.601 314.728 228.601 cv
317.296 230.115 mo
317.556 230.115 317.765 230.206 317.917 230.39 cv
318.07 230.573 318.152 230.823 318.152 231.128 cv
318.152 231.439 318.07 231.684 317.917 231.862 cv
317.765 232.045 317.556 232.132 317.296 232.132 cv
317.031 232.132 316.817 232.045 316.664 231.862 cv
316.512 231.684 316.435 231.439 316.435 231.128 cv
316.435 230.817 316.512 230.573 316.664 230.39 cv
316.817 230.206 317.031 230.115 317.296 230.115 cv
317.296 230.43 mo
317.153 230.43 317.036 230.492 316.955 230.614 cv
316.873 230.736 316.832 230.909 316.832 231.128 cv
316.832 231.342 316.873 231.515 316.955 231.638 cv
317.036 231.76 317.153 231.821 317.296 231.821 cv
317.439 231.821 317.551 231.76 317.632 231.638 cv
317.714 231.515 317.755 231.342 317.755 231.128 cv
317.755 230.914 317.714 230.741 317.632 230.619 cv
317.551 230.497 317.439 230.43 317.296 230.43 cv
ef
318.803 228.199 mo
319.201 228.199 li
319.445 228.591 319.633 228.973 319.756 229.35 cv
319.878 229.727 319.944 230.099 319.944 230.466 cv
319.944 230.838 319.878 231.21 319.756 231.587 cv
319.633 231.964 319.445 232.341 319.201 232.733 cv
318.803 232.733 li
319.022 232.351 319.185 231.979 319.298 231.602 cv
319.404 231.23 319.46 230.853 319.46 230.466 cv
319.46 230.084 319.404 229.707 319.298 229.335 cv
319.185 228.963 319.022 228.586 318.803 228.199 cv
ef
gsave
253.31 220.559 mo
344.683 220.559 li
344.683 131.552 li
253.31 131.552 li
253.31 220.559 li
cp
clp
[1.07711 .465778 ] 0 dsh
253.31 220.559 mo
344.683 220.559 li
0 0 0 .310059 cmyk
@
grestore
253.31 220.559 mo
254.584 220.559 li
f
253.31 220.559 mo
254.584 220.559 li
@
250.411 218.679 mo
250.824 218.679 251.14 218.847 251.364 219.173 cv
251.583 219.504 251.695 219.983 251.695 220.604 cv
251.695 221.231 251.583 221.71 251.364 222.036 cv
251.14 222.362 250.824 222.525 250.411 222.525 cv
249.993 222.525 249.672 222.362 249.453 222.036 cv
249.234 221.71 249.127 221.231 249.127 220.604 cv
249.127 219.983 249.234 219.504 249.453 219.173 cv
249.672 218.847 249.993 218.679 250.411 218.679 cv
cp
250.411 219.076 mo
250.151 219.076 249.958 219.204 249.825 219.458 cv
249.693 219.713 249.632 220.095 249.632 220.604 cv
249.632 221.114 249.693 221.496 249.825 221.751 cv
249.958 222.006 250.151 222.133 250.411 222.133 cv
250.671 222.133 250.864 222.006 250.997 221.751 cv
251.124 221.496 251.191 221.114 251.191 220.604 cv
251.191 220.095 251.124 219.713 250.997 219.458 cv
250.864 219.204 250.671 219.076 250.411 219.076 cv
ef
gsave
253.31 220.559 mo
344.683 220.559 li
344.683 131.552 li
253.31 131.552 li
253.31 220.559 li
cp
clp
[1.07711 .465778 ] 0 dsh
253.31 206.865 mo
344.683 206.865 li
0 0 0 .310059 cmyk
@
grestore
253.31 206.865 mo
254.584 206.865 li
f
253.31 206.865 mo
254.584 206.865 li
@
249.769 208.412 mo
251.522 208.412 li
251.522 208.835 li
249.163 208.835 li
249.163 208.412 li
249.351 208.218 249.611 207.954 249.942 207.617 cv
250.268 207.286 250.477 207.072 250.564 206.976 cv
250.727 206.797 250.839 206.644 250.9 206.517 cv
250.961 206.395 250.997 206.267 250.997 206.145 cv
250.997 205.951 250.926 205.788 250.788 205.666 cv
250.65 205.544 250.472 205.478 250.248 205.478 cv
250.09 205.478 249.922 205.508 249.749 205.559 cv
249.575 205.615 249.387 205.697 249.188 205.809 cv
249.188 205.299 li
249.392 205.218 249.581 205.157 249.754 205.116 cv
249.927 205.075 250.09 205.055 250.238 205.055 cv
250.62 205.055 250.926 205.152 251.155 205.345 cv
251.384 205.539 251.501 205.793 251.501 206.115 cv
251.501 206.267 251.471 206.415 251.415 206.547 cv
251.358 206.685 251.257 206.848 251.104 207.031 cv
251.063 207.083 250.931 207.22 250.707 207.449 cv
250.482 207.679 250.172 207.999 249.769 208.412 cv
ef
gsave
253.31 220.559 mo
344.683 220.559 li
344.683 131.552 li
253.31 131.552 li
253.31 220.559 li
cp
clp
[1.07711 .465778 ] 0 dsh
253.31 193.17 mo
344.683 193.17 li
0 0 0 .310059 cmyk
@
grestore
253.31 193.17 mo
254.584 193.17 li
f
253.31 193.17 mo
254.584 193.17 li
@
250.584 191.41 mo
251.216 191.41 li
251.216 193.83 li
251.746 193.83 li
251.746 194.247 li
251.216 194.247 li
251.216 195.124 li
250.717 195.124 li
250.717 194.247 li
249.041 194.247 li
249.041 193.763 li
250.584 191.41 li
cp
250.717 191.848 mo
249.448 193.83 li
250.717 193.83 li
250.717 191.848 li
ef
gsave
253.31 220.559 mo
344.683 220.559 li
344.683 131.552 li
253.31 131.552 li
253.31 220.559 li
cp
clp
[1.07711 .465778 ] 0 dsh
253.31 179.476 mo
344.683 179.476 li
0 0 0 .310059 cmyk
@
grestore
253.31 179.476 mo
254.584 179.476 li
f
253.31 179.476 mo
254.584 179.476 li
@
251.471 177.78 mo
251.471 178.238 li
251.343 178.177 251.216 178.131 251.089 178.101 cv
250.956 178.07 250.829 178.055 250.707 178.055 cv
250.37 178.055 250.116 178.167 249.942 178.391 cv
249.769 178.615 249.667 178.957 249.647 179.405 cv
249.744 179.263 249.866 179.151 250.014 179.074 cv
250.162 178.997 250.324 178.957 250.503 178.957 cv
250.875 178.957 251.17 179.074 251.384 179.298 cv
251.598 179.522 251.71 179.833 251.71 180.22 cv
251.71 180.602 251.593 180.908 251.369 181.137 cv
251.144 181.367 250.844 181.479 250.472 181.479 cv
250.044 181.479 249.713 181.315 249.489 180.99 cv
249.26 180.663 249.148 180.184 249.148 179.558 cv
249.148 178.972 249.285 178.503 249.566 178.157 cv
249.841 177.81 250.217 177.632 250.686 177.632 cv
250.808 177.632 250.936 177.647 251.068 177.668 cv
251.196 177.693 251.328 177.729 251.471 177.78 cv
cp
250.472 179.354 mo
250.248 179.354 250.07 179.436 249.937 179.588 cv
249.805 179.741 249.739 179.955 249.739 180.22 cv
249.739 180.49 249.805 180.704 249.937 180.857 cv
250.07 181.01 250.248 181.086 250.472 181.086 cv
250.696 181.086 250.875 181.01 251.007 180.857 cv
251.14 180.704 251.206 180.49 251.206 180.22 cv
251.206 179.955 251.14 179.741 251.007 179.588 cv
250.875 179.436 250.696 179.354 250.472 179.354 cv
ef
gsave
253.31 220.559 mo
344.683 220.559 li
344.683 131.552 li
253.31 131.552 li
253.31 220.559 li
cp
clp
[1.07711 .465778 ] 0 dsh
253.31 165.781 mo
344.683 165.781 li
0 0 0 .310059 cmyk
@
grestore
253.31 165.781 mo
254.584 165.781 li
f
253.31 165.781 mo
254.584 165.781 li
@
249.723 164.929 mo
249.723 165.123 249.779 165.276 249.901 165.383 cv
250.024 165.49 250.192 165.541 250.411 165.541 cv
250.625 165.541 250.793 165.49 250.916 165.383 cv
251.038 165.276 251.099 165.123 251.099 164.929 cv
251.099 164.736 251.038 164.588 250.916 164.481 cv
250.793 164.374 250.625 164.318 250.411 164.318 cv
250.192 164.318 250.024 164.374 249.901 164.481 cv
249.779 164.588 249.723 164.736 249.723 164.929 cv
cp
249.907 165.724 mo
249.693 165.674 249.524 165.572 249.402 165.424 cv
249.28 165.276 249.224 165.098 249.224 164.884 cv
249.224 164.588 249.326 164.354 249.54 164.181 cv
249.749 164.008 250.039 163.921 250.411 163.921 cv
250.778 163.921 251.068 164.008 251.282 164.181 cv
251.491 164.354 251.598 164.588 251.598 164.884 cv
251.598 165.098 251.537 165.276 251.415 165.424 cv
251.292 165.572 251.129 165.674 250.916 165.724 cv
251.155 165.78 251.343 165.892 251.481 166.056 cv
251.613 166.218 251.685 166.422 251.685 166.657 cv
251.685 167.018 251.573 167.293 251.353 167.482 cv
251.129 167.676 250.819 167.767 250.411 167.767 cv
249.998 167.767 249.682 167.676 249.464 167.482 cv
249.244 167.293 249.137 167.018 249.137 166.657 cv
249.137 166.422 249.204 166.218 249.341 166.056 cv
249.474 165.892 249.662 165.78 249.907 165.724 cv
250.411 165.938 mo
250.172 165.938 249.983 166.004 249.846 166.132 cv
249.708 166.259 249.642 166.433 249.642 166.657 cv
249.642 166.881 249.708 167.059 249.846 167.186 cv
249.983 167.314 250.172 167.375 250.411 167.375 cv
250.645 167.375 250.834 167.314 250.971 167.181 cv
251.109 167.054 251.18 166.881 251.18 166.657 cv
251.18 166.433 251.109 166.259 250.976 166.132 cv
250.839 166.004 250.65 165.938 250.411 165.938 cv
ef
gsave
253.31 220.559 mo
344.683 220.559 li
344.683 131.552 li
253.31 131.552 li
253.31 220.559 li
cp
clp
[1.07711 .465778 ] 0 dsh
253.31 152.087 mo
344.683 152.087 li
0 0 0 .310059 cmyk
@
grestore
253.31 152.087 mo
254.584 152.087 li
f
253.31 152.087 mo
254.584 152.087 li
@
246.191 153.567 mo
247.012 153.567 li
247.012 150.734 li
246.12 150.913 li
246.12 150.454 li
247.007 150.276 li
247.511 150.276 li
247.511 153.567 li
248.331 153.567 li
248.331 153.99 li
246.191 153.99 li
246.191 153.567 li
ef
250.411 150.209 mo
250.824 150.209 251.14 150.377 251.364 150.704 cv
251.583 151.035 251.695 151.514 251.695 152.135 cv
251.695 152.762 251.583 153.241 251.364 153.567 cv
251.14 153.893 250.824 154.056 250.411 154.056 cv
249.993 154.056 249.672 153.893 249.453 153.567 cv
249.234 153.241 249.127 152.762 249.127 152.135 cv
249.127 151.514 249.234 151.035 249.453 150.704 cv
249.672 150.377 249.993 150.209 250.411 150.209 cv
cp
250.411 150.607 mo
250.151 150.607 249.958 150.734 249.825 150.989 cv
249.693 151.244 249.632 151.626 249.632 152.135 cv
249.632 152.645 249.693 153.027 249.825 153.281 cv
249.958 153.536 250.151 153.664 250.411 153.664 cv
250.671 153.664 250.864 153.536 250.997 153.281 cv
251.124 153.027 251.191 152.645 251.191 152.135 cv
251.191 151.626 251.124 151.244 250.997 150.989 cv
250.864 150.734 250.671 150.607 250.411 150.607 cv
ef
gsave
253.31 220.559 mo
344.683 220.559 li
344.683 131.552 li
253.31 131.552 li
253.31 220.559 li
cp
clp
[1.07711 .465778 ] 0 dsh
253.31 138.392 mo
344.683 138.392 li
0 0 0 .310059 cmyk
@
grestore
253.31 138.392 mo
254.584 138.392 li
f
253.31 138.392 mo
254.584 138.392 li
@
246.191 139.943 mo
247.012 139.943 li
247.012 137.11 li
246.12 137.289 li
246.12 136.83 li
247.007 136.652 li
247.511 136.652 li
247.511 139.943 li
248.331 139.943 li
248.331 140.366 li
246.191 140.366 li
246.191 139.943 li
ef
249.769 139.943 mo
251.522 139.943 li
251.522 140.366 li
249.163 140.366 li
249.163 139.943 li
249.351 139.749 249.611 139.484 249.942 139.148 cv
250.268 138.817 250.477 138.603 250.564 138.506 cv
250.727 138.328 250.839 138.175 250.9 138.048 cv
250.961 137.926 250.997 137.798 250.997 137.676 cv
250.997 137.482 250.926 137.319 250.788 137.197 cv
250.65 137.075 250.472 137.008 250.248 137.008 cv
250.09 137.008 249.922 137.039 249.749 137.09 cv
249.575 137.146 249.387 137.227 249.188 137.34 cv
249.188 136.83 li
249.392 136.749 249.581 136.687 249.754 136.647 cv
249.927 136.606 250.09 136.586 250.238 136.586 cv
250.62 136.586 250.926 136.683 251.155 136.876 cv
251.384 137.07 251.501 137.324 251.501 137.645 cv
251.501 137.798 251.471 137.946 251.415 138.078 cv
251.358 138.216 251.257 138.379 251.104 138.562 cv
251.063 138.613 250.931 138.751 250.707 138.98 cv
250.482 139.209 250.172 139.53 249.769 139.943 cv
ef
239.726 182.243 mo
241.045 182.243 li
241.045 181.611 li
241.045 181.372 240.989 181.188 240.877 181.066 cv
240.765 180.943 240.602 180.877 240.383 180.877 cv
240.169 180.877 240.006 180.943 239.894 181.066 cv
239.782 181.188 239.726 181.372 239.726 181.611 cv
239.726 182.243 li
cp
241.285 180.984 mo
241.325 180.877 241.402 180.77 241.519 180.668 cv
241.641 180.567 241.804 180.465 242.013 180.363 cv
243.027 179.853 li
243.027 180.393 li
242.074 180.867 li
241.83 180.99 241.662 181.112 241.58 181.224 cv
241.499 181.341 241.458 181.499 241.458 181.698 cv
241.458 182.243 li
243.027 182.243 li
243.027 182.747 li
239.313 182.747 li
239.313 181.611 li
239.313 181.188 239.405 180.872 239.578 180.663 cv
239.757 180.454 240.026 180.347 240.383 180.347 cv
240.617 180.347 240.816 180.404 240.969 180.511 cv
241.122 180.623 241.229 180.781 241.285 180.984 cv
ef
239.313 179.167 mo
239.313 178.417 li
241.84 177.47 li
239.313 176.517 li
239.313 175.768 li
243.027 175.768 li
243.027 176.258 li
239.766 176.258 li
242.314 177.215 li
242.314 177.719 li
239.766 178.677 li
243.027 178.677 li
243.027 179.167 li
239.313 179.167 li
ef
239.435 172.574 mo
239.924 172.574 li
239.833 172.767 239.766 172.945 239.721 173.113 cv
239.68 173.287 239.655 173.45 239.655 173.602 cv
239.655 173.877 239.71 174.092 239.812 174.239 cv
239.919 174.387 240.072 174.458 240.266 174.458 cv
240.429 174.458 240.556 174.413 240.638 174.311 cv
240.724 174.214 240.791 174.026 240.841 173.75 cv
240.903 173.445 li
240.974 173.073 241.101 172.798 241.28 172.619 cv
241.463 172.441 241.703 172.349 242.003 172.349 cv
242.365 172.349 242.635 172.472 242.818 172.711 cv
243.001 172.956 243.093 173.307 243.093 173.771 cv
243.093 173.949 243.073 174.138 243.037 174.336 cv
243.001 174.535 242.946 174.738 242.864 174.947 cv
242.344 174.947 li
242.462 174.743 242.548 174.545 242.604 174.351 cv
242.666 174.158 242.691 173.964 242.691 173.771 cv
242.691 173.485 242.635 173.266 242.523 173.108 cv
242.41 172.956 242.253 172.874 242.039 172.874 cv
241.855 172.874 241.713 172.93 241.611 173.042 cv
241.509 173.154 241.432 173.338 241.382 173.592 cv
241.32 173.898 li
241.249 174.275 241.132 174.545 240.969 174.713 cv
240.811 174.881 240.592 174.963 240.307 174.963 cv
239.981 174.963 239.721 174.851 239.532 174.616 cv
239.344 174.387 239.247 174.066 239.247 173.659 cv
239.247 173.485 239.262 173.312 239.293 173.129 cv
239.323 172.951 239.374 172.767 239.435 172.574 cv
ef
239.313 171.568 mo
239.313 169.22 li
239.736 169.22 li
239.736 171.064 li
240.837 171.064 li
240.837 169.296 li
241.259 169.296 li
241.259 171.064 li
242.604 171.064 li
242.604 169.174 li
243.027 169.174 li
243.027 171.568 li
239.313 171.568 li
ef
2 lc
0 lj
253.31 131.545 mo
344.683 131.545 li
253.31 220.559 mo
344.683 220.559 li
344.683 220.559 mo
344.683 131.545 li
253.31 220.559 mo
253.31 131.545 li
@
255.049 178.256 mo
304.579 178.256 li
305.258 178.256 305.598 177.917 305.598 177.237 cv
305.598 132.886 li
305.598 132.206 305.258 131.867 304.579 131.867 cv
255.049 131.867 li
254.37 131.867 254.03 132.206 254.03 132.886 cv
254.03 177.237 li
254.03 177.917 254.37 178.256 255.049 178.256 cv
0 0 0 0 cmyk
f
.363889 lw
0 lc
255.049 178.256 mo
304.579 178.256 li
305.258 178.256 305.598 177.917 305.598 177.237 cv
305.598 132.886 li
305.598 132.206 305.258 131.867 304.579 131.867 cv
255.049 131.867 li
254.37 131.867 254.03 132.206 254.03 132.886 cv
254.03 177.237 li
254.03 177.917 254.37 178.256 255.049 178.256 cv
cp
0 0 0 .199951 cmyk
@
256.068 137.777 mo
266.257 137.777 li
266.257 134.211 li
256.068 134.211 li
256.068 137.777 li
0 .648438 .892578 0 cmyk
f
270.862 134.032 mo
271.998 134.032 li
272.41 134.032 272.726 134.129 272.94 134.317 cv
273.154 134.506 273.261 134.781 273.261 135.142 cv
273.261 135.509 273.154 135.789 272.94 135.973 cv
272.726 136.161 272.41 136.253 271.998 136.253 cv
271.366 136.253 li
271.366 137.745 li
270.862 137.745 li
270.862 134.032 li
cp
271.366 134.445 mo
271.366 135.84 li
271.998 135.84 li
272.232 135.84 272.41 135.784 272.538 135.662 cv
272.665 135.54 272.731 135.367 272.731 135.142 cv
272.731 134.918 272.665 134.75 272.538 134.628 cv
272.41 134.506 272.232 134.445 271.998 134.445 cv
271.366 134.445 li
0 0 0 1 cmyk
ef
273.918 134.032 mo
275.054 134.032 li
275.467 134.032 275.783 134.129 275.997 134.317 cv
276.211 134.506 276.318 134.781 276.318 135.142 cv
276.318 135.509 276.211 135.789 275.997 135.973 cv
275.783 136.161 275.467 136.253 275.054 136.253 cv
274.423 136.253 li
274.423 137.745 li
273.918 137.745 li
273.918 134.032 li
cp
274.423 134.445 mo
274.423 135.84 li
275.054 135.84 li
275.289 135.84 275.467 135.784 275.594 135.662 cv
275.722 135.54 275.788 135.367 275.788 135.142 cv
275.788 134.918 275.722 134.75 275.594 134.628 cv
275.467 134.506 275.289 134.445 275.054 134.445 cv
274.423 134.445 li
ef
279.757 134.317 mo
279.757 134.847 li
279.583 134.694 279.405 134.577 279.211 134.495 cv
279.018 134.419 278.819 134.378 278.605 134.378 cv
278.177 134.378 277.851 134.511 277.627 134.77 cv
277.403 135.03 277.291 135.402 277.291 135.891 cv
277.291 136.38 277.403 136.758 277.627 137.017 cv
277.851 137.277 278.177 137.404 278.605 137.404 cv
278.819 137.404 279.018 137.368 279.211 137.287 cv
279.405 137.211 279.583 137.093 279.757 136.936 cv
279.757 137.46 li
279.578 137.583 279.39 137.669 279.196 137.725 cv
279.003 137.781 278.794 137.812 278.574 137.812 cv
278.014 137.812 277.571 137.644 277.245 137.302 cv
276.919 136.961 276.761 136.492 276.761 135.891 cv
276.761 135.295 276.919 134.826 277.245 134.48 cv
277.571 134.139 278.014 133.966 278.574 133.966 cv
278.799 133.966 279.008 133.996 279.201 134.052 cv
279.395 134.113 279.583 134.2 279.757 134.317 cv
ef
281.513 134.032 mo
282.084 134.032 li
283.5 137.745 li
282.975 137.745 li
282.639 136.793 li
280.963 136.793 li
280.627 137.745 li
280.097 137.745 li
281.513 134.032 li
cp
281.799 134.526 mo
281.116 136.375 li
282.481 136.375 li
281.799 134.526 li
ef
256.068 145.253 mo
266.257 145.253 li
266.257 141.687 li
256.068 141.687 li
256.068 145.253 li
.239014 .333252 0 0 cmyk
f
270.862 141.542 mo
271.366 141.542 li
271.366 143.066 li
273.19 143.066 li
273.19 141.542 li
273.694 141.542 li
273.694 145.256 li
273.19 145.256 li
273.19 143.488 li
271.366 143.488 li
271.366 145.256 li
270.862 145.256 li
270.862 141.542 li
0 0 0 1 cmyk
ef
276.864 143.667 mo
276.864 145.256 li
276.406 145.256 li
276.406 144.833 li
276.299 145.007 276.166 145.129 276.014 145.205 cv
275.861 145.282 275.667 145.323 275.443 145.323 cv
275.158 145.323 274.928 145.246 274.76 145.088 cv
274.592 144.93 274.51 144.717 274.51 144.446 cv
274.51 144.136 274.612 143.901 274.826 143.738 cv
275.035 143.58 275.346 143.499 275.764 143.499 cv
276.406 143.499 li
276.406 143.453 li
276.406 143.244 276.335 143.081 276.197 142.964 cv
276.059 142.852 275.866 142.791 275.616 142.791 cv
275.453 142.791 275.3 142.811 275.148 142.852 cv
274.995 142.892 274.852 142.949 274.714 143.02 cv
274.714 142.597 li
274.878 142.536 275.041 142.485 275.198 142.454 cv
275.357 142.424 275.509 142.403 275.662 142.403 cv
276.064 142.403 276.365 142.51 276.564 142.719 cv
276.762 142.928 276.864 143.244 276.864 143.667 cv
cp
275.952 143.855 mo
275.58 143.855 275.326 143.901 275.183 143.983 cv
275.041 144.069 274.969 144.212 274.969 144.416 cv
274.969 144.579 275.02 144.711 275.127 144.803 cv
275.234 144.9 275.382 144.945 275.565 144.945 cv
275.82 144.945 276.024 144.859 276.176 144.676 cv
276.329 144.497 276.406 144.258 276.406 143.957 cv
276.406 143.855 li
275.952 143.855 li
ef
277.761 141.542 mo
278.265 141.542 li
278.265 144.833 li
280.074 144.833 li
280.074 145.256 li
277.761 145.256 li
277.761 141.542 li
ef
281.147 141.955 mo
281.147 143.274 li
281.779 143.274 li
282.018 143.274 282.202 143.218 282.324 143.106 cv
282.446 142.994 282.513 142.831 282.513 142.612 cv
282.513 142.398 282.446 142.235 282.324 142.123 cv
282.202 142.011 282.018 141.955 281.779 141.955 cv
281.147 141.955 li
cp
282.406 143.514 mo
282.513 143.555 282.619 143.631 282.721 143.748 cv
282.823 143.87 282.925 144.034 283.027 144.242 cv
283.537 145.256 li
282.996 145.256 li
282.523 144.304 li
282.401 144.059 282.278 143.891 282.166 143.809 cv
282.049 143.728 281.891 143.687 281.692 143.687 cv
281.147 143.687 li
281.147 145.256 li
280.643 145.256 li
280.643 141.542 li
281.779 141.542 li
282.202 141.542 282.518 141.634 282.726 141.808 cv
282.935 141.986 283.042 142.256 283.042 142.612 cv
283.042 142.847 282.986 143.045 282.88 143.198 cv
282.767 143.351 282.609 143.458 282.406 143.514 cv
ef
283.627 141.542 mo
286.765 141.542 li
286.765 141.965 li
285.446 141.965 li
285.446 145.256 li
284.941 145.256 li
284.941 141.965 li
283.627 141.965 li
283.627 141.542 li
ef
290.062 141.828 mo
290.062 142.358 li
289.889 142.205 289.71 142.088 289.517 142.006 cv
289.323 141.93 289.124 141.889 288.91 141.889 cv
288.483 141.889 288.157 142.021 287.932 142.281 cv
287.708 142.541 287.596 142.913 287.596 143.402 cv
287.596 143.891 287.708 144.268 287.932 144.528 cv
288.157 144.788 288.483 144.915 288.91 144.915 cv
289.124 144.915 289.323 144.879 289.517 144.798 cv
289.71 144.721 289.889 144.604 290.062 144.446 cv
290.062 144.971 li
289.883 145.093 289.695 145.18 289.501 145.236 cv
289.308 145.292 289.099 145.323 288.88 145.323 cv
288.319 145.323 287.876 145.154 287.55 144.813 cv
287.224 144.472 287.066 144.003 287.066 143.402 cv
287.066 142.806 287.224 142.337 287.55 141.991 cv
287.876 141.649 288.319 141.476 288.88 141.476 cv
289.104 141.476 289.313 141.507 289.507 141.563 cv
289.7 141.624 289.889 141.711 290.062 141.828 cv
ef
256.068 152.73 mo
266.257 152.73 li
266.257 149.164 li
256.068 149.164 li
256.068 152.73 li
.476807 .101563 .0893555 0 cmyk
f
273.088 149.176 mo
273.088 149.664 li
272.894 149.573 272.716 149.506 272.548 149.461 cv
272.374 149.42 272.212 149.395 272.059 149.395 cv
271.784 149.395 271.57 149.451 271.422 149.552 cv
271.274 149.659 271.203 149.812 271.203 150.006 cv
271.203 150.169 271.249 150.296 271.351 150.377 cv
271.448 150.464 271.636 150.531 271.911 150.581 cv
272.217 150.643 li
272.589 150.714 272.864 150.842 273.042 151.02 cv
273.22 151.203 273.312 151.442 273.312 151.743 cv
273.312 152.105 273.19 152.375 272.95 152.558 cv
272.706 152.742 272.354 152.833 271.891 152.833 cv
271.712 152.833 271.524 152.813 271.325 152.777 cv
271.126 152.742 270.923 152.686 270.714 152.604 cv
270.714 152.084 li
270.918 152.201 271.116 152.288 271.31 152.344 cv
271.503 152.405 271.697 152.431 271.891 152.431 cv
272.176 152.431 272.395 152.375 272.553 152.263 cv
272.706 152.151 272.787 151.993 272.787 151.779 cv
272.787 151.595 272.731 151.452 272.619 151.351 cv
272.507 151.249 272.324 151.172 272.069 151.121 cv
271.763 151.06 li
271.386 150.989 271.116 150.872 270.948 150.709 cv
270.78 150.551 270.699 150.332 270.699 150.047 cv
270.699 149.72 270.81 149.461 271.045 149.272 cv
271.274 149.084 271.595 148.987 272.003 148.987 cv
272.176 148.987 272.349 149.002 272.533 149.033 cv
272.711 149.063 272.894 149.114 273.088 149.176 cv
0 0 0 1 cmyk
ef
274.093 149.053 mo
275.127 149.053 li
275.846 149.053 276.375 149.206 276.712 149.501 cv
277.048 149.802 277.216 150.27 277.216 150.908 cv
277.216 151.549 277.042 152.018 276.707 152.318 cv
276.37 152.619 275.84 152.767 275.127 152.767 cv
274.093 152.767 li
274.093 149.053 li
cp
274.597 149.466 mo
274.597 152.354 li
275.203 152.354 li
275.713 152.354 276.09 152.242 276.329 152.008 cv
276.564 151.774 276.686 151.407 276.686 150.908 cv
276.686 150.408 276.564 150.047 276.329 149.812 cv
276.09 149.583 275.713 149.466 275.203 149.466 cv
274.597 149.466 li
ef
278.981 149.053 mo
279.551 149.053 li
280.967 152.767 li
280.443 152.767 li
280.107 151.814 li
278.43 151.814 li
278.094 152.767 li
277.564 152.767 li
278.981 149.053 li
cp
279.266 149.547 mo
278.583 151.397 li
279.949 151.397 li
279.266 149.547 li
ef
281.516 149.053 mo
283.865 149.053 li
283.865 149.476 li
282.021 149.476 li
282.021 150.576 li
283.789 150.576 li
283.789 150.999 li
282.021 150.999 li
282.021 152.344 li
283.911 152.344 li
283.911 152.767 li
281.516 152.767 li
281.516 149.053 li
ef
256.068 160.207 mo
266.257 160.207 li
266.257 156.641 li
256.068 156.641 li
256.068 160.207 li
1 .841797 .237549 0 cmyk
f
273.643 156.762 mo
273.643 157.292 li
273.47 157.139 273.292 157.022 273.098 156.94 cv
272.905 156.864 272.706 156.823 272.492 156.823 cv
272.064 156.823 271.738 156.955 271.514 157.215 cv
271.29 157.475 271.178 157.847 271.178 158.336 cv
271.178 158.825 271.29 159.202 271.514 159.462 cv
271.738 159.722 272.064 159.849 272.492 159.849 cv
272.706 159.849 272.905 159.813 273.098 159.732 cv
273.292 159.655 273.47 159.538 273.643 159.38 cv
273.643 159.905 li
273.465 160.027 273.276 160.114 273.083 160.17 cv
272.889 160.226 272.68 160.256 272.461 160.256 cv
271.901 160.256 271.458 160.088 271.132 159.747 cv
270.806 159.406 270.648 158.937 270.648 158.336 cv
270.648 157.74 270.806 157.271 271.132 156.925 cv
271.458 156.583 271.901 156.41 272.461 156.41 cv
272.685 156.41 272.894 156.441 273.088 156.497 cv
273.282 156.558 273.47 156.645 273.643 156.762 cv
0 0 0 1 cmyk
ef
275.415 157.337 mo
275.812 157.337 276.123 157.47 276.352 157.725 cv
276.576 157.984 276.693 158.341 276.693 158.799 cv
276.693 159.258 276.576 159.615 276.352 159.869 cv
276.123 160.129 275.812 160.256 275.415 160.256 cv
275.012 160.256 274.696 160.129 274.472 159.869 cv
274.248 159.615 274.136 159.258 274.136 158.799 cv
274.136 158.341 274.248 157.984 274.472 157.725 cv
274.696 157.47 275.012 157.337 275.415 157.337 cv
cp
275.415 157.725 mo
275.17 157.725 274.976 157.821 274.834 158.015 cv
274.691 158.209 274.62 158.468 274.62 158.799 cv
274.62 159.136 274.686 159.395 274.829 159.589 cv
274.971 159.783 275.165 159.874 275.415 159.874 cv
275.659 159.874 275.853 159.783 275.995 159.589 cv
276.138 159.395 276.209 159.136 276.209 158.799 cv
276.209 158.474 276.138 158.209 275.995 158.015 cv
275.853 157.821 275.659 157.725 275.415 157.725 cv
ef
279.649 157.938 mo
279.761 157.735 279.898 157.587 280.057 157.485 cv
280.214 157.388 280.403 157.337 280.622 157.337 cv
280.907 157.337 281.131 157.439 281.289 157.643 cv
281.447 157.847 281.529 158.137 281.529 158.509 cv
281.529 160.19 li
281.07 160.19 li
281.07 158.524 li
281.07 158.259 281.019 158.061 280.928 157.928 cv
280.831 157.801 280.688 157.735 280.494 157.735 cv
280.255 157.735 280.067 157.816 279.929 157.974 cv
279.791 158.132 279.725 158.346 279.725 158.616 cv
279.725 160.19 li
279.267 160.19 li
279.267 158.524 li
279.267 158.259 279.216 158.061 279.124 157.928 cv
279.027 157.801 278.88 157.735 278.686 157.735 cv
278.451 157.735 278.263 157.816 278.126 157.974 cv
277.988 158.132 277.922 158.346 277.922 158.616 cv
277.922 160.19 li
277.463 160.19 li
277.463 157.404 li
277.922 157.404 li
277.922 157.837 li
278.024 157.668 278.151 157.541 278.299 157.459 cv
278.441 157.378 278.615 157.337 278.818 157.337 cv
279.022 157.337 279.19 157.388 279.333 157.49 cv
279.476 157.592 279.578 157.745 279.649 157.938 cv
ef
282.9 157.826 mo
282.991 157.663 283.114 157.541 283.262 157.459 cv
283.409 157.378 283.587 157.337 283.791 157.337 cv
284.128 157.337 284.403 157.475 284.617 157.74 cv
284.825 158.01 284.932 158.361 284.932 158.799 cv
284.932 159.238 284.825 159.594 284.617 159.859 cv
284.403 160.124 284.128 160.256 283.791 160.256 cv
283.587 160.256 283.409 160.216 283.262 160.139 cv
283.114 160.063 282.991 159.941 282.9 159.772 cv
282.9 160.19 li
282.441 160.19 li
282.441 156.318 li
282.9 156.318 li
282.9 157.826 li
cp
284.458 158.799 mo
284.458 158.463 284.387 158.204 284.25 158.01 cv
284.107 157.816 283.919 157.72 283.679 157.72 cv
283.435 157.72 283.246 157.816 283.108 158.01 cv
282.966 158.204 282.9 158.463 282.9 158.799 cv
282.9 159.136 282.966 159.401 283.108 159.594 cv
283.246 159.788 283.435 159.879 283.679 159.879 cv
283.919 159.879 284.107 159.788 284.25 159.594 cv
284.387 159.401 284.458 159.136 284.458 158.799 cv
ef
288.49 156.762 mo
288.49 157.292 li
288.317 157.139 288.138 157.022 287.945 156.94 cv
287.751 156.864 287.553 156.823 287.339 156.823 cv
286.91 156.823 286.585 156.955 286.36 157.215 cv
286.136 157.475 286.024 157.847 286.024 158.336 cv
286.024 158.825 286.136 159.202 286.36 159.462 cv
286.585 159.722 286.91 159.849 287.339 159.849 cv
287.553 159.849 287.751 159.813 287.945 159.732 cv
288.138 159.655 288.317 159.538 288.49 159.38 cv
288.49 159.905 li
288.312 160.027 288.123 160.114 287.93 160.17 cv
287.736 160.226 287.527 160.256 287.308 160.256 cv
286.748 160.256 286.304 160.088 285.978 159.747 cv
285.652 159.406 285.494 158.937 285.494 158.336 cv
285.494 157.74 285.652 157.271 285.978 156.925 cv
286.304 156.583 286.748 156.41 287.308 156.41 cv
287.532 156.41 287.741 156.441 287.935 156.497 cv
288.128 156.558 288.317 156.645 288.49 156.762 cv
ef
289.289 156.476 mo
289.966 156.476 li
291.612 159.584 li
291.612 156.476 li
292.101 156.476 li
292.101 160.19 li
291.423 160.19 li
289.778 157.083 li
289.778 160.19 li
289.289 160.19 li
289.289 156.476 li
ef
256.068 167.683 mo
266.257 167.683 li
266.257 164.118 li
256.068 164.118 li
256.068 167.683 li
.673828 0 .941406 0 cmyk
f
270.862 163.987 mo
271.61 163.987 li
272.558 166.514 li
273.511 163.987 li
274.26 163.987 li
274.26 167.701 li
273.771 167.701 li
273.771 164.44 li
272.813 166.988 li
272.308 166.988 li
271.351 164.44 li
271.351 167.701 li
270.862 167.701 li
270.862 163.987 li
0 0 0 1 cmyk
ef
275.228 163.987 mo
275.733 163.987 li
275.733 167.278 li
277.541 167.278 li
277.541 167.701 li
275.228 167.701 li
275.228 163.987 li
ef
278.023 163.987 mo
279.159 163.987 li
279.572 163.987 279.887 164.084 280.101 164.272 cv
280.316 164.461 280.423 164.736 280.423 165.098 cv
280.423 165.465 280.316 165.745 280.101 165.928 cv
279.887 166.117 279.572 166.208 279.159 166.208 cv
278.527 166.208 li
278.527 167.701 li
278.023 167.701 li
278.023 163.987 li
cp
278.527 164.4 mo
278.527 165.796 li
279.159 165.796 li
279.393 165.796 279.572 165.74 279.699 165.617 cv
279.826 165.495 279.892 165.322 279.892 165.098 cv
279.892 164.874 279.826 164.706 279.699 164.583 cv
279.572 164.461 279.393 164.4 279.159 164.4 cv
278.527 164.4 li
ef
280.917 166.101 mo
282.257 166.101 li
282.257 166.509 li
280.917 166.509 li
280.917 166.101 li
ef
283.959 167.701 mo
282.542 163.987 li
283.067 163.987 li
284.244 167.115 li
285.421 163.987 li
285.946 163.987 li
284.529 167.701 li
283.959 167.701 li
ef
287.452 163.987 mo
288.023 163.987 li
289.439 167.701 li
288.914 167.701 li
288.578 166.748 li
286.902 166.748 li
286.566 167.701 li
286.036 167.701 li
287.452 163.987 li
cp
287.737 164.481 mo
287.055 166.331 li
288.42 166.331 li
287.737 164.481 li
ef
289.988 163.987 mo
292.336 163.987 li
292.336 164.41 li
290.492 164.41 li
290.492 165.51 li
292.26 165.51 li
292.26 165.933 li
290.492 165.933 li
290.492 167.278 li
292.382 167.278 li
292.382 167.701 li
289.988 167.701 li
289.988 163.987 li
ef
256.068 175.16 mo
266.257 175.16 li
266.257 171.594 li
256.068 171.594 li
256.068 175.16 li
.163086 .976563 .724609 0 cmyk
f
273.088 171.533 mo
273.088 172.022 li
272.894 171.93 272.716 171.864 272.548 171.818 cv
272.374 171.777 272.212 171.752 272.059 171.752 cv
271.784 171.752 271.57 171.808 271.422 171.91 cv
271.274 172.017 271.203 172.17 271.203 172.363 cv
271.203 172.526 271.249 172.654 271.351 172.735 cv
271.448 172.822 271.636 172.888 271.911 172.939 cv
272.217 173 li
272.589 173.071 272.864 173.199 273.042 173.377 cv
273.22 173.56 273.312 173.8 273.312 174.1 cv
273.312 174.462 273.19 174.732 272.95 174.915 cv
272.706 175.099 272.354 175.19 271.891 175.19 cv
271.712 175.19 271.524 175.17 271.325 175.134 cv
271.126 175.099 270.923 175.043 270.714 174.961 cv
270.714 174.442 li
270.918 174.559 271.116 174.645 271.31 174.701 cv
271.503 174.763 271.697 174.788 271.891 174.788 cv
272.176 174.788 272.395 174.732 272.553 174.62 cv
272.706 174.508 272.787 174.35 272.787 174.136 cv
272.787 173.952 272.731 173.81 272.619 173.708 cv
272.507 173.606 272.324 173.53 272.069 173.479 cv
271.763 173.418 li
271.386 173.346 271.116 173.229 270.948 173.066 cv
270.78 172.908 270.699 172.689 270.699 172.404 cv
270.699 172.078 270.81 171.818 271.045 171.629 cv
271.274 171.441 271.595 171.344 272.003 171.344 cv
272.176 171.344 272.349 171.359 272.533 171.39 cv
272.711 171.421 272.894 171.472 273.088 171.533 cv
0 0 0 1 cmyk
ef
273.583 171.41 mo
276.722 171.41 li
276.722 171.833 li
275.402 171.833 li
275.402 175.124 li
274.898 175.124 li
274.898 171.833 li
273.583 171.833 li
273.583 171.41 li
ef
278.107 175.124 mo
276.691 171.41 li
277.216 171.41 li
278.392 174.538 li
279.569 171.41 li
280.094 171.41 li
278.678 175.124 li
278.107 175.124 li
ef
281.601 171.41 mo
282.171 171.41 li
283.587 175.124 li
283.063 175.124 li
282.726 174.172 li
281.051 174.172 li
280.714 175.124 li
280.184 175.124 li
281.601 171.41 li
cp
281.886 171.904 mo
281.203 173.754 li
282.569 173.754 li
281.886 171.904 li
ef
284.136 171.41 mo
286.485 171.41 li
286.485 171.833 li
284.641 171.833 li
284.641 172.934 li
286.408 172.934 li
286.408 173.356 li
284.641 173.356 li
284.641 174.701 li
286.531 174.701 li
286.531 175.124 li
284.136 175.124 li
284.136 171.41 li
ef
290.107 171.258 mo
289.883 171.645 289.72 172.022 289.613 172.394 cv
289.501 172.766 289.45 173.143 289.45 173.525 cv
289.45 173.912 289.501 174.289 289.613 174.661 cv
289.72 175.038 289.883 175.409 290.107 175.792 cv
289.71 175.792 li
289.46 175.399 289.271 175.022 289.149 174.645 cv
289.027 174.268 288.966 173.897 288.966 173.525 cv
288.966 173.158 289.027 172.786 289.149 172.409 cv
289.271 172.032 289.455 171.65 289.71 171.258 cv
290.107 171.258 li
ef
292.008 172.271 mo
292.405 172.271 292.716 172.404 292.945 172.659 cv
293.169 172.918 293.287 173.275 293.287 173.733 cv
293.287 174.192 293.169 174.549 292.945 174.803 cv
292.716 175.063 292.405 175.19 292.008 175.19 cv
291.605 175.19 291.29 175.063 291.066 174.803 cv
290.841 174.549 290.729 174.192 290.729 173.733 cv
290.729 173.275 290.841 172.918 291.066 172.659 cv
291.29 172.404 291.605 172.271 292.008 172.271 cv
cp
292.008 172.659 mo
291.764 172.659 291.57 172.755 291.427 172.949 cv
291.285 173.143 291.213 173.402 291.213 173.733 cv
291.213 174.07 291.28 174.329 291.422 174.523 cv
291.565 174.717 291.758 174.808 292.008 174.808 cv
292.253 174.808 292.446 174.717 292.589 174.523 cv
292.731 174.329 292.803 174.07 292.803 173.733 cv
292.803 173.408 292.731 173.143 292.589 172.949 cv
292.446 172.755 292.253 172.659 292.008 172.659 cv
ef
295.177 172.271 mo
295.177 172.271 li
cp
294.026 174.024 mo
294.026 172.338 li
294.485 172.338 li
294.485 174.009 li
294.485 174.274 294.535 174.467 294.637 174.6 cv
294.739 174.732 294.892 174.798 295.101 174.798 cv
295.346 174.798 295.544 174.722 295.687 174.564 cv
295.83 174.406 295.901 174.192 295.901 173.917 cv
295.901 172.338 li
296.359 172.338 li
296.359 175.124 li
295.901 175.124 li
295.901 174.696 li
295.789 174.87 295.656 174.992 295.514 175.073 cv
295.366 175.15 295.198 175.19 295.004 175.19 cv
294.683 175.19 294.439 175.094 294.276 174.895 cv
294.108 174.701 294.026 174.411 294.026 174.024 cv
ef
298.918 172.766 mo
298.867 172.735 298.811 172.715 298.75 172.699 cv
298.689 172.689 298.623 172.679 298.551 172.679 cv
298.292 172.679 298.093 172.766 297.955 172.934 cv
297.813 173.102 297.746 173.341 297.746 173.657 cv
297.746 175.124 li
297.288 175.124 li
297.288 172.338 li
297.746 172.338 li
297.746 172.771 li
297.838 172.602 297.966 172.475 298.118 172.394 cv
298.271 172.312 298.46 172.271 298.684 172.271 cv
298.714 172.271 298.75 172.277 298.791 172.277 cv
298.826 172.282 298.867 172.287 298.918 172.297 cv
298.918 172.766 li
ef
301.177 172.419 mo
301.177 172.852 li
301.045 172.791 300.912 172.74 300.775 172.704 cv
300.632 172.674 300.489 172.654 300.342 172.654 cv
300.112 172.654 299.939 172.689 299.827 172.761 cv
299.715 172.832 299.659 172.934 299.659 173.071 cv
299.659 173.178 299.7 173.26 299.781 173.321 cv
299.863 173.382 300.026 173.443 300.27 173.494 cv
300.428 173.53 li
300.754 173.601 300.983 173.703 301.121 173.825 cv
301.253 173.952 301.325 174.131 301.325 174.355 cv
301.325 174.615 301.223 174.818 301.019 174.967 cv
300.816 175.119 300.53 175.19 300.174 175.19 cv
300.021 175.19 299.868 175.175 299.705 175.15 cv
299.542 175.124 299.374 175.084 299.196 175.022 cv
299.196 174.549 li
299.364 174.64 299.532 174.706 299.695 174.747 cv
299.858 174.793 300.021 174.813 300.184 174.813 cv
300.398 174.813 300.566 174.778 300.683 174.706 cv
300.795 174.635 300.856 174.528 300.856 174.391 cv
300.856 174.268 300.81 174.172 300.729 174.106 cv
300.648 174.039 300.464 173.973 300.179 173.912 cv
300.021 173.876 li
299.735 173.815 299.526 173.723 299.404 173.601 cv
299.277 173.479 299.216 173.311 299.216 173.092 cv
299.216 172.832 299.308 172.628 299.491 172.485 cv
299.674 172.343 299.939 172.271 300.286 172.271 cv
300.454 172.271 300.612 172.287 300.764 172.312 cv
300.912 172.338 301.05 172.373 301.177 172.419 cv
ef
301.948 171.258 mo
302.345 171.258 li
302.59 171.65 302.778 172.032 302.901 172.409 cv
303.023 172.786 303.089 173.158 303.089 173.525 cv
303.089 173.897 303.023 174.268 302.901 174.645 cv
302.778 175.022 302.59 175.399 302.345 175.792 cv
301.948 175.792 li
302.167 175.409 302.33 175.038 302.442 174.661 cv
302.549 174.289 302.605 173.912 302.605 173.525 cv
302.605 173.143 302.549 172.766 302.442 172.394 cv
302.33 172.022 302.167 171.645 301.948 171.258 cv
ef
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: XAAAAA+CMR9 AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2021 Adobe System Incorporated. All rights reserved.systemdict beginNOAXUK+CMR9 dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/period <1C60D8A8C9B84FD8F928A1C6BFBB8978E3EAC9E17EF38D8D584FC839E26A3329C934E5029529A182FFDC> |-/f <1C60D8A8C9B830DBA03B96798D9322ED71B436AC7C813797F2AA6CD3E965D8DF752A044AC6751A8195C94968D7F22F03314535A36E5D11060141EB82A5200F3D02AD879C2FD243E45DB4F03A8D8B5B1F1B46B07187762138A36660BCB4252B49E9C7362B1566DBDAF80848A23E382F9FEA22898D6B319D89459AAC22575C1EDEE730DECC8EB4B7A8D12EB2D48D65DCC4D57DEADA8DF0832AE3> |-/h <1C60D8A8C9B7E1F898BF26914C5F36A873339DBDAF1909EB2E504BECD0B4D58F9657741BE8E0DF50481FCCB93425F0EC1DA6B4AADD06A3069F970688F9DF678D7A6CEB763B3CCAD9DEA2737CEB4B35D36B3143752F806A4FFF9E60D6BE3FC320424A9D48819BA0A68E0C54B982ED72474A6BF0555D23E0D9CEF87726707DE078DA1AFE267C17863221F79F15C4C7695E5BA7E43F7A4488C7B5A95748B92EEE97A69AA282C3F1485B14936FF720279D757F3F3E9C6F0E1EB0F96A585DF0F3CCD2529C98D2D35AA8DA25A5> |-/l <1C60D8A8C9B84FD8F975B6D107762C610F0953FE6677581A49AEBB936885BE7873082F90A48174E762116196A29374B77ADA1AFE24D9DEACFE6D2B0382863032D00561E3D239C6AF761563630EF0D6488CACE4399573FC4D09A227B2F0D9C6> |-/m <1C60D8A8C9B68D9267085E1DB3A2D5ED50582BC0D923E376497DA5E78223B525BDDEBDB748DC3253448DC51A74860DA3FBE24E8352EE153044D34158D570F88D46210B625A940C4C10899C19B15034CF1D4EE2750AD28925F85A4BFDD856D93395630E422DB72DF13F91C532984E1A7648052FA4F768F872C7538170A8C405274279CDEA045D2BF71DA1DA348E5412B58205A993C674CC21BF05E872BDCB858B1754A3D3AF1240741E56CFE5BEE88BF515065AE5CB827998AD666BA4C1905EBC5D89511DB6331C4D0EAFAB7E2431F71B0397D3BE2EF032B008295ED3F8B72FFDFD0E3A0B133CE7F019BDA150220D06673F0E679E7698261D704BC1CFDD4292D0AAB19A635BD4A34640AE568FF778CCC3AD5706CD4C3AD9A725C47761D378BB669F8F8BAD6534789901057A63F99BD47A9DBBB0BD89> |-/p <1C60D8A8C9B7E1F893A967A6DB2D795BDFE9A46DAE43612A3AC38EDE6F3BC6AFF386996EFF92D22AA28420D51621294DA85E93A411D013D5B8D5EF00CB21D027E2337FDC8D61F9F2FE64A8B29E70EC12573557523339EC0203E8990F491C15CEB1D14E71099965FF70813237BCC31181A5246FE8F92A5FFEEB32518A4B9FD634CC62982051F493E5F605A91729079B643AFD7B2E7C3D772C9F8D1ABC45AEB538E1D5E4203A4D9CA1729833BB854C7FCFB3A0D295C8306F> |-/r <1C60D8A8C9B709C457BF6620FE628096762BB63619D62FF6A914FAB6D4A5C61BC33FEA3BC150CBCF0C9B0E21C8E16E9825B68FDB0440D336717338B52D658B21A5816DDCE1DBA46624F0601251A3D97B2D4A392D57BA0648E27BDE4A24C707AD096133F27D497D80D78AC7A7051C15AFB389957F6BBBEC14E00738EA073EACD213090486B7C00871B88B7892FB1F6C95720D8E8FFEB704196A9323A05E96> |-/s <1C60D8A8C9B706536F3550E7FC53040D68FD0F85C2481DA6CE6765E985591E5BE0770C92A02ACF0F99B26D11B4F5C653250060A454D892CDA569E3062D67F3D7E34C6C57D50E1DF80D0B9153AC788BE1011FA9950D43F4D734403358CA625C50840CF9B7F559D5D623DF93FD20A0461B7F7266B75903C3FA2E9E5B0454A14E4DCEA34C2433B5C63E549B495A791C4CAA8701D9A31D785DF25E162D3FEB96670C555130EC558ACE17CE772DF95579DA82AEE514EC926207FB04B63BDA0C8E1440A255> |-/u <1C60D8A8C9B7E1F893A967A6CDF54AE06EE402C314CBDFCF8C70B596CAAF88E3B2C31A95316F4F444E262CF1E7B6D7F86000745EB226305E9ACA85E41D3EFD16EDDA9EE9BB3A9CBAC05A404B72693300E05F8EBD9B1D5B466EBB665B346BE94FA58AA0EBBD01FA9975D7FBE0976D4FA4C9CF6263535504393EBF8860> |-systemdict /gcheck known {setglobal} if end {end} ifendNOAXUK+CMR9 /Encoding getdup 46 /period putdup 102 /f putdup 104 /h putdup 108 /l putdup 109 /m putdup 112 /p putdup 114 /r putdup 115 /s putdup 117 /u putpop%ADOEndSubsetFont
/NOAXUK+CMR9*1 [40{/.notdef}rp /parenleft /parenright 4{/.notdef}rp /period 19{/.notdef}rp /B /C /.notdef /E 4{/.notdef}rp /J 2{/.notdef}rp /M /N 3{/.notdef}rp /R /S /T 4{/.notdef}rp /Y 7{/.notdef}rp /a /b /c /d /e /f /.notdef /h /i /.notdef /k /l /m /n /o /p /.notdef /r /s /.notdef /u 2{/.notdef}rp /x 135{/.notdef}rp]NOAXUK+CMR9 nfNOAXUK+CMR9*1 [8.96638 0 0 -8.96638 0 0 ]msf244.813 246.217 mo(\(f\)RMSEonBikeNYC)[3.60001 3.48007 6.83983 6.83997 8.39996 5.16006 9.36023 4.56 8.16006 6.48004 2.52005 4.68015 4.07999 6.96005 6.96005 0 ]xsh%ADOBeginSubsetFont: BBAAAA+CMBX9 Initial
%ADOt1write: (1.0.24)%%Copyright: Copyright 2021 Adobe System Incorporated. All rights reserved.12 dict dup begin/FontType 1 def/FontName /BBAAAA+CMBX9 def/FontInfo 6 dict dup begin/Notice (Copyright (c) 1997, 2009 American Mathematical Society (<http://www.ams.org>), with Reserved Font Name CMBX9.) def/ItalicAngle 0 def/WasEmbedded true defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 46 /period putdup 54 /six putdup 70 /F putdup 103 /g putdup 105 /i putdef/FontBBox {0 -250 1076 750} defendsystemdict begindup /Private14 dict dup begin/|- {def} def/| {put} def/BlueValues [-12 -0 444 453 656 676 686 698] def/OtherBlues [-201 -194] def/BlueScale 0.04379 def/StdHW [49] def/StdVW [117] def/StemSnapH [40 49] def/StemSnapV [117 145] def/ForceBold true def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings6 dict dup begin/period <1C60D8A8C9B82281AC54837CAACABDF61E818010D5E6723E4F1E9E26A2636FE1F03A7E1EC4957DEFEAB4> |-/six <1C60D8A8C9B7CC0B31A13772EA3604DA7585D7E39F426FC5AA875B76F996358DD1804D0DF71A8F9916432EADBE9AB7C3E42F444F710F0B072654E3623D6D8ACAC07D9AA7CDF760F8232B5FA3D050752075BEA2D8DFA73BA4EFEB087CF37D5F283C374CE56E4840931CED2C79704645D5B5D03DB7842AE6A0503973980A9EB47702BDCD7536C9188B755CABC9C580801AE561F54F6017ACD3228CF05DD96DB32E45AA2E81A142AAD1EC35> |-/F <1C60D8A8C9B61AE93D44F9A05EF6447D0FA70115909D807C2ED827F3F58790BC17BD2D398B424B8298D009077E036C676851123842B768B211410651E315D2E112CEC24BD1EDECB3F6B73CBF898C2AD873F779441E52EEE54E261DF37A76A71E3189D49B0F3D3459F0E8522E305FCFEC217EFAFA2906803160ABA6642E89D961109EB2828DBD6A6F60F490> |-/g <1C60D8A8C9B7CC0BB5D447800E0484275C4E6E02DD150A656A7774B18E91004F121E6AEEF2C1FDF380DF72CA6CE3A259C549AAE04C6F72D40EAF13D1203DB007DDD708DC74C09FE74AA824579666A80445AFF83633DE29FB7998E29B9193A728B34D3287ADE6869685220295EC61E34C6351996C629D48F77F8591FDECDC78E8248F5D87529CFC140CA7681ACF33ACE7F791C12937964C56480D34F7BD845F9F8CB675D451F8FE2920A00AC6166C217D78A0B2EBD782AB7073AFCC022E04B8BE72950DFBFF2C153ADB15B7FB046CD760182291F6BE8A37B9D7D29EE1175B65ECD4B39D6DABE85C53C8> |-/i <1C60D8A8C9B82281AC1FF7F60C5BCAE1027F7039D2E4842DEA66A12135DF6F88BC4EEA9301E53A922DB724C85DC6EF901BFE2259260E636F320DE958E9F6A56B44F6FBA12640CEEFD4D864342BB7D31BC60F6BE9C8ED37EE76AEA008817449B21F93FCE22D18E5998BE87EF1CB1BDE939FA0826D08299C41> |-/.notdef <1C60D8A8C9B7A73D40> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/NOAXUT+CMBX9 /BBAAAA+CMBX9 findfont ct_VMDictPut/NOAXUT+CMBX9*1 [46{/.notdef}rp /period 7{/.notdef}rp /six 15{/.notdef}rp /F 32{/.notdef}rp /g /.notdef /i 150{/.notdef}rp]NOAXUT+CMBX9 nfNOAXUT+CMBX9*1 [8.96638 0 0 -8.96638 0 0 ]msf39.0133 270.697 mo(Fig.6.)[6.71997 3.00003 5.28003 4.5602 5.28001 0 ]xshNOAXUK+CMR9*1 [8.96638 0 0 -8.96638 0 0 ]msf69.9731 270.697 mo(Comparisonsonperformanceofbaselinesandourapproach.)[6.60004 4.56001 7.68001 5.16008 4.55998 3.59993 2.52005 3.59999 4.56 5.16006 6.83984 4.56003 8.27991 5.40005 4.08002 3.59991 2.75998 4.56 3.59995 7.68002 4.56 5.16006 4.07993 7.32001 4.56003 5.87979 5.1601 4.55997 3.60001 4.08002 2.52002 2.52002 5.1601 4.08002 6.8399 4.56 5.16006 8.16005 4.56003 5.16006 6.71976 4.56003 5.16003 5.16003 3.59991 4.56003 4.56003 3.83975 5.16006 0 ]xsh%ADOBeginSubsetFont: RAAAAA+CMR10 Initial
%ADOt1write: (1.0.24)%%Copyright: Copyright 2021 Adobe System Incorporated. All rights reserved.12 dict dup begin/FontType 1 def/FontName /RAAAAA+CMR10 def/FontInfo 6 dict dup begin/Notice (Copyright (c) 1997, 2009 American Mathematical Society (<http://www.ams.org>), with Reserved Font Name CMR10.) def/ItalicAngle 0 def/WasEmbedded true defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 11 /ff putdup 12 /fi putdup 13 /fl putdup 40 /parenleft putdup 41 /parenright putdup 44 /comma putdup 45 /hyphen putdup 46 /period putdup 49 /one putdup 50 /two putdup 51 /three putdup 54 /six putdup 58 /colon putdup 65 /A putdup 66 /B putdup 67 /C putdup 68 /D putdup 69 /E putdup 70 /F putdup 71 /G putdup 72 /H putdup 73 /I putdup 76 /L putdup 77 /M putdup 78 /N putdup 80 /P putdup 83 /S putdup 84 /T putdup 86 /V putdup 87 /W putdup 91 /bracketleft putdup 93 /bracketright putdup 97 /a putdup 98 /b putdup 99 /c putdup 100 /d putdup 101 /e putdup 102 /f putdup 103 /g putdup 104 /h putdup 105 /i putdup 106 /j putdup 107 /k putdup 108 /l putdup 109 /m putdup 110 /n putdup 111 /o putdup 112 /p putdup 114 /r putdup 115 /s putdup 116 /t putdup 117 /u putdup 118 /v putdup 119 /w putdup 120 /x putdup 121 /y putdup 122 /z putdef/FontBBox {-40 -250 1009 750} defendsystemdict begindup /Private13 dict dup begin/|- {def} def/| {put} def/BlueValues [-22 -0 431 448 666 677 683 705] def/OtherBlues [-206 -194] def/BlueScale 0.04379 def/StdHW [31] def/StdVW [69] def/StemSnapH [22 31] def/StemSnapV [69 89] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings58 dict dup begin/ff <1C60D8A8C9B7F44AB057F17785C13EBF9EDBA5E37D38F2D2EC32EA15C52166ECBF3DF0794257079BA45015630D7760B8E4C1EB3F58108741AD2AA01A1090000B4F2956C8AFEB9BD9997AC95B037C1298E4C2307650A742CF1D3C703C73CA10466F00ACAD6CEDFA580823778863C65543C9DC0AAAA390A14E627B436F6C988CCF1E043B7A19E345B2C3CD7EC8A67EFFE3A681960C3C17F5A01A8598C651CF01F84C5FB94F73029353B8731DCFD311B4680D186A3A2574A0C0152E8858A906FA149A1EEA96578774D7E71B4108AAFBA90DA3FEB52C0A53964F54A02643303F00648ACD662B9ED701E32591F8AF679524746C12872B65219126E3DE7C1150CA0EADDAEB089C36D0297F5D40AFF15A8A9FBE2075BE1C682F0783B7E2> |-/fi <1C60D8A8C9B790A83D946A52CDEF806B68BCA69D0F565BD47A313ACE64EA4C51C4F7E2720AD6426622FF887A9B1CEFB163BC1E0E045B9CF4238406E12352EBBD9242E2C49AFC9D86CDEE482C0035CA1CA44CCBB1436642750A1E71B1CD288AC28B3D26A164143FCB2C92157FC4CD1F366676BE46E871DBBB1239C9614DC38DD102B67124FC3D2C144C05DA896465C2DA06004C93D99A6D33F72F04F023B41A55BAD349B063D76BBE78E5B60101B7FD0DF48C196A450BF7E868A35BEFE7F5AEE46F6B98A5AEE642C67C9F421CFE1639B9D13BF5EC82D77CC20A4B04492D8733D54EC758417FF41850C5076FB5C2875D5227FEF9897E31DFBBC49554A2544AFB8F5D9BAF3452E7> |-/fl <1C60D8A8C9B790A83D946A52CDF3BA384FB5C185AEDB1CF1AA5376BAD5F084054D8D42BF08E72A3BDCB1EF84334D6E8615A23F0FBAF99D460ED5DFF071DFBC2390A7637886B6E62CC071CFB3C5FF616603BA9FFC2E8E3FA9687877005767EF4066B54492C0E30BCB6071957D076C670EACE87A71158C5E0CAD01A2943C254591C13BDBA2BA28087E0B7B989FDA7EB962C902C6EE616745416F1CF5733EEBE53342AA04AF786862E14CBB6D419E721026F70CD7C35C5B6BA1D16CC7F21A719A47F48B3A29F773D7D81E6F686065C1C458D44AEBF7FA11578EDBC6B82C1A2AEACE9270B50DC9443968429C06550479F5ECE14DC466> |-/parenleft <1C60D8A8C9B737EC27E43BF1977FE17AEB7DE778CD9D1D3D9164F271727AA0A52834106DB6D5C2AAFD94AB31812D41894E82D13A11FDF4155F02A6615144E05EE47C8795E8E89CE29B723AE08221B1DF3C5B4817E44D18CE1598A5DC2F98DABB2ADE3D131ACFA2D3D56E> |-/parenright <1C60D8A8C9B737EC27E43BF1977FE17AF226302CB703517021A0DB54938D38A906781CE143685A42358F6D26C1E58529BD5B1EB56AB64CAF39716A9479AF082DEB3A49B0B9FF06175FD4C622795E8AFACAE24D77E337BE03FB99C4AAA689F9E967FCE15709E3204C4D> |-/comma <1C60D8A8C9B85744148CA332B8493D4AA74EC0ED15A645BB097A03BCB0F035B963033C1DF7BD2D48E65E6103A6E43630254BF33A6D7E1B7340BEC9334288A8D805FE5AD1AC9173E2E18AD17AD4AEC5661EEF946D3EA40FA8C5> |-/hyphen <1C60D8A8C9B81F2C3AF48BE1F128682CB71E9BBC932714B7AB24E23905FE> |-/period <1C60D8A8C9B8574464AEAFBA1A0A0C2B3D037BE5A5239C78737658D239BCB61DC78D83A8F223F832> |-/one <1C60D8A8C9B7A73DC579B9CE13A4EA8C203AFC890ABD6F58341B006CF1BDD8FED3A7238E01F751FEAC75885229C293891E5636AD630D9C884528B6FEF025DDA723DD68103C537890571B4B95BCC242A78DD7EA0DA80E91751ED6DEA668D97ECF27E58978E82B8932F2635747B0D240AA> |-/two <1C60D8A8C9B7A73DC50B0411757B441481CCF7EF812EEB9B3F6A07BD51606BCA866C4BD24CA34E86B9CA5A529B664F3EEDB6B4AF8A2B994DB57B49473E162231CB943675FE63E9B92B8AEBB62FB22456EC4173C66EF6C2F34FFEC22ACAE77FFFAAD70F3754CADC0D2CF63CB6D286D930AEA5A613E5AB9CB004BEAEBADDD070EDAF4FF25FDB6421F540D58D2C7A3FC40290CBCF831BE1B89B7F> |-/three <1C60D8A8C9B7A73D3B2B97DEB4C7BDB68E0D63865C8BF294429AD1BAAE59A25299F9306A9E28AA5C0C0AF9F97F56096DB0FD0EC440ACCE834B0BA5392FD94D026768A961AA5D1A88FAE30F2B2033E77AFAB55B0B9C8092CD226DD9EFEEAAF5CD5AE79D6DDEC4C37DC43DE3B85DD2A2EC4DC0C9F349D5E8F9F615782EDC8C53805553FD3C0007C1818BF3D99AB659A079ED36132BBDC613CA63D7A0FE429706DBC6BA998CE56A89C002758EF37F90A390F83B3DFE49D312FA66FDF2F16212D1503559B7B1637726D82590655B813B5B489A6AB087D0B93F61541C20829B36C95E4A39F5BDDBA400> |-/six <1C60D8A8C9B7A73D3B2B97FE394CF5175EFEC06CD8F59A375E41591273E0C059123310EC79AE072F532A0C9DF11EDCF7D4B9D83F0A2FCBB058CCF95C0FF8BAD8605C0C2E8D60E28BE3D0E0DD42D8AAC3094E7159CC3989179C22CC5AA3B3825C4ED9C5A83B733BA4666CE2A2B0097F22D25C776953D494478010B9DD2B5DC520FCB2B0B7183A59B91F9C6B76BCB8A8CE135881FEEEB2BD853CC29FB7FDF436E095CF25C0CF3D1030E991D37D2BB2A05DD251695665BEB980DCF70EB0EFACB10E78F2D22C879E92110E4963EE6051EA84F4D334> |-/colon <1C60D8A8C9B8574464AEAFAC7C68900D93273DA49162F3A5B8C16D30B96C6FD4E30E80E1F78558AD2540B994A3F8C4499D90D9C7B92969D703EA7177FFCAE7C73BA4F83773> |-/A <1C60D8A8C9B6E3FA234780E51B74F22595A687FBF09EF454D03FB6CE0741835DFEA276F2BD9DA1E567C1E2AA272C9AF9AA6DE082183B6B069F122C69C93CC84C1E2E5C1EDB186833D9A28F18458A45AD6A7572F00011ECC2E09341FD6937B43E501C94208386B52881CD9F0C7EE85FC76CF7DFA415F22DB3B2B926D06F495CDDAB596E2F022F9C4F3C3961AB08783D379F9901790C33B26D5144056789A95EB7D120F2CBD25F8C89DDE84F37EAAE2D7C9D8E52E449BEC2C204B273340CAA6C0D416A62DDFF217CC15AC6F8> |-/B <1C60D8A8C9B639EEFA174065F5FD105B20378341DBFF30A51DB6C77A6359CBEBE0D9BD9CE0C921830FF71EC4B25B9235E9D3AAEB5B916021C1CB889F478780AE7F39AB91F4903136ABD731C2BDC3E9F07CF08A676ED331FE94C86C156B356813D1A91311438A08E045EAC2BF4B9DC48471DC47CD438BBE76EA13188402B27FA510ABF73A9F751EEA658B97A1001412BE338EF70562CB452C9B75DDA091DA96B4F34A9087> |-/C <1C60D8A8C9B6079FE0EE62D79560027BBBCB170A7709037203D620100C78000AFC53792FD4192A63CFDE4C7CCFBBF640912DE1EA497F0D0E9CACF7B554590931F67EC30C725B283FF8701F318F6A51E9DAFF6E43D2B77ABC7C9D046D0346C0BC1B195971779D6643699369A8474D056C5265E53617DA697597540B11F4760D558D2A79BC5EEE54EC8A8FB0679FBAC9400141E54057CB9E273F1EF671A5379A4BB4B27EBB1E02C7> |-/D <1C60D8A8C9B6EEDBC0C41A524F9E758CC382DD66BE427C2A2DF4ADB78D9B43846F3F8F08E1E597E79AB7612DDDC707AAEC06A2898443CA82FBCA30E555810A2E60B2C29C04A656D62CA2D655E98AC514E4B623C13C73CAA3C9CFC74081668903A078DE399FE0D6CFE2A29266920A5C524CC4E2D86939049425> |-/E <1C60D8A8C9B65DE708408E894B780C980FB3CD0F5A2C0BEF23E5114F36C909584A712E7AFDDA2F26FF878CC11EDE914164339F97B59F3659C5E3C5144DA79350C562BF05A1FC95A59765A840A579FDEA86DCEB7F99647561868501F99D35BFF4F16CE8CFA6310AD24B7256C45B06ACB6DF245FF3654675E2E019899536DE4452B0D6D01DB1C11617465A> |-/F <1C60D8A8C9B6415B3711EB1374ABAAA5807C9EEF546BB48E20B7C80F2440A33EBF154406CF8E0357C9FC59A91B81A30E2A6B39737D11C4098B5A80670049AA0D28AEFFF6CC9623E77045E059C85ED1DEF097E8AD8EB596D92ECDFA2450852F5239A26C6AE22D6FF2A11E41BB2F0B25F77CCF63F0DFBDCAFB46AB38C0475BF38716AF7C70011524830AEDECD5FE884C30BE71797C9E6C523F53FAFC27E6> |-/G <1C60D8A8C9B6C5CA50BA1A66B0ED58C9A27CC1684A535A4AAE923AA869469B9FB1E98E8E911A6B68D071D9A9C53B9EA692748987A65C86386EDBF1DC70F64BF40FA829872071155D2EEF287FA3F412065012D7ECC6A66BEC3F9115F8F2B744B6FDCED55D0AA61445F9E82DBD8E663727CBB905C20DD0B57EE3C58C71FBD261064D2534E005C7403CDFF8F45F8CA19540B5E742E2C392DF93DEF0F5DEAFD77D3EE1270EBF8C86EDAFD0C899763930BDAF6E95FB83A7C6FF21F91FB9F4114AC07B82F3A2368EBE8C4CF6B8F681F436D5496509EB99DE62F2C39298D13A5FC8117BF4675C81CBB48E290A6FB33819> |-/H <1C60D8A8C9B6E3FA234780E58B87D2EA5F590A170732E8342AECC935166121E62A1070A4510D098032CE86B0487DD79307BBCAC2344B3292DE9A2D8082B8628F7C6E230EE648567F4904925AA4070E97FCB3EA4C73FA2E3142B18F75EA0EF5F062D038BAE03BBCF96552C8DD6B5D4B8747E5B552469E1B25986782E0B55D908AFB4A898DB9902CAE08C84B79FD04167BDD5A9E66D88F539A05377BA988B49C7EBFDFA962B967B5AE9DAE2C682A6E00F2705C6A21219B2987EF858D011EEDAA259CB8B502CDC00C7A32E14DD38C7C48E01FF854BF1DF45E706BF71F42F777A381F06D6C9B4C9EFC6AED73572FAEEB4318476678433B1ED0A51B6532A16AF3C291E604AD4889551281D976188DBCCE5E87B2250FDAB6DEAB32EBD03994B24989D9> |-/I <1C60D8A8C9B803802DEC08D98BCB1124DC97CC2168B04A76665CA4085863C1134DED52EF876B65C467960DD7B14974A90DA32178A8C0201F22E90F10D9F04A14033C618CAC17B75F13513FEEAE1D4A0FD6DB8D776D9FCA15F0400DBEA440D61D7EA23967363EF1098D6D4EAD2578D18D87B764EA14FC1B0329A8B2F96ED650C824B7D9FCB004F255C7B9DB4DDDD820C863> |-/L <1C60D8A8C9B66482C0AC2637AE818322843640782B4084B6BCB7EAC5B87BB576EB951099027BB2082BCC7485557848EF03B40B2EB92530435BB00C45D61522480C8796A82EF484C18DA82780A6A608D2AF86DBDD9D897934B97F7994CA6E17FD38486E39BD34B7586F9E2776CCA87540F517999D98A29B36F10CD04369FAA3B4> |-/M <1C60D8A8C9B5BA43AA8567ED4BE2D7FEDF84AA8E4D7C55A5BC42BD34F3277CCBB834BA74F53382342B0BA2F117A667CBDAF558D8C8C6BB52DFE7A951AC7F90B65CE73200D87C871483BCDABA867EF53CF58D923A6435A91070A9B8C57E2AC8D8757C5081292709B14AABF10DF398DAFB85ADC1EBF2FD6188FF6384A9B0EC88ED9C3C67FD1369FE1E51586F85AE8474F281CA47693B25D9154D6F07941252F00CFCC0ABAA961F75FE6F08A5C67C2DA703A2BABBD58AEB6A91D6EEBE96274043928EF3E9FBCB3DB234E95B1AF126B5BCE1E952BBBFAD047E0EA18D4396EBF2025C72> |-/N <1C60D8A8C9B6E3FA234780EB1A04772A480C0BA74E47A01736C3330B79F94973DD24567A876D5331B1C1E5BDF74D24451B47112EB46B9EF65275AA4A1B843B86074DC79A6CD0050A641BBD3D76F6A280A01B662CF540DC44B0244BA42328D0C0AD1033AC62F401A3DED6A2DEA6245CB4859932AF05637597C673C1E4554E6D1A85B9A271FFDD6802EE1900EEE3BF3FB1C692903A5561AF31F20EADA5B95CF7CED21BCF0DCD198120A75B66796A207B4ED846B6C8BCEB6AFE688E2BBAFBC7E620BB69A3B9327CE86F09F7F62A63> |-/P <1C60D8A8C9B65DE708408E897D8681FFF528127AC4B20DABDE3694037FF5C7CFF0F66599746818E44A88AE051EAA2ECC64A7F63066296DF5B94E5374A79101894F634254EBF61BB4676A0F5F95AD513AF7507835F91BBF2F6DB05C1913602214DC0C07048AC9F398A5400FC635BC3D7BE839FD2C9EAE0EFA08945ECA8DA23D80132909A7B4597A38120CAB750515AE457C3E49AB6D8454> |-/S <1C60D8A8C9B790A8C3E1550ACC8DA9C9FBD3A5CF2194CD2B8642D81A716BD00E790683F96881FACDE1F9315D62E9690B60701D527468B87CDFB0F4764C5597556AE6A1AC77EAC949F9287197658BC350D110E467DE690E505B49A0B78B79E2357C1B06B49C46DBCFC093C8FD052BE36FB8FD34081A4086AA2F339D541A84930A281511E0A17B9869F6AA55371F1C0D54B13DC306CE1AA830A9CC533AF6BD85406DAA830F9B2385417AD4B282844721D0D07F3AC31F2E4FAB062DE1D98E9BB1ADDC8425AA1837400BB1FE64042CEA44886B96F0827BA19AA957D2008F38EA9B013399E5BDAC4F2A> |-/T <1C60D8A8C9B6079F1E7C72A986CAA37AA7098C99AF0AF69B4A41FC4A68F1E13FE7823CB14087D1A03D6BFDE96D0070A345145633BA7CEFA8D419E4B3D53F3ADD4AFFBF58183F1DBEF117F5DA2182D1339AE0D68A7AE8CA1EE41AF8BD41A351EC8A2430F7755B61B26BC5EB1AA644C085DEE637125F5B22BE10C6D86DE87E0F1819F7C2FBA63DE9C720513FB0A1601F05E184CBD6E137BC266718B83D2495> |-/V <1C60D8A8C9B6E3FADD48816EB8424E8F57A41D8613F7E968C9BB1B02E143FC779521473E85AC3FDDB70230FD5AC8A799CC105B900902F681C26F2CF5169E1D28FA4F6B0C7A570A1EAEDD1568F3815B4073CFD3901DA4DC138D832EA953776BC457AFDFF8491C649A0DB6870897DD41335AD9B9589634784946F43BCBBD7A4581826E0D3C585AA4EFCF9736D89BF657946580134CB715D83D4A12A5D3C2E565E9CF92286FED111732FC93E1CA96F815A6B51DE39654A3FF21> |-/W <1C60D8A8C9B505563364AC8BE8AB65E15C6C08AD458A3C49B32AF7A6889CE67A7C3A7AE930FDF331D78AF6B2774B2E2F9165802F51899041EFBD3924C43ED76A472FF8E62DD42BB26872119346C8E5FAE87DF4A5B6404CEC1023A1889FE114BA5E56D8DAB21B203F5E6D874C0E17030C65A10469C5F86A53A7D1CFDBCD0E6B94604F94EF6BECF776BD9FD84BFC7AF2D1AA08788921B6CE8FD734B2E9372ACA3C7D976E4DF8C6EED1CE088EB43DC42B2D6388D9B8E9E4C6FA2D7E84106976063DE8EEDEDD5065F70DF6158531A23BF77B8F77A74E19614095CB2049840CA4D0D45F1041ABD9861325F1156E78D91D6A706606395E26954346A8584D3C7D06B32B91751B6AC28A5309BAC9B774A4A1514E73B9AA13764701722D129040EC> |-/bracketleft <1C60D8A8C9B857441457F48D14F3F47B30BCEFA5B1BB16AB48A411FDEDDBBCA4E8659FE72DCA596311382BB6> |-/bracketright <1C60D8A8C9B857441457F48D14F3F47B30BD99EBE2CD4840CE39569BE9FF8DDD4604DD868D11B34C9C90BD70> |-/a <1C60D8A8C9B7A73DCB03313BCF7AD8C8EE234E5372D46A65E92A78F4B7E02ECC58F71EE6C027AD4D56C5E4DE1AF1031295DC17C0E7AC8D8358634F9A19B02A110E5539C10136C68E0D2CBEA6658A501D9D73323861F8C29EB92F9080ACC3E236C5F14389534682EC2925F59CD4A215569A7BD7B9F7827A30BA75EB840535B2A2C8F92AD166CE93D277314A4C690C47DB847F73BFE1049631CDDB9124FD762753AA8DB187C216ED3005CA929015114EA53826E55872B63FD1FA60DB9883C727F137C754792AB823A705DD0DF28293037E1DA5DE4936C6573A1718CA6713783EC51D8DA977> |-/b <1C60D8A8C9B790A83D9E7A6001AC854EF8B943E743E91B99DA29586301CDD5839823233D99B1C577C1F4DFF0EA0F32BC2086F2707A7DD20AF9B67CEAF2A8142C0184903C062BCDA3F619B0D53D20F97863BA7527C41ABC984D83E79275377BA320AFBB48F48B2D10088BC89EBB9C01D05CB682732B7056131A0BF4F223A45FB196C15FF8C20088CC8B4C909F5F0D72D1839A24540D889C90DD68E933DDAD60B1B6BFBEF9B96EA41D08123BC10ECBE3BFA295FF397E499C14DA43850D729620> |-/c <1C60D8A8C9B77FE2B98B448AAC15CD6088822B1EF090F0AF6EBCC9DDBBDBF65EF50E59DA466BEF0FA242351362893C7564E99AEB6F42CD9ABC234329EBDD53E590403FF06858A28FE170B71597883CA2148468202C6DAD0EC83B55607026EDF229F6C24FEC7F46E5F53E3632239AC20591F5D1A939BB80017E6C55D3D86751973D2E06541F43DD3086EAE96863ECE0301F79F72109AFDFA112C3A8> |-/d <1C60D8A8C9B790A8362C570CE7DC14ED8339A5DD8D37983A5A2D0B4F515EB70692477F5F548E28F1DCAB41EDF4BA0728DAF245495BE02E394B0DD240B5D55EE51A3675003CB15BB911F900B1E5DDC9F583E654C623831C440B91AF47A14F90BB1788AEF8D63BB1C09A0DFFCC46AF6B9E95BF92169FAA4D5042B81ADB2768FDD695BCD7BA015B086BADFFD844444D05A45C7E170A2C8460474939E15E0EBABF1131915EE0697E92536E40A464505CA536EC3A6940E2FEEC193EC0EB65C18399A9D9> |-/e <1C60D8A8C9B77FE2B98B448A6D851DB2CAC9451BC5A778A9834F3ED148EF8C2095ABE60FC1B26DBB94057B63BED2BEE770D96BCB613AAAF017CD18C97CCA61C46589119EDD299B58A1852EFEBDB7EF2A6D8606D19DEFCD13B1531BE3098F0C00520EFD32FA435A0514B86269DFF5EE650657E526962BA2F3447589A03D4DA2371542253C2A1E1B028917A1E5> |-/f <1C60D8A8C9B83BB81FA130945C39F84E5B6E4A6C9F65F126BAA27979D5DD24D841AF174619487B50FE2700B1E5283B920CF0C36EBD127A2FB193DC3CC442CA2E2038702792712AC88F8A95F0FA297EC3B143EBC57B59693CDD3FD2B58E1A0E615D44B1BC286B802CB88D50954B5E67313CC26D2733BD799245E69ACF97F2A9BABCDB06A9D69EA77A4D41E95E2A8D3382998D0B0648C54FDA3BC85D30> |-/g <1C60D8A8C9B7A73DB58EA28807584EB19BC6EA1448A12312E623B90358A163CFC67672A34CC74B0AEAADF24229DF1CCAA1488AE3E348FE2ACD572EA487EC9D77FBB0710AB421B03DD5B8AE5519B5C269E9648E819E7ECE806EEF16A6618D07D9AAB350E57F26F5259E8FCF9E5C2D96BBEAD16502F9E7819E854042DDB2BC674C39681CC2E5224219582BC7B59BBAEF869C9DF91CA7770A97BAD53C3C3A99175BA8F0A5744B5969D3BC15831A95918F7C707E41F5D87B8DB2D57378BC9C297DAE69E4BF438246E63F565B22D86CBE28DEF748262FB9FF82A88935451D6280A28F1AD964E6E476D5779321E42D3A86BE41122F1BED36C3DC47E1E01C22534598D0431873197ABE1C8EC03B4011E4B26D249635BDBABB8E5B69BE07AFA65F88EAF6> |-/h <1C60D8A8C9B790A83D946A52D133532E9DDB252C41638FA043533341FF45F4E0EEA3BF171DE971DA044D93815FABEAC6A961DE24CD8980B97FCA250A2CD3DBC1C9175E22BC18E41FEAAE3FDFFC1EC461872FCD8D617F792306109E6C32D9EEF5544F9D280B7D28E77406A0CD8B488898A862DE88999A354709E3D39075170B03FDE60F1E3F7008331FFBCAD1B838829FBE76742914B50EBA96CF0A9BFB3610334BBAB609B960E9922A4587A5710F25CDF35D8C915B99DCE5DB414BDFAE707D88DDA35DD290F04B> |-/i <1C60D8A8C9B8574464F1B435BC57209FEB2C54026A3BBB707C1ACEEAD444C0BCD7940801068D7665A567CBC52ABA43208AF37F075A1C65586B76611081AB5310CF42CD496B0F8F59766AFDA0C4BF40BC709402C0DD0AB42B4F3987C50B5617CF3B4859C86132A1A7E65B42225B2228E50B44DBFBE367ABD36EBF02ACAD4FB895EE90259DCAEBCEFB9765574F> |-/j <1C60D8A8C9B83BB86FEC4D024150CA04554E200F53272B8D7E0ACF72631639195ECDA6C5023993C1F0A275818E30C9895799114AD3F9DEDF0FDD32E3475F87E182F6D1D5F4088DC5F2DE6D7F0089FD4803FF4392B4D3E6E13302514C8C29F5F8B3499217973564C156AE45D9AC7EF590B757A40EF930069520A6F6BE60FA60A65628551AAA971B3E> |-/k <1C60D8A8C9B78C669F28CFA812DED6139D7D856991235AB6C4AFC31BCD273487675BD2F1E5E12A90601E8813F546F4A251C2413363ED229861B6D9BB803DB05AFBD87A0BDB30ECAF79A6D7790B485108229A8E37CE114792148894516FD35B349631ABB537005E1976FEB58ECAFBA15317EB352D3CF9CB33300F195FC223A3F6046CEB2634BEBCF6E3727F7EE5A302BE446437A812155B254724D2537EB005F67E4A1C637E1D0B04296D89278AFEA4370D60C606D50CD21C194036AA2B3138CB3CBC2A27B2F6A619F68A923473FE4640A1DEB3A1DC3C48F4614D31FF09A626A640D3780A65E6F12B49D1B402046EDA42CFE7231C1BAE09391B8A756CE69E> |-/l <1C60D8A8C9B8574464F1B434E924E8E17F47A16A389514CB900F56482ADFB78CE880D41A1EAC41DBDDDAD723AAD75825AFFB2E5AD2853D684AACA377F4CFF61F8762E467D7432F03C259012AF7AA821CB502C120A1BA693F9CB4DA4BB1D32A> |-/m <1C60D8A8C9B6B41CC7B459B6536767B373D430A0825AAF7F773A561A708685F0ADC4DCB9E0E589E1CAAE041E74610D0912668FFE67D85ABFB6E9711A1BAF6F79493EB629ED4D3069526CA46405DD9F73AD135427553F5CDC8070A373FDB5F5A7AD8D914FF454B75B35631947B95DC641889F912441897F121AE16882579BCC53B16D47CA54C4908CBE037FBF67C528547181A184312131D4D65FF7959C28CA395660C25E9C563755BC71DCFA28B59C3A13B5E81DB9FACCD1252B7053BB33D50418E59EE521DC7525ADB81394AB30A35828C200015E3FE5BE852ED4AB6ACCF3B9F483FFA6386BF5C3D4796E775B9756A63267B38CC586E602C79FEC3D829BD73DEA28076EBF772DD2FA9C3C2744EA327CB7C4D34C562F1F21313655866C2A7572FC9154DAD1B72C2E50CD60B58A8D1B86850C2CBABDC131A290C26EAFCCE4803F5EE2ECB4CA746831B1> |-/n <1C60D8A8C9B790A83D946A52D13353207152D3DCC239C62B9F0F0BD9624AAEAC8EB33D804BC103BF4C84F8FCB252709B3422B4E5F4D698E79D5531B2BC676C0D12EEB603C056C169F17DCC9F0F6AC43F292D82458847D2D279D19F466EA84C7027B712BFD7C4B4B770C9E0BD2D556C526F95495C91C927B8F7463DFDACF3970984B31C39C074ECA243D9C8BFA10955B7D910908799AA616A425B937E17FF6121AD71909EE5D3B89CA2D13AAC585FB6F54A794E7F44844B39E96B6AE21032D420B68967AC9AC0F0DA0D53B8016F26EED527CB2387F1592BCDB6A91E073E83C3181BD7505792D4855E> |-/o <1C60D8A8C9B7A73DCEB07E09D16841D605E4F67059E6B258F546B80703E4CDAF20027B900118209D5372F965F2045D50C02A29110A048C891DEBA3210CDFC5CDE2309C0CDE0E4855E9F6D8954C4C68826A14AD2E4C6227A036D85D304D6A96FEAA92DEC3CD1B9F4AD57B5F1EBAB070FE911461A7D5B958F5> |-/p <1C60D8A8C9B790A84D73DFE4D381CFD68735E4475645A4E53BCF7DB579C1AFDD13D1A6F15CA06B47ED1C3E1B244798306364BC5CABD6DA63519493A5C659BC60B5447F0104F114BE694DF580105735E360631FEECD6EC7A012CC851718281D07B0CC157A8E7B5931B7103AE94662442B62C7C336402079CFF632ADA590C0779C308A1FCAF94180306BE01E5D89C2BD042F11A347AFB582199E7E84F8C797ABEE0EDBB75C6E1AC5F4E76437DB6ED4E096E1BDAADA422AEEAC70BB94A61E61EC7C901D077227549E6F61C4273BAEF20A141FBE8FA9A551273E39D70B> |-/r <1C60D8A8C9B734780FC88FD3B21DF573DE0BD8E19ECF409327C58E3627DF4B64D82C290E296AD12D16F3BDD53C90C5D592551EDF5E8C7E8FE6B97498610F068FB40EF014C6896F922B40CC34CEEEFE16781389974FD1D8010C3A1B93DA9423D6C4280D86498AD092998E974DDACA1FA3CA4F3751905AC346A3F69D4682194D3342733C7CF3000C654F8E9DE159A2316F10B36E49A0996D15FEF4DE5D84332102ECD35D818CF4C1F221D14DB48C0FB5BD30A2> |-/s <1C60D8A8C9B731071688E37ED9B7C64FA956A3F4F3785F4130685F1AE6ECB30084C557AE5797D39605F849A2D9ADE2A65CA0927636C7629B25FDC4D569E897F36515E172780EBFB2CFAF71CF0EA8B4DD392E776CF20E7204D59F8DC03F56CB4421E12FE8430EBD29CFDF5F6509E086EB0664E99116F88F2D5E9A8F8E96C847773BE6B8B90D0A0CCE846E18C0A1DF77A626724C95EC9E6FDFE55022CAFC8918AE45838B303979E3A9BFE7F7BDAB73505805005500EF4C5AC6405B1E840CF1B619C716D89CA7E80EEDEA1B928C67F7A10B24DE3EC254855DAC8B83797B28> |-/t <1C60D8A8C9B737EC5C828C415A21EF65A8DCE4AB75C4F804FD2F74AAED0332CF1075799E326C4CB510197DA3A668B8EFF3F2CAC89EFC9F1E24EFCBB6E4F7D58562BB90C45FF297D6656314FD65E690525FFF895AC8C24B58CDA801> |-/u <1C60D8A8C9B790A8362C570CFB2800E8CBF5A206A67F17BAAE343254C03E958F83CB5A12ADFA8B4412150589560DDE9B70784A29B02FB60C9645231D13A978308E5EE53984B78C9AC2AA2F0EE5269299E66EC0A2F6D2FC9C7C56146B4A2D450F3E529F72E7D7FD96107695E2148A6B3CC77B93CD510A44599C53106E6043B1ADA6520148DE> |-/v <1C60D8A8C9B78C669403575833C8C1B14674B390D764957989B7FCA39046F88EAC215F3348F64657FA41BBBD2D5465C3FAEC5C4992D77A70D6D0FF5B9FE84D58B8A01F974B26A648270BCBC3DA08E1FB6DCB4BD59931217BAC36EE05C15D6C9332DAEE553F44B623DA84A3E35E45703CEA683F59CB5D7DC58019327FAA4690D7E0848C4054F367D2C3BF6371C99CA6751F50C10017AA2754321B985E8B60B10B9F082539BC1A53136644081D5FD9AE168FC766A25A8946C2> |-/w <1C60D8A8C9B6079F1534F6C9E4A028DF1A3B0F45C5ED9660DAC93A0D8C3F14212FFFC33A5BF9F9DD1C33FCCFCA8E96FE6463AF5069DBFBDDA36D99F88520652F25FDAFA9A8FF2873E3FDAD8A56EC3357F44ECB370CA4BFB8352215DEAFC22A0DFA018C56F834AADBF74CAA36536863C75BD9D7A1CEF77767FBD18809BFE6294ECFE5D3634C7FCBBBF987220663EF315339F3D9AF5AA5B0F66F6EA972A5EE22BB54794478F89EC6375B180C36468ADC7E7CAF0A17CB4A0ECCE19DAEAC46ADA738E6EE5AB37B1A9CDCACA6A56A4B556E8FC78C8021B1E08F770EC97987838BDF3A71E528C5695396142E79124F182E83C76D32BCA38AD1CB77748E00880A049F1E82A6C5E7A5A7404A74F28E09F8202A196F8E9F69EAA58A4A3555B55F> |-/x <1C60D8A8C9B78C669F28CFA812DED67DCEB62F17AD12F7D7900E6AD3161B3BB6A9E88D307B5F8CC0D753B8AC565B099CC0ACAA4A7CA31F2811E297F44D0DEB72F7C315759FD2E63382EDE3061A24E5309BEE98D8290B6BC9B628BEBD7F7D73F1B5EA640583D87E4AD24CB7F7908FD9A3DC9303785637F3B203908DF84330922688D7A03D094D4EF700DA6BD8427088868109E238A57C22F5759A9FC99E5C3C3F2D6B15D44C534041C741DF56BEDC796180345856EA6BBC1BD98F587E929532F631C96BE91F404EF68AE1203A5AD95C9FFBED9A1E5A7A1275795AE78846990825436FB611A109B66853254DCAC13E4C6298C531E7AEB98A1184600057B10A9DAB09484AF36A38858BAF4BD8E53752011A5652B9FACEB6B61F17736A8E4776835DFBDE552410043F2D535B01DBC3DAA1EA0A782CE3B35114AE12> |-/y <1C60D8A8C9B78C66EF659E90818F97757EE825CF655AFC48477B2EBD1F4499DC02D3D00D2C79F15A6A14FA0E2836DE647DF694EA1CBE5D7DC52383058018A4A5582F22DA6D7CA5C65B837F7ACE7A37D8295111416CC9542C83315A00DCC58E29D7A527B2702A3D42A1DF4479D981119205E9B3AA4589ADB8E455F287AEE97EF0B05E9F424581B6FBD77BBF4A2F94CB7C67A1D393F0F92A930746CD86812D0F3B42F48F3482F4A9EA27C315DF77B6F7CF19EE636DE6A48B0C90655339955118E2A4E2CE041041FB27A226D9B9C797FB178764482B1E4FE17D6316683F26947316> |-/z <1C60D8A8C9B77FE2B22E0F07D895063A6CBFC8958E5265B47997FDB44410EF82082C1184649626F6371AF344118760364B6EC30D2E25540C9A8EEA16C343FAC809855F7DAEF0E07CA7BC51F510A8186DD54C20ED97C04F0C8551F34EFD1187F6F14F39> |-/.notdef <1C60D8A8C9B7A73D40> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/NOAXUU+CMR10 /RAAAAA+CMR10 findfont ct_VMDictPut/NOAXUU+CMR10*1 [11{/.notdef}rp /ff /fi /fl 26{/.notdef}rp /parenleft /parenright 2{/.notdef}rp /comma /hyphen /period 2{/.notdef}rp /one /two /three 2{/.notdef}rp /six 3{/.notdef}rp /colon 6{/.notdef}rp /A /B /C /D /E /F /G /H /I 2{/.notdef}rp /L /M /N /.notdef /P 2{/.notdef}rp /S /T /.notdef /V /W 3{/.notdef}rp /bracketleft /.notdef /bracketright 3{/.notdef}rp /a /b /c /d /e /f /g /h /i /j /k /l /m /n /o /p /.notdef /r /s /t /u /v /w /x /y /z 133{/.notdef}rp]NOAXUU+CMR10 nfNOAXUU+CMR10*1 [9.96264 0 0 -9.96264 0 0 ]msf18.0133 295.897 mo(CombCN[16]isaautoencoder-basednetworkforvideoinpainting.I)[7.2 5.03999 8.04001 5.51993 7.2 10.1999 2.75958 5.03999 4.92017 5.6394 2.75958 6.83997 7.8 5.03999 5.51993 3.84 5.28009 4.43997 5.51996 4.44 5.28006 5.51993 4.44 3.96005 3.35995 5.5199 5.03998 3.96002 4.44 8.15991 5.51993 4.44003 3.60013 6.96017 5.03998 3.96008 8.03976 2.99994 5.03998 6.72025 5.27991 2.75958 5.51996 4.43997 7.91988 2.75958 5.51996 5.5199 5.03998 2.75958 5.28003 3.83997 2.75958 5.51996 5.04001 5.51962 0 ]xsh312.133 295.897 mo(tapplies)[6.71991 5.04001 5.51996 5.51993 2.75958 2.75955 4.44003 0 ]xsh3.01326 307.777 mo(a3Dconvolutionsubnetworkfortemporalconsistencyanda2Dco)[9.71992 5.03999 12.2401 4.44 5.04001 5.28008 5.03978 5.03999 2.75958 5.51993 3.84001 2.75958 5.03998 10.0798 3.95999 5.51991 5.51993 5.51993 4.43999 3.60017 6.96017 5.03998 3.96008 9.83978 2.99991 5.04001 8.64017 3.83997 4.44003 8.27994 5.75983 5.03998 3.96008 5.03998 7.31976 4.43997 5.04001 5.51993 3.95999 2.75958 3.95996 3.84 4.43997 5.51996 4.44 9.95999 5.03999 5.51993 10.2001 9.71994 5.04001 12.2401 4.44 0 ]xsh310.693 307.777 mo(mpletion)[8.27997 5.5199 2.75958 4.44003 3.84 2.75958 5.04007 0 ]xsh3.01326 319.777 mo(subnetworkforspatialmodeling.Incontrast,ournetworkuses)[3.95998 5.51993 5.51993 5.51993 4.44 3.60017 6.96014 5.04001 3.96005 9.11986 2.99992 5.03999 7.92021 3.95999 5.51991 5.03999 3.84001 2.75958 5.03999 6.71967 8.27992 5.28015 5.51991 4.44003 2.75958 2.75958 5.5199 5.03998 6.83966 3.59995 9.59991 4.43997 5.04004 5.28009 3.83997 3.96008 5.03998 3.95999 3.84 6.59943 5.03998 5.51993 7.92014 5.51993 4.44003 3.60013 6.96017 5.03998 3.96008 9.11983 5.51993 3.95999 4.44003 0 ]xsh286.094 319.777 mo(3Dgatedcon-)[5.04001 11.6401 5.04001 5.04001 3.84003 4.44 9.4798 4.44 5.04001 5.51999 0 ]xsh3.01326 331.777 mo(volutiontofocusonvalidfeatures.Meanwhile,ourVAE-basedmeth)[5.03978 5.03999 2.75958 5.51993 3.84001 2.75957 5.04001 9.47978 3.84001 9.12015 2.99991 5.28008 4.44 5.51994 8.03998 5.03998 9.59976 4.68001 5.03999 2.75958 2.75958 9.60007 2.99991 4.44 5.04001 3.84 5.51993 3.96008 4.43997 3.96002 6.83942 9.12 4.44003 5.03998 5.28 7.20001 5.5199 2.75958 2.75958 4.44003 6.71957 5.03998 5.51996 8.04004 6.36017 7.44 6.83997 3.35991 5.5199 5.04001 3.95999 4.44 9.48004 8.27991 4.44006 3.83997 0 ]xsh308.653 331.777 mo(odshows)[5.28021 9.59995 3.95996 5.5199 4.80014 7.20001 0 ]xsh3.01326 343.657 mo(biggergenerativeabilityagainstautoencoder-basedones.Asare)[5.51993 2.75958 5.03998 5.04001 4.44 7.91998 5.03999 4.44 5.51993 4.44002 3.96005 5.03999 3.84 2.75957 5.04001 8.28009 5.03998 5.51994 2.75958 2.75957 2.75958 3.59987 9.36008 5.03999 5.04001 5.03998 2.75958 5.51993 3.95996 7.8002 5.03998 5.51993 3.84 5.28009 4.43997 5.51993 4.44 5.28006 5.51993 4.44 3.96008 3.35992 5.51993 5.03998 3.95999 4.44 9.35992 5.03998 5.5199 4.44 3.95999 6.71965 7.44 8.04007 9.11993 3.96008 0 ]xsh292.693 343.657 mo(sult,)[3.95996 5.51993 2.75958 3.83997 0 ]xsh%ADOBeginSubsetFont: ACAAAA+CMTI10 Initial
%ADOt1write: (1.0.24)%%Copyright: Copyright 2021 Adobe System Incorporated. All rights reserved.12 dict dup begin/FontType 1 def/FontName /ACAAAA+CMTI10 def/FontInfo 6 dict dup begin/Notice (Copyright (c) 1997, 2009 American Mathematical Society (<http://www.ams.org>), with Reserved Font Name CMTI10.) def/ItalicAngle 0 def/WasEmbedded true defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 65 /A putdup 69 /E putdup 83 /S putdup 84 /T putdup 86 /V putdef/FontBBox {-25 -250 916 750} defendsystemdict begindup /Private12 dict dup begin/|- {def} def/| {put} def/BlueValues [-22 -0 431 442 665 667 683 705] def/OtherBlues [-205 -194] def/BlueScale 0.04379 def/StdHW [31] def/StdVW [68] def/StemSnapH [22 31] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings6 dict dup begin/A <1C60D8A8C9B61AE93D5243F0E59A18419796D326382168F638C010ABA039F9EC9811BBC648B830A1045FDE3D242E1373B51CE9449E2A1972E5EE31AB70A97F1C4D3B985E2A06778946A58704F808896DC5A92CCFB4841A0F93394A5D6AB18E89ED92E9F693ADFDE5AA9850DA62ED9340A435F5DB00F1E6A131264C86FA340BEF78B2EBD9C8C1F9366FCA9A1C351D123529ECF1B742DD9A76C70A47CC50F51C6B4B28396BBF8E0011177177D330AD1713EE6667F50EFBFCDF870CC46448B2E5C878425B0B8488FC5E66683C8288DB3BC2B061CB47D5BB7654E8CA88BBEE2C9B85FE> |-/E <1C60D8A8C9B65B439BA4FB6FCDC61BD4CCF8398707D7B6EDBF5F5D3379726907ACDED9A0659318A6F91A9B4CAE6EA631BDA4C2045150F6EBF7915FF4504B96B3BCD90BF7FF1635F44306B356213DFAB3E8B3E2D6420C03EAAE15B7C4E44CCA8DF8462FF56B5F0C7F4E51B6F451DD793C933FBAC886CAB5D1328DA03E19AB33B76AA719274E908B5FC99C600E7E3E2E32C7248F7EDE59597747541E79C8EDC700CB0CB89F4C47CDC6BE852EDC518538BFF8AB89A14E6D2ADE0E91B05822E17C6F61576BE9508ADF612449F878D236D4B6238D1744D36057B1F4BB34E2B2E03F7CC809783681A40533811B2E8F49389EC4165E72120CB5D4DB46435E5990E67AC3> |-/S <1C60D8A8C9B7E9652BC62BE5B56B73D17F9C36277D0723C9DCF055D04AF78F61AB04CB07E5E1E7AB6F60F69738B1A2F3F8CC1CA49B23399C4EE4A470104E7A524F176065ACDE3B033C8E71FEDB6D7FA28079C64441DF5261E80C3531CB1E93304BDC07D02B52345A07FDBF81D16A6AFE36BB7894CB64B41831524FB38C2B98B254FCAA1AF6DF8B1E7F4AAF1470951C7802FC9F92F53A9003F74D426A11BF36D2F99BFAD71498CFF5A2066C1252486CA651BFDFA02FC8AE71B2DD46FA0AB737EBDADB597CAD6D3212DB0578846ABDFC468CF1050C63C0DF092313196C056FFA9ED10F000C5FA1244F2EC36058C97FE1E3DE> |-/T <1C60D8A8C9B63EE6895172FDE94FAE9E6008DAD196014CFE42FC535F62A0EDEF44C9126A3B44A96905DD1C7AE848EB18D03C409CB42C9FC93B8D77E90B902031E1EC020C2A19B41E6B38530F11FF03B28739645FD8E0F627937A572499637C4871186F9CFF0695A07033E9EE61BF1B697F946BF1108B4E9C291AD6CB1BCF52E7FC90B8E76BC62DD55592DD2E9895925E37A2FDF2DE3CC895F2062E502F62D08081B6029D6A8435D0712F2E35CDCEDD35AF565B347EBCC89E15FB6EB41B91F1482793594F29260CB97C04AEC283EB08BBD122871229E068529A3F76BBBC62FB537C6F7084B24A77EEFA5E33B02E10543B1E7CC9308510> |-/V <1C60D8A8C9B61AE9C3A6D0D394F9B55709D6E803B70D230973425E680DFCEFAEA4B319608C1DD795E657C84A9B2DFF670D99AF5CB09C8842832DDDD1A09E75DDD78EE44268987A8C836DDBA63FC5B47ABDF91078A8D3EBD574A2D32BE5B99291217D191735C5BD015B9E04366AD90F2DD477A4D4DF3773527B91AB51CBCCBC4E21B29ECA85B4CDCA28D5F8E683A19BF1E0F9D9939C245AC6CA73FE817F1CADF2FFC98FF60BD59137ACA04E0DF739665823FF3CCC81C04FF8DC852E24836D253D1AD2A0002578C21BD4B5A1B96864F2043B96> |-/.notdef <1C60D8A8C9B7A73D40> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/NOAXUV+CMTI10 /ACAAAA+CMTI10 findfont ct_VMDictPut/NOAXUV+CMTI10*1 [65{/.notdef}rp /A 3{/.notdef}rp /E 13{/.notdef}rp /S /T /.notdef /V 169{/.notdef}rp]NOAXUV+CMTI10 nfNOAXUV+CMTI10*1 [9.96264 0 0 -9.96264 0 0 ]msf315.613 343.657 mo(STVAE)[5.63992 7.07999 6.47995 7.43994 0 ]xshNOAXUU+CMR10*1 [9.96264 0 0 -9.96264 0 0 ]msf3.01314 355.657 mo(performsbetterthanCombCN.)[5.76009 4.44 3.96005 2.99992 5.04001 3.96005 8.27992 7.20006 5.76009 4.44 3.84001 3.84 4.44 7.32014 3.84 5.51994 5.03998 8.88 7.20001 5.03998 8.04002 5.51991 7.20001 7.44 0 ]xsh18.0131 367.657 mo(TheVAEmodelproposedin[1]\(MLP-VAEforshort\)isadeepBayes)[7.2 5.51993 8.64017 6.36014 7.44 11.04 8.27994 5.28015 5.5199 4.44003 7.07944 5.5199 3.96008 5.03999 5.76001 5.03999 3.95999 4.44 9.59976 2.75958 9.71997 2.75897 5.03998 6.95972 3.84003 9.12 6.23999 6.8399 3.35995 6.36014 7.44 11.04 2.99994 5.03998 8.1601 3.95999 5.51993 5.03998 3.96008 3.83995 8.04016 2.75958 8.15991 9.23984 5.51996 4.44003 4.44003 9.71985 7.0799 4.80011 5.03979 4.44003 0 ]xsh335.773 367.657 mo(ian)[2.75958 5.04001 0 ]xsh3.01314 379.537 mo(modelthatcouldlearnstochasticmappingsbetweenobserveddat)[8.27994 5.28014 5.51993 4.44002 6.59973 3.84001 5.51993 5.03999 7.8 4.44002 5.03999 5.51993 2.75957 9.35983 2.75958 4.44 5.03998 3.96008 9.23978 3.95999 3.84 5.28008 4.2 5.51993 5.04001 3.95999 3.84 2.75958 8.16006 8.27994 5.03998 5.51993 5.51993 2.75958 5.51993 5.04001 7.80005 5.76007 4.43997 3.59985 6.96021 4.43997 4.44003 9.35974 5.03998 5.51996 3.95996 4.43999 3.96008 5.04007 4.43997 9.12009 5.51996 5.04001 0 ]xsh294.854 379.537 mo(aandlatent)[8.8801 5.04001 5.51996 9.35986 2.75958 5.04001 3.83997 4.44003 5.28012 0 ]xsh3.01314 391.537 mo(variables.Thus,MLP-VAEdiscoversmore\015exiblerepresentations)[4.68001 5.04001 3.96005 2.75958 5.03999 5.51993 2.75958 4.44 3.95996 6.95944 7.2 5.28001 5.51993 3.95996 7.07974 9.12 6.24001 6.83992 3.35992 6.35994 7.43999 11.1599 5.51993 2.75958 3.95996 4.44 4.80008 5.03976 4.44 3.96008 8.03979 8.27997 5.03998 3.96008 8.63989 5.51993 4.44003 5.27991 2.75958 5.5199 2.75958 8.88016 3.96008 4.43997 5.51996 3.96008 4.43994 3.96001 4.43997 5.27991 3.84 5.04004 3.84003 2.75955 5.04007 5.51993 0 ]xsh301.813 391.537 mo(thanother)[3.83997 5.51996 5.04001 9.96011 5.04001 3.83997 5.51996 4.44003 0 ]xsh3.01314 403.537 mo(baselines.TheoverallperformanceofMLP-VAEonthreedataset)[5.51993 5.03999 3.95998 4.44 2.75958 2.75958 5.51993 4.44 3.95998 7.43942 7.2 5.51993 9.11986 4.8 5.03976 4.43997 3.96008 5.04001 2.75958 7.31947 5.76009 4.43999 3.96008 2.99992 5.04001 3.96008 8.27991 5.04001 5.51993 4.44 9.00006 5.03998 7.7998 9.12 6.23999 6.83994 3.35992 6.35992 7.44 11.3998 5.03998 10.1998 3.83997 5.51996 3.96005 4.44002 9.23999 5.5199 5.04004 3.83997 5.04001 3.95996 4.44003 0 ]xsh300.012 403.537 mo(sissecond)[8.51999 2.75958 8.75986 3.95996 4.44003 4.44 5.04001 5.51996 0 ]xsh3.01314 415.417 mo(onlyto)[5.03999 5.51993 2.75958 9.71977 3.84001 0 ]xshNOAXUV+CMTI10*1 [9.96264 0 0 -9.96264 0 0 ]msf39.3729 415.417 mo(STVAE)[5.63997 7.07996 6.47997 7.43996 0 ]xshNOAXUU+CMR10*1 [9.96264 0 0 -9.96264 0 0 ]msf72.7331 415.417 mo(,asshowninFig.6.However,theGaussianposteriorimpels)[7.19957 5.03999 8.39983 3.95999 5.51991 4.80008 7.2 9.96007 2.75958 9.95984 6.47995 2.75958 5.04001 7.31958 4.91992 7.31949 7.44 4.79984 6.96017 4.43997 5.04001 4.44 3.96008 6.95972 3.84003 5.51993 9.00015 7.79993 5.04001 5.51993 3.95995 3.96002 2.75955 5.04001 9.95978 5.7601 5.04001 3.95996 3.83997 4.44003 3.96005 2.75958 5.04004 8.27997 2.75958 8.27991 5.75995 4.44003 2.75958 0 ]xsh3.01323 427.417 mo(themodelunder\014tting.Theseresultscon\014rmourjudgementtha)[3.84001 5.51993 9.24001 8.27992 5.28015 5.51993 4.44 7.43958 5.51993 5.51994 5.51993 4.44002 3.96005 5.51994 3.84 3.84 2.75958 5.51993 5.04001 7.55942 7.20001 5.51993 4.44 3.95999 9.11984 3.96008 4.43997 3.96002 5.5199 2.75958 3.84003 8.51999 4.43997 5.04004 5.5199 5.51993 3.96008 12.9598 5.03998 5.51993 8.52014 2.99994 5.51993 5.51993 5.04001 4.43997 8.27992 4.44 5.27985 8.63983 3.83997 5.51996 0 ]xsh295.933 427.417 mo(tweshould)[8.5199 6.96017 9.11996 3.95996 5.5199 5.04007 5.51993 2.75955 0 ]xsh3.01323 439.417 mo(utilizeSylvesterNFstoapproximatethenon-Gaussianposteriordis)[5.51993 3.84001 2.75958 2.75957 2.75958 4.43999 8.75986 5.51993 5.27994 2.75957 5.03995 4.44 3.95996 3.84001 4.43999 8.03999 7.44 6.47993 8.28 3.84 9.24008 5.04001 5.51993 5.51993 3.96005 4.79984 5.27994 2.75958 8.27994 5.04001 3.83997 8.51993 3.84 5.51993 8.75992 5.5199 5.04004 5.51993 3.35989 7.79999 5.04001 5.51993 3.95996 3.95996 2.75958 5.03998 9.59985 5.76006 5.04001 3.95996 3.84 4.44003 3.96005 2.75958 5.04001 8.04013 5.51996 2.75958 0 ]xsh307.333 439.417 mo(tribution.)[3.83997 3.96005 2.75958 5.51996 5.51993 3.83997 2.75958 5.04001 5.51996 0 ]xsh3.01323 451.297 mo(Moreover,Detection-and-CalibrationBlockisalsomoree\013ectiveth)[9.12 5.03999 3.96007 4.44 4.80016 5.03978 4.44 3.96005 5.03943 7.56001 4.44 3.84001 4.43997 4.44003 3.84003 2.75957 5.03999 5.51993 3.35992 5.04001 5.51993 5.51991 3.35994 7.19998 5.04001 2.75958 2.75958 5.5199 3.96008 5.04001 3.84 2.75958 5.04004 7.79993 7.07993 2.75958 5.27994 4.19998 7.68002 2.75955 6.47983 5.03998 2.75958 3.95996 7.55994 8.27991 5.03998 3.96008 6.83997 4.43994 5.75995 4.43999 4.44 3.84 2.75958 5.03986 6.96017 3.83997 0 ]xsh291.973 451.297 mo(anmultilayer)[5.04001 8.03979 8.03976 5.51996 2.75958 3.84003 2.75958 2.75958 4.79987 5.03979 4.44 0 ]xsh3.01323 463.297 mo(perceptronsinsensingandextractingusefulspatio-temporalin)[5.76009 4.44 3.96005 4.44002 4.43999 5.51994 3.84 3.96005 5.04001 5.51993 7.20013 2.75958 8.87978 3.95998 4.44 5.51993 3.95999 2.75958 5.51991 8.15993 5.03999 5.51994 8.87976 4.43997 5.27994 3.84003 3.96005 5.03998 4.44 3.84003 2.75958 5.5199 8.1601 5.5199 3.96002 4.43997 2.99994 5.51993 6.11975 3.95996 5.51993 5.03998 3.84003 2.75958 5.03998 3.35995 3.83997 4.44 8.27997 5.75977 5.03998 3.96007 5.03998 5.87949 2.75958 0 ]xsh278.413 463.297 mo(formation.)[2.99991 5.04007 3.95999 8.27997 5.04001 3.83997 2.75958 5.04001 5.51996 0 ]xsh%ADOBeginSubsetFont: ECAAAA+CMBX10 Initial
%ADOt1write: (1.0.24)%%Copyright: Copyright 2021 Adobe System Incorporated. All rights reserved.12 dict dup begin/FontType 1 def/FontName /ECAAAA+CMBX10 def/FontInfo 6 dict dup begin/Notice (Copyright (c) 1997, 2009 American Mathematical Society (<http://www.ams.org>), with Reserved Font Name CMBX10.) def/ItalicAngle 0 def/WasEmbedded true defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 46 /period putdup 51 /three putdup 52 /four putdup 65 /A putdup 83 /S putdup 97 /a putdup 98 /b putdup 100 /d putdup 105 /i putdup 108 /l putdup 110 /n putdup 111 /o putdup 116 /t putdup 117 /u putdup 121 /y putdef/FontBBox {0 -201 1051 700} defendsystemdict begindup /Private14 dict dup begin/|- {def} def/| {put} def/BlueValues [-11 -0 444 453 655 676 686 697] def/OtherBlues [-201 -194] def/BlueScale 0.04379 def/StdHW [47] def/StdVW [114] def/StemSnapH [40 47] def/StemSnapV [114 142] def/ForceBold true def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings16 dict dup begin/period <1C60D8A8C9B82D668F641ACD8A8701A6926D63D9331224D805B59AF6A3BD8F663E9C2FE230926B1F3788> |-/three <1C60D8A8C9B7FCB6A4EC6CFF5B7E8A646CFA99E79027FA1E27F1D442DE8AB71A39759F5525E707D743CC0FEAB4033857D7F0B4C7A6F8FBFB5A935099B429C99C13203178EEA9B1073B247ECB796B06FE996B3D05FBD6A7E0F21BE1EADC781E6E7F5E6ABC5A7404FA09CF5B65949D8D09BFC8DE32902F3BAC8BD07286D74960DD2AB72945FAF8256AADFA01A34A0D1646636F1A5CD2616092FFCCA26EBF6D5C28875F2B3DBAFD204CC9431C3EAEB60A528610CD3C52A0484A51A3990E2EE8A4670066476DEAB3360C8B2D89CCCF73C76CC6F246D7C4C2602F1BF856712A7C04F2182331A8E49BF570E4E66598DCD1> |-/four <1C60D8A8C9B7FCB6AF8364F0605C451CEEA3B4E1B916196AB7B08943E0CF71744315D573147B01821B98A6E1D4D4D879C9FFD38F4E4551A3DC30910686735A4AD4544FACDF1A4F38B21E42CD8A27B61D98A9ED8A48A8E901E57955F5855D4563E1D3F62285FC8B69E88AC30DFA0BEF558A27FEAEF07D17986F4130CD44482527> |-/A <1C60D8A8C9B698731BF9F85600975F13A83539F63330B0908F135EFF0A9BD14BA9BCA5930AC0AB81009A187E4877D59D4581D6E5B9668FA093F78AF1828D5F043581278B9E7CBF7EA29E3B527B530EB91C5F00BC840B1C314A99495B7DF704B2446433DF0DD24C8F5CBF239D20D024D3AD3F41FDFEC762F7F16313F8A8BD1A8303FBC8D5171ADA6BD036650789F42170BF64441A80938C4D7057364234C1F25BE19A697E459048CCE11F831339EFA2D6291E691DD14F6BCD02F377> |-/S <1C60D8A8C9B673A5107C0803D224E8036A7259BC3C3F10FE0C8480B9E599E304E78E55995D7301B373F85DD9CB8530EDEA12FA497938A812B2C7B3CAC18A094926E492A51A6B7F1A86897413AA3ED7567444D269F1390C283728E4C05A026E21F43F137B71E20D8B287D3E8D718C3D241CE95B6D43D608DD1CE55F9B5B839629621C03A7A624ED87C1047B31042C4F8D35452522883A72C796D70C49892D5C8CEE636290D8B12A8660CACE498120CE654C6986D415A74BD58D712BECD2E23A97F8C8D5A6AA30B6C1F0599A4098D64AC3D66028190E65E873393668C6F9CAD5> |-/a <1C60D8A8C9B7ECD93D27CE21AEBDD246A2EDAD1DDC54B7649B57A058C4CEA277FC7C7DD1C54BF98C83F3437D2585B3176D3588C21C426C9FC5084597B0EE27FF6384D04BF5179105567277093FE3A7D89B6E20CA29F205D88EE708F35BA52A592F3114C76F2AEBE12F78DFF3CF334BF6BF3784A24BCC510B9D034022939656D3F0E72A04719CE534F9C6F812FB41760C92C0DEE132926EAAEEF4B214975AB0F111454B7F8C48E52804CD3043606B4744A9B7A5C05D68166578280569DD9419F371D26399> |-/b <1C60D8A8C9B673A51B05B6E56F745CE7C024405D3C43D80F6BB15FB57ADE959D972A08B8926CB8BC50944564F7F339BA7DD1F7649710A3599EAC97E92D0ADEEEFC88F6CB3EBE8A833802DF4C7C2CF6EE987CCD68380FDAD347796FC4643A49B8127D188D6DA631C5F9201516A7F4D1481FCFA3F47AD5A2D4FA1715724AB5B10BC0164AE41129C80A4C200CAEB26DBE63C0A9C58078CC92E895704723B3D69FA62B53DCE9E868B6E97305CFDF> |-/d <1C60D8A8C9B673A51B1FAFDF4A0934F148B495C75352DF10517E5042E84C972B1B926F406688D0B58FC4EFCF7045AF6AB1A996B63AA66D32B0A4044FF5BC4B0AC24257FF8D2F15BF53121827CDCF0A17E104F07D4736081658FA8E4F57CCA850D96D4B44F24DB2A6AFDDDF0465D64093B69CB170EAD8B8C9F93A30D2BE40E616C7B43E7AC364D8980967EA944C3164580C01FBBA3DADDF58DFC860FBA578293CFF129D9B953CC5236E20D918DD9F27F0D44E> |-/i <1C60D8A8C9B82D668F2996CAA7E022F21822794935D7711F3DE382799AEF7B8ECD20EB07B8CC1D217CDE3FD2E6B89CCB66F5DC5B771D2D086483D57D35AF54084340ABFD23A5FF46CBE37B6627E05786CC2E4F6A35D306ED985645B41C76F46EBDD85F54DC8145AF108A703E3C38CDF8F85FE05A91450B3A15EF03D800DD3F35D314E51D696DF05551E1> |-/l <1C60D8A8C9B82D668F2996CB94A8C3E3C5D197839CC7263AB460C357A2080560849928F7D694C68055DF1ED9ABA6DC9C2FBB3B2659C08EDD732614DD43BDDCB7269843C077FC910EA839230C096C5DBA666784CCDF6B319C3129> |-/n <1C60D8A8C9B673A51B1FAFDF4A0934FFA3BEDFB22D3C6124D5FF35AA3EEF2A6DB5C62A1DDFE630D9CFEEFF17FE39D2991452C5C364CBD3CC38A3E1B82F1D62667E8FF38AA8623B859315A707F4981DAD415621937CECAA82A77BF6D6F1EC6B661310D93C2C1BA138919565CA30333BB901D72E034FEA65AC93A583E63B30D6F79B29CAD81ED44E44B98850A68A1CE11992C94300FB4C00035CA62298DC5570E994B5F8567DE977080E534C1A9619F6A4378E7A4E516DA542AA4B59CA07C69CB6F5785ED54AA5AD3F5C323940BFF2DC9C69BD718E11982FFDC0> |-/o <1C60D8A8C9B7FCB6A15C803B3B972EE31F5A721ABF9B8490D1BCABFAF5073D6D0835AA64493F9EC5B8BAE86BFF5C8028599ED438B3807899BF98EB3DF2EE9BBE5DC52FDB77ACA45EA052A40521B13F529CBBBB8B40F192297C658BE1CF979B5618AA4355B6A77C9FC09641> |-/t <1C60D8A8C9B77C8923658EDDAB3B0110E0541AEF79029562B8F178ABD52D36DA68182027DAF6D07A3838148E762E0F79FC3EAF643BD5C14A5690D369D37FA996225662FD8E1444B10508C52C7462B00BE860EBBCF47380> |-/u <1C60D8A8C9B673A5150E5B4673A2F8509C6053BF9EB5BCE99B02E9171DD65E63288C852B7282AD4F0BC688E5C46BA28E1539C627DA912D5BB103F4052D947A58A6EA4F336588B9D3885A70AB63AFB60C65689004EF12E5D84042B20309C03C80A352A88975805A6783E567D46FE9252E5FD527121A7203C607012561A594064D6ED3147861FB65C0855D> |-/y <1C60D8A8C9B7DDB68A55362A042C28DAFF2C0730507D8EDE55635EC9412AC359403D52799F52783F3EF73B1F45345D47CBA26FCDEA377807172DBBA3989C9D89C367DD8A158FFB2E172CA0D76AD6AFC9B4F65BF54D7DF719D343BA3768E01C67ED93998A20BC5C150324885BA768565661184DF75AE84D8CA740174E60946A3379868BBBDA9C9D25638EFF8150C78609488D882D54FF6EFBA9B09C3734494612C73693D1C1044C6F45F9AB8F5FC07F39AC6C63C082405D789398E85DA944890C81F4442ABABCEFC2B1> |-/.notdef <1C60D8A8C9B7A73D40> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/NOAXUW+CMBX10 /ECAAAA+CMBX10 findfont ct_VMDictPut/NOAXUW+CMBX10*1 [46{/.notdef}rp /period 4{/.notdef}rp /three /four 12{/.notdef}rp /A 17{/.notdef}rp /S 13{/.notdef}rp /a /b /.notdef /d 4{/.notdef}rp /i 2{/.notdef}rp /l /.notdef /n /o 4{/.notdef}rp /t /u 3{/.notdef}rp /y 134{/.notdef}rp]NOAXUW+CMBX10 nfNOAXUW+CMBX10*1 [9.96264 0 0 -9.96264 0 0 ]msf3.01323 485.257 mo(4.3AblationStudy)[5.75996 3.24002 17.1601 8.64005 6.36 3.24001 5.52005 4.44008 3.24001 5.75998 10.0801 6.36003 4.44005 6.36005 6.35999 0 ]xshNOAXUU+CMR10*1 [9.96264 0 0 -9.96264 0 0 ]msf3.01323 505.297 mo(Inthissection,weexperimentallyinvestigatethee\013ectsoftwomaj)[3.59993 9.23978 3.84001 5.51993 2.75957 7.56006 3.95998 4.44 4.44 3.84 2.75958 5.03998 5.51994 6.35974 6.96016 8.03986 4.44 5.27992 5.75999 4.44 3.96008 2.75958 8.27991 4.44 5.28006 3.84003 5.04001 2.75955 2.75958 8.88 2.75958 5.27979 5.03973 4.44 3.95999 3.84 2.75958 5.03998 5.04001 3.84 7.91986 3.83997 5.51996 8.15991 4.44 5.75992 4.43997 4.44003 3.84 7.67999 5.03996 6.59979 3.60001 6.96017 8.63986 8.27991 5.63995 0 ]xsh300.613 505.297 mo(ormodules)[5.04001 7.44012 8.27991 5.28021 5.51996 5.51993 2.75958 4.44 0 ]xsh3.01323 517.297 mo(in)[2.75958 0 ]xshNOAXUV+CMTI10*1 [9.96264 0 0 -9.96264 0 0 ]msf14.5331 517.297 mo(STVAE)[5.63997 7.07996 6.47997 7.43996 0 ]xshNOAXUU+CMR10*1 [9.96264 0 0 -9.96264 0 0 ]msf49.0933 517.297 mo(:Detection-and-CalibrationBlock\(DCB\)andSylvesterNFs\(SNFs\))[5.75958 7.56 4.44002 3.84 4.44002 4.43999 3.84003 2.75958 5.03998 5.51994 3.35991 5.04002 5.51991 5.51991 3.35994 7.19998 5.04001 2.75958 2.75958 5.51993 3.96008 5.03998 3.84003 2.75958 5.04001 8.5199 7.07996 2.75958 5.27991 4.20001 8.27991 3.84003 7.56 7.20001 7.07996 7.08014 5.03998 5.51996 8.63989 5.51991 5.27994 2.75958 5.03989 4.43997 3.95999 3.83997 4.44003 6.96005 7.43997 6.47998 7.19983 3.84003 5.51996 7.43994 6.47992 3.95996 0 ]xsh345.973 517.297 mo(.)sh18.0133 529.297 mo(Werecon\014gure)[9.36009 7.08008 3.96005 4.44 4.44 5.03999 5.51994 5.51993 5.03999 5.51994 3.96005 0 ]xshNOAXUV+CMTI10*1 [9.96264 0 0 -9.96264 0 0 ]msf84.7336 529.297 mo(STVAE)[5.63995 7.07997 6.47997 7.43994 0 ]xshNOAXUU+CMR10*1 [9.96264 0 0 -9.96264 0 0 ]msf121.814 529.297 mo(tocreatethreevariantsdescribedasfollows.1\)Pure-)[3.84 7.56 4.44 3.96008 4.44 5.04001 3.84 6.96008 3.83997 5.51996 3.96005 4.44003 7.07983 4.67999 5.03998 3.96008 2.75958 5.03998 5.28003 3.83997 6.35999 5.51993 4.44003 3.95996 4.44 3.96005 2.75958 5.75977 4.43996 8.15994 5.04001 6.47989 2.99991 5.04004 2.75958 2.75958 4.80017 7.19998 3.95999 5.27939 5.04001 6.35999 6.8399 5.51996 3.96008 4.44 0 ]xsh3.01373 541.177 mo(3DVAE:weremovebothmodulesandonlyusevanilla3DconvolutioninVA)[5.03999 7.32018 6.36014 7.44 6.83992 6.11957 6.96016 7.8 3.96005 4.44 8.27994 4.80008 5.03976 7.56015 5.76009 5.03999 3.84001 9 8.27992 5.28015 5.51993 5.5199 2.75958 4.44 7.32016 5.04001 5.51993 8.87976 5.03998 5.51993 2.75958 8.64008 5.51996 3.95996 7.80008 4.68002 5.03998 5.5199 2.75958 2.75958 2.75958 8.39987 5.03998 10.9202 4.43994 5.04004 5.28009 5.03979 5.03998 2.75958 5.51996 3.83997 2.75958 5.04004 8.75983 2.75958 8.87976 6.36017 0 ]xsh339.255 541.177 mo(E.)[6.8399 0 ]xshgrestore
grestore
pgrs
%%PageTrailer
[
[/CSA [/0 /1 ]]
[/CSD [/0 ]]
] del_res
/NOAXUS+*1 uf/NOAXUS+ uf/ uf/NOAXUO+*1 uf/NOAXUO+ uf/ uf/NOAXUW+CMBX10*1 uf/NOAXUW+CMBX10 uf/ECAAAA+CMBX10 uf/NOAXUH+*1 uf/NOAXUH+ uf/ uf/NOAXUK+CMR9*1 uf/NOAXUK+CMR9 uf/XAAAAA+CMR9 uf/NOAXUJ+*1 uf/NOAXUJ+ uf/ uf/NOAXUM+*1 uf/NOAXUM+ uf/ uf/NOAXUV+CMTI10*1 uf/NOAXUV+CMTI10 uf/ACAAAA+CMTI10 uf/NOAXUT+CMBX9*1 uf/NOAXUT+CMBX9 uf/BBAAAA+CMBX9 uf/NOAXUQ+*1 uf/NOAXUQ+ uf/ uf/NOAXUU+CMR10*1 uf/NOAXUU+CMR10 uf/RAAAAA+CMR10 ufAdobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Utils begin
[/EMC pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EOF
